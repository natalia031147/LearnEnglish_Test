namespace LearnEnglish.Data.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class addphases2 : DbMigration
    {
        public override void Up()
        {
            Sql("SET IDENTITY_INSERT [dbo].[VideoPhrases] ON");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1653, 35, 78.688, 80.688, N'of a GradeBook, and write a constructor.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1654, 36, 80.688, 83.688, N'there''s a very easy way to do this in Visual Studio.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1655, 37, 83.688, 86.688, N'If I just typed ctor,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1656, 38, 86.688, 89.688, N'those characters are recognized as one of the code snippets', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1657, 39, 89.688, 90.688, N'in Visual Studio.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1658, 40, 90.688, 93.688, N'What a code snippet allows you to do is just type', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1659, 41, 93.688, 96.688, N'some short sequence of characters, like ctor,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1660, 42, 96.688, 98.688, N'and this is the code snippet for a constructor.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1661, 43, 98.688, 101.688, N'And if I press tab twice,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1662, 44, 101.688, 104.688, N'Visual Studio will do a little bit of code generation', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1663, 45, 104.688, 106.688, N'and write the constructor for me.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1664, 46, 106.688, 108.688, N'I already have the public keyword in place,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1665, 47, 108.688, 110.688, N'and a constructor is a method definition', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1666, 48, 110.688, 112.688, N'where the method name is the same as the class.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1667, 49, 112.688, 114.688, N'Like every method, it has some parentheses', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1668, 50, 114.688, 116.688, N'where I can take parameters, and then the opening', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1669, 51, 116.688, 118.688, N'and closing curly braces.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1670, 52, 118.688, 120.688, N'there''s some other snippets that we''ll see', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1671, 53, 120.688, 121.688, N'throughout this course, but ctor,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1672, 54, 121.688, 122.688, N'that''s one I use every day.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1673, 55, 122.688, 125.688, N'it''s short for constructor, that''s easy to remember.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1674, 56, 125.688, 127.688, N'And now it''s inside of this constructor', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1675, 57, 127.688, 129.688, N'where I can take explicit control over the initialization', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1676, 58, 129.688, 131.688, N'of my object.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1677, 59, 131.688, 133.688, N'It turns out we''re already doing some initialization', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1678, 60, 133.688, 135.688, N'during the construction of a GradeBook,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1679, 61, 135.688, 137.688, N'because when we defined this field,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1680, 62, 137.688, 139.688, N'this field being grades, I''m using What''s known', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1681, 63, 139.688, 142.688, N'as a field initializer syntax here.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1682, 64, 142.688, 144.688, N'I''m saying I want a field named grades,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1683, 65, 144.688, 146.688, N'and I want to immediately initialize it to a new list', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1684, 66, 146.688, 148.688, N'for each GradeBook that is constructed.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1685, 67, 148.688, 153.688, N'So each GradeBook maintains its own list of grades.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1686, 68, 153.688, 155.688, N'Instead of using field initializer syntax,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1687, 69, 155.688, 158.688, N'I could cut this line of code out of here', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1688, 70, 158.688, 159.688, N'and inside of the constructor, say', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1689, 71, 159.688, 163.688, N'grade equals a new list of float.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1690, 72, 163.688, 165.688, N'For the most part, it doesn''t matter if you use', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1691, 73, 165.688, 168.688, N'that field initializer syntax or if you initialize', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1692, 74, 168.688, 170.688, N'a field and constructor.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1693, 75, 170.688, 172.688, N'there''s no obvious differences in terms of performance.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1694, 76, 172.688, 174.688, N'It really comes down to the syntax', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1695, 77, 174.688, 175.688, N'that you''re most comfortable with,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1696, 78, 175.688, 177.688, N'and also some special circumstances.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1697, 79, 177.688, 180.688, N'For example, in a constructor, since it is a method,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1698, 80, 180.688, 182.688, N'I can take some parameters here like maybe I want', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1699, 81, 182.688, 185.688, N'the maximum grade or the maximum number of items', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1700, 82, 185.688, 187.688, N'that I''m going to store in a grade,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1701, 83, 187.688, 189.688, N'and then I need that parameter to pass along', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1702, 84, 189.688, 190.688, N'to other constructors.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1703, 85, 190.688, 192.688, N'that''s a case where I probably wouldn''t use', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1704, 86, 192.688, 194.688, N'field initializer syntax.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1705, 87, 194.688, 198.688, N'I would use explicit initialization inside of a constructor.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1706, 88, 198.688, 200.688, N'But for right now, let''s keep what is known', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1707, 89, 200.688, 201.688, N'as a default constructor.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1708, 90, 201.688, 203.688, N'A default constructor is a constructor', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1709, 91, 203.688, 205.688, N'that doesn''t take any parameters.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1710, 92, 205.688, 207.688, N'So when someone initializes a GradeBook', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1711, 93, 207.688, 209.688, N'and creates an instance using the new keyword,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1712, 94, 209.688, 212.688, N'they don''t have to pass any parameters that arrive here', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1713, 95, 212.688, 214.688, N'to the constructor method.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1714, 96, 214.688, 216.688, N'Just like I''m using the default constructor', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1715, 97, 216.688, 219.688, N'for a list of float, I''m using the new keyword', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1716, 98, 219.688, 220.688, N'and invoking that constructor,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1717, 99, 220.688, 222.688, N'and I don''t pass any parameters along.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1718, 100, 222.688, 224.688, N'And the important concept to take away here', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1719, 101, 224.688, 227.688, N'is that GradeBook is a class, it''s a blueprint', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1720, 102, 227.688, 228.688, N'for creating objects.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1721, 103, 228.688, 229.688, N'it''s a cookie-cutter.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1722, 104, 229.688, 231.688, N'In order to get an object that is an instance', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1723, 105, 231.688, 233.688, N'of this GradeBook class, something that I can use', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1724, 106, 233.688, 236.688, N'and something that I can actually add grades to,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1725, 107, 236.688, 237.688, N'I need to create an object.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1726, 108, 237.688, 239.688, N'And I do that using the new keyword.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1727, 109, 239.688, 242.188, N'I want a new GradeBook or a new list of float.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1728, 110, 242.188, 244.688, N'And now that we know a little bit more about constructors,', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1729, 111, 244.688, 247.688, N'let''s really drill into the details about the differences', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1730, 112, 247.688, 267.688, N'between objects and variables.', N'ro', N'', 86)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1731, 1, 0.752, 3.021, N'One topic I want to make clear before removal', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1732, 2, 3.021, 6.021, N'is the distinction between a class and a variable.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1733, 3, 6.021, 9.021, N'A class is a blueprint for creating objects.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1734, 4, 9.021, 12.021, N'I can use the new keyword with the GradeBook class,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1735, 5, 12.021, 15.021, N'and that creates a GradeBook object for me in memory.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1736, 6, 15.021, 17.021, N'And that GradeBook and hold a list of grades.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1737, 7, 17.021, 21.021, N'I can also use a class to define the type of a variable,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1738, 8, 21.021, 23.021, N'because in C#, every variable needs a type,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1739, 9, 23.021, 25.021, N'and a class defines a particular type.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1740, 10, 25.021, 28.021, N'we''ll see other categories of types in this course.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1741, 11, 28.021, 30.021, N'A class is just one way to create a type.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1742, 12, 30.021, 32.021, N'But when I use a class to type a variable,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1743, 13, 32.021, 35.021, N'it''s because I want to remember some specific object', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1744, 14, 35.021, 37.021, N'when I''m inside of a method.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1745, 15, 37.021, 40.021, N'I want to remember the GradeBook so that I can add grades', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1746, 16, 40.021, 42.021, N'to that specific object and eventually ask it', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1747, 17, 42.021, 44.021, N'to compute some statistical results.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1748, 18, 44.021, 47.021, N'You can think of the variable as a storage location', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1749, 19, 47.021, 49.021, N'that points to a specific object.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1750, 20, 49.021, 52.021, N'let''s make that concept a little more concrete', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1751, 21, 52.021, 54.021, N'using the debugger.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1752, 22, 54.021, 58.021, N'Inside the application, I''ve created a new GradeBook', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1753, 23, 58.021, 59.021, N'and I''m holding on to that book', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1754, 24, 59.021, 61.021, N'through a variable named book.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1755, 25, 61.021, 63.021, N'But what would happen after I add these two grades', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1756, 26, 63.021, 66.021, N'to that GradeBook if I reassign that variable', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1757, 27, 66.021, 69.021, N'and said book is now equal to new GradeBook?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1758, 28, 69.021, 72.021, N'And to make things interesting, let''s add a grade', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1759, 29, 72.021, 75.021, N'to that GradeBook, something different than we have.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1760, 30, 75.021, 76.021, N'So just a 75.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1761, 31, 76.021, 79.021, N'And now I''ll press F10 to start the debugger.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1762, 32, 79.021, 82.021, N'F10 will step through each line of code.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1763, 33, 82.021, 85.021, N'I want to step until I get to the bottom of the program,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1764, 34, 85.021, 87.021, N'and I want to investigate this book variable.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1765, 35, 87.021, 89.021, N'Now the question is, does this book variable', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1766, 36, 89.021, 91.021, N'point to a GradeBook that holds two grades,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1767, 37, 91.021, 94.021, N'the 91 and the 89.5?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1768, 38, 94.021, 96.021, N'Or does it hold one grade, the 75?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1769, 39, 96.021, 98.021, N'Or does it hold three grades?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1770, 40, 98.021, 100.021, N'And the answer is, if I hover over book,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1771, 41, 100.021, 104.021, N'I can see there''s one grade inside, it is the 75.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1772, 42, 104.021, 106.021, N'And that''s because this line of code I added,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1773, 43, 106.021, 108.021, N'book = new GradeBook,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1774, 44, 108.021, 110.021, N'that''s creating a brand-new instance of a GradeBook,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1775, 45, 110.021, 112.021, N'a second instance.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1776, 46, 112.021, 114.021, N'And this new GradeBook will start with an empty', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1777, 47, 114.021, 117.021, N'list of grades until I add that first grade, the 75.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1778, 48, 117.021, 120.021, N'And that is now the object that this book variable refers to', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1779, 49, 120.021, 122.021, N'throughout the rest of the method.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1780, 50, 122.021, 124.021, N'And the lesson is that when I declare a variable', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1781, 51, 124.021, 127.021, N'of type GradeBook, that variable isn''t stuck', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1782, 52, 127.021, 129.021, N'referring to a single object throughout its lifetime.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1783, 53, 129.021, 131.021, N'that''s why it is a variable.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1784, 54, 131.021, 133.021, N'I can take the variable and point it', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1785, 55, 133.021, 135.021, N'to any GradeBook object that I have available,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1786, 56, 135.021, 137.021, N'and then I can invoke methods and do other', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1787, 57, 137.021, 138.021, N'interesting things with that variable.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1788, 58, 138.021, 141.021, N'And in this program now, I''ve created two', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1789, 59, 141.021, 143.021, N'separate GradeBook instances.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1790, 60, 143.021, 145.021, N'But by the time I reach this line of code,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1791, 61, 145.021, 148.021, N'I only have access to the second instance.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1792, 62, 148.021, 150.021, N'I don''t have any variables that refer to that first', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1793, 63, 150.021, 151.021, N'GradeBook that I created.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1794, 64, 151.021, 155.021, N'there''s no way to get back to that, and it''s become garbage.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1795, 65, 155.021, 157.021, N'that''s what we call objects that are no longer being used', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1796, 66, 157.021, 160.021, N'by the program, and the Common Language Runtime', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1797, 67, 160.021, 162.021, N'is smart enough to periodically scan through memory', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1798, 68, 162.021, 164.021, N'and figure out which objects are garbage.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1799, 69, 164.021, 167.021, N'The CLR can then clean those objects up and free up memory', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1800, 70, 167.021, 170.021, N'so that we have more space for other objects.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1801, 71, 170.021, 172.021, N'This is just like cleaning up a hard drive', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1802, 72, 172.021, 174.021, N'by removing files that you no longer need.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1803, 73, 174.021, 176.021, N'You remove files and make space for new files', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1804, 74, 176.021, 177.021, N'that you''re going to use.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1805, 75, 177.021, 179.021, N'But what happens if I want access', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1806, 76, 179.021, 181.021, N'to two different GradeBooks?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1807, 77, 181.021, 184.021, N'Well, that''s when I would need two different variables.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1808, 78, 184.021, 187.021, N'So let''s call this variable book2.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1809, 79, 187.021, 190.021, N'And since this is a new variable, I''m going to need', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1810, 80, 190.021, 193.021, N'to properly declare that variable and provide a type.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1811, 81, 193.021, 196.021, N'So book2 is a variable of type GradeBook.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1812, 82, 196.021, 199.021, N'And now let me right click on the bottom of this program', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1813, 83, 199.021, 200.021, N'and say run to cursor.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1814, 84, 200.021, 202.021, N'that''s another easy way to get the debugger', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1815, 85, 202.021, 205.021, N'just to run to a specific point in your code.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1816, 86, 205.021, 207.021, N'And now I can investigate book2', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1817, 87, 207.021, 210.021, N'and see that it has my one grade, the 75.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1818, 88, 210.021, 212.021, N'But I still have access to the first GradeBook', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1819, 89, 212.021, 214.021, N'through the book variable, and that''s still holding on', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1820, 90, 214.021, 216.021, N'to the two grades that I put inside of there.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1821, 91, 216.021, 219.021, N'And now let''s try one more experiment.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1822, 92, 219.021, 222.021, N'Instead of staying book2 equals a new GradeBook,', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1823, 93, 222.021, 226.021, N'let''s say book2 = book.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1824, 94, 226.021, 228.021, N'And the right question to ask would be to figure out', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1825, 95, 228.021, 231.021, N'if this is making a copy of the original GradeBook.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1826, 96, 231.021, 234.021, N'In other words, will I now have two objects', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1827, 97, 234.021, 236.021, N'of type GradeBook, one with two grades in it?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1828, 98, 236.021, 239.021, N'And will book2, will that GradeBook have three grades in it', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1829, 99, 239.021, 240.021, N'or one grade in it?', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1830, 100, 240.021, 260.02099999999996, N'I''ll show you the answer in the next clip.', N'ro', N'', 87)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1831, 1, 0.5, 2.316, N'When we define a class in C#,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1832, 2, 2.316, 5.316, N'we are creating something that is called a reference type.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1833, 3, 5.316, 7.316, N'We will explore another category of types', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1834, 4, 7.316, 9.316, N'later in the course, but reference types', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1835, 5, 9.316, 11.316, N'are important to understand in C#', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1836, 6, 11.316, 13.316, N'because when we have a variable that is typed', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1837, 7, 13.316, 16.316, N'as a class like GradeBook, which is a reference type,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1838, 8, 16.316, 19.316, N'the variable gives us a place to remember the GradeBook.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1839, 9, 19.316, 22.316, N'But the variable does not hold the GradeBook itself.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1840, 10, 22.316, 24.316, N'The GradeBook is somewhere else in memory,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1841, 11, 24.316, 27.316, N'and the variable holds a pointer to that object in memory.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1842, 12, 27.316, 30.316, N'The variable literally contains a memory address.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1843, 13, 30.316, 33.316, N'So imagine the table on the right-hand side of the screen', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1844, 14, 33.316, 35.316, N'representing a section of memory on your computer,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1845, 15, 35.316, 38.316, N'and each memory location has an address like', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1846, 16, 38.316, 40.316, N'six, seven, eight, nine, 10.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1847, 17, 40.316, 41.316, N'There are billions of these memory cells.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1848, 18, 41.316, 44.316, N'let''s say when we create the GradeBook object,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1849, 19, 44.316, 46.316, N'the runtime placed the start of the object', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1850, 20, 46.316, 48.316, N'at location eight in our computer.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1851, 21, 48.316, 50.316, N'That means the book1 variable, you can think of it', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1852, 22, 50.316, 52.316, N'as holding the value eight, which indicates where', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1853, 23, 52.316, 55.316, N'the GradeBook lives inside of those billions', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1854, 24, 55.316, 57.316, N'of memory addresses in the computer.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1855, 25, 57.316, 59.316, N'it''s like when someone gives you their business card,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1856, 26, 59.316, 61.316, N'you don''t hold the other person, you hold a pointer', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1857, 27, 61.316, 63.316, N'or an address and something that can lead you', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1858, 28, 63.316, 65.316, N'to that person when you need to talk to them', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1859, 29, 65.316, 67.316, N'or you need them to do something for you.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1860, 30, 67.316, 69.316, N'A variable for a reference type holds a pointer.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1861, 31, 69.316, 71.316, N'And when I do something like invoke a method', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1862, 32, 71.316, 74.316, N'with .AddGrade, the runtime takes care', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1863, 33, 74.316, 76.316, N'of following that pointer for me', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1864, 34, 76.316, 78.316, N'and invoking the correct method on the proper object.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1865, 35, 78.316, 81.316, N'One important implication of reference types', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1866, 36, 81.316, 83.316, N'is that I can have multiple variables', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1867, 37, 83.316, 85.316, N'all pointing to the same object.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1868, 38, 85.316, 88.316, N'If I use a line of code like book2 = book1,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1869, 39, 88.316, 91.316, N'then the runtime will copy the value of the book1 variable', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1870, 40, 91.316, 94.316, N'into book2, which means the runtime will copy', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1871, 41, 94.316, 97.316, N'the memory address, eight, into book2.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1872, 42, 97.316, 99.316, N'And now I can use both book1 and book2', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1873, 43, 99.316, 103.316, N'to interact with the exact same GradeBook object.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1874, 44, 103.316, 106.316, N'let''s take a look at this scenario with the debugger.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1875, 45, 106.316, 108.316, N'At the end of the last clip, I included this line of code', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1876, 46, 108.316, 111.316, N'in the project that says book2 = book.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1877, 47, 111.316, 113.316, N'And the way to think about this is that the value', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1878, 48, 113.316, 116.316, N'that is inside of book is copied and placed into book2.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1879, 49, 116.316, 118.316, N'But you must always remember with C#,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1880, 50, 118.316, 122.316, N'that the value inside of book is not a GradeBook object.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1881, 51, 122.316, 124.316, N'it''s just a pointer to a GradeBook object.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1882, 52, 124.316, 126.316, N'So what I''m doing is I''m copying that pointer', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1883, 53, 126.316, 130.316, N'into another variable, and both book and book2', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1884, 54, 130.316, 132.316, N'should now be referencing the same GradeBook.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1885, 55, 132.316, 135.316, N'I can verify that by right clicking and saying', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1886, 56, 135.316, 138.316, N'run to cursor here at the bottom of the main method.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1887, 57, 138.316, 140.316, N'And if we look inside of book, we will see it has', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1888, 58, 140.316, 145.316, N'three grades, 91, 89.5, and then the 75 was added through', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1889, 59, 145.316, 148.316, N'the book2 variable, because book2 points', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1890, 60, 148.316, 150.316, N'to the exact same GradeBook.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1891, 61, 150.316, 152.316, N'Now one thing that might have occurred to you', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1892, 62, 152.316, 154.316, N'as We''ve been using the debugger is:  why can the debugger', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1893, 63, 154.316, 157.316, N'see the grades that are inside of a GradeBook,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1894, 64, 157.316, 161.316, N'but I cannot see those same grades if I stop debugging', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1895, 65, 161.316, 164.316, N'and try to access those grades through', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1896, 66, 164.316, 166.316, N'one of these variables?', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1897, 67, 166.316, 168.316, N'For instance, if I say book2.grades,', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1898, 68, 168.316, 171.316, N'this isn''t available in the IntelliSense list.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1899, 69, 171.316, 173.316, N'The only thing I can get to is really AddGrade', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1900, 70, 173.316, 175.316, N'on that book2 variable; and the same goes', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1901, 71, 175.316, 177.316, N'for the book variable.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1902, 72, 177.316, 179.316, N'So what is it that makes AddGrade available to me', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1903, 73, 179.316, 182.316, N'but not the grades field that is the list of float', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1904, 74, 182.316, 183.816, N'that is inside of a GradeBook?', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1905, 75, 183.816, 203.816, N'let''s talk about that topic next.', N'ro', N'', 88)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1906, 1, 1.758, 4.258, N'I''d like you to be familiar with all of the keywords', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1907, 2, 4.258, 6.258, N'in the program that We''ve been writing', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1908, 3, 6.258, 8.581, N'before we leave this module, and We''ve already talked about', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1909, 4, 8.581, 10.581, N'keywords like namespace and class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1910, 5, 10.581, 12.581, N'But one keyword we haven''t talked about', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1911, 6, 12.581, 15.581, N'is the public keyword that appears in a few places.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1912, 7, 15.581, 18.581, N'C# was designed as an object-oriented language,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1913, 8, 18.581, 21.581, N'meaning it has a built-in syntax to make it easy to define', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1914, 9, 21.581, 24.581, N'and work with objects, like this GradeBook.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1915, 10, 24.581, 27.581, N'The class we wrote defines a blueprint for creating objects', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1916, 11, 27.581, 28.581, N'of type GradeBook.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1917, 12, 28.581, 31.581, N'And one fundamental pillar of object-oriented programming', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1918, 13, 31.581, 33.581, N'is encapsulation.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1919, 14, 33.581, 35.581, N'We use objects that encapsulate the behavior', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1920, 15, 35.581, 37.581, N'in the data that we need the software to perform.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1921, 16, 37.581, 40.581, N'Encapsulation means we are enclosing or hiding', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1922, 17, 40.581, 43.581, N'certain details of how the software works.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1923, 18, 43.581, 45.581, N'Since some details will be hidden from me', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1924, 19, 45.581, 47.581, N'when I use an object, I don''t need to worry about', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1925, 20, 47.581, 49.581, N'those details, and I can be a little more productive.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1926, 21, 49.581, 52.581, N'Software has a tendency to become very complex,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1927, 22, 52.581, 54.581, N'and some applications are so complex,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1928, 23, 54.581, 57.581, N'it''s impossible for one person to know all of the details', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1929, 24, 57.581, 59.581, N'inside of every class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1930, 25, 59.581, 61.581, N'So encapsulation plays an extremely important role', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1931, 26, 61.581, 63.581, N'in software because I can work with objects', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1932, 27, 63.581, 66.581, N'that other people have written without knowing the details', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1933, 28, 66.581, 68.581, N'of how those objects are implemented.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1934, 29, 68.581, 70.581, N'Even a simple class like GradeBook,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1935, 30, 70.581, 72.581, N'which has an AddGrade method,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1936, 31, 72.581, 74.581, N'that encapsulates how the GradeBook is actually', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1937, 32, 74.581, 75.581, N'storing a grade.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1938, 33, 75.581, 77.581, N'When I use a GradeBook object, I don''t care if the grade', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1939, 34, 77.581, 80.581, N'is stored in memory or on disk or in a database', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1940, 35, 80.581, 82.581, N'in the cloud, the GradeBook actually stores', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1941, 36, 82.581, 83.581, N'the grades in a list.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1942, 37, 83.581, 85.581, N'And as I pointed out in the last clip,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1943, 38, 85.581, 88.581, N'I can access this AddGrade method from code', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1944, 39, 88.581, 91.581, N'inside of my program, but I cannot access the list of grades', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1945, 40, 91.581, 94.581, N'in code that is outside of this GradeBook class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1946, 41, 94.581, 97.581, N'that''s because of the keyword public that appears in front', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1947, 42, 97.581, 98.581, N'of the AddGrade method.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1948, 43, 98.581, 101.581, N'Public is what we call an access modifier.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1949, 44, 101.581, 103.581, N'Access modifiers are keywords in C#,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1950, 45, 103.581, 105.581, N'and public is one modifier.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1951, 46, 105.581, 108.581, N'Another access modifier is private.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1952, 47, 108.581, 112.581, N'As the names imply, public makes a class member', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1953, 48, 112.581, 115.581, N'publicly available so that someone can reach and invoke', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1954, 49, 115.581, 118.581, N'a public member like AddGrade from outside of this class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1955, 50, 118.581, 121.581, N'But if I don''t explicitly specify the access modifier', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1956, 51, 121.581, 124.581, N'for a member of the class, the default is to make', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1957, 52, 124.581, 125.581, N'the member private.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1958, 53, 125.581, 128.581, N'And that means the member is only usable from code', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1959, 54, 128.581, 129.581, N'inside of the same class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1960, 55, 129.581, 133.581, N'This is why inside of AddGrade, I can use the grades list,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1961, 56, 133.581, 136.581, N'but no one outside of GradeBook can see this field.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1962, 57, 136.581, 139.581, N'We can say that the storage for grades is encapsulated', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1963, 58, 139.581, 140.581, N'inside of the GradeBook.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1964, 59, 140.581, 142.581, N'we''ll see how this works in code in just a bit.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1965, 60, 142.581, 144.581, N'And I want you to know that public and private', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1966, 61, 144.581, 147.581, N'are just two of the available access modifiers.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1967, 62, 147.581, 149.581, N'we''ll cover more modifiers later in the course.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1968, 63, 149.581, 153.581, N'For now, let''s take a closer look at public and private.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1969, 64, 153.581, 158.581, N'These are arguably the two most important access modifiers.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1970, 65, 158.581, 160.581, N'Inside of our application, let''s see what would happen', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1971, 66, 160.581, 165.581, N'if I were to add the public keyword to my grades field.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1972, 67, 165.581, 167.581, N'Now I will tell you, if you make a member public,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1973, 68, 167.581, 169.581, N'you typically want to expose that member', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1974, 69, 169.581, 170.581, N'with an uppercase letter.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1975, 70, 170.581, 172.581, N'I''m not going to do that for now because we''re not', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1976, 71, 172.581, 174.581, N'going to leave the public modifier here,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1977, 72, 174.581, 177.581, N'but an uppercase letter would be the convention.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1978, 73, 177.581, 180.581, N'Now back in Program.cs, I would have the ability', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1979, 74, 180.581, 183.581, N'to look at the grades through either the book variable', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1980, 75, 183.581, 185.581, N'or the book2 variable.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1981, 76, 185.581, 187.581, N'And this is usually not what you want to do.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1982, 77, 187.581, 189.581, N'You typically want to encapsulate your field', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1983, 78, 189.581, 191.581, N'and encapsulate your data inside of an object.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1984, 79, 191.581, 194.581, N'So I''m going to come back to the GradeBook and remove', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1985, 80, 194.581, 197.581, N'that public access modifier.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1986, 81, 197.581, 199.581, N'And now if we take a look at Program.cs,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1987, 82, 199.581, 201.581, N'I can see the red squiggly line because', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1988, 83, 201.581, 204.581, N'GradeBook.grades is inaccessible', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1989, 84, 204.581, 205.581, N'due to its protection level.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1990, 85, 205.581, 208.581, N'These access modifiers you can think about using them', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1991, 86, 208.581, 211.581, N'to apply protection and encapsulate certain aspects', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1992, 87, 211.581, 213.581, N'of your objects.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1993, 88, 213.581, 216.581, N'If you''re defining a member of a class, like AddGrade,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1994, 89, 216.581, 218.581, N'and you do not provide an access modifier,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1995, 90, 218.581, 221.581, N'that class member will be a private member.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1996, 91, 221.581, 223.581, N'So now, I cannot even access AddGrade', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1997, 92, 223.581, 225.581, N'outside of the GradeBook.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1998, 93, 225.581, 229.581, N'So AddGrade is certainly something that I want to be public.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (1999, 94, 229.581, 231.581, N'I also want the constructor to be public.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2000, 95, 231.581, 234.581, N'Otherwise, the code inside of Program.cs', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2001, 96, 234.581, 236.581, N'wouldn''t be able to instantiate a GradeBook.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2002, 97, 236.581, 238.581, N'The constructor would be hidden,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2003, 98, 238.581, 240.581, N'and many people like to be very explicit', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2004, 99, 240.581, 244.581, N'when they define a field and use the private keyword', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2005, 100, 244.581, 245.581, N'so that when you''re looking through the code,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2006, 101, 245.581, 246.581, N'it''s very obvious that grades is going to be', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2007, 102, 246.581, 249.581, N'a private member of this class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2008, 103, 249.581, 251.581, N'If I did want to hide AddGrade, I could use', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2009, 104, 251.581, 253.581, N'the private keyword here also.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2010, 105, 253.581, 255.581, N'But this is how I want to design the class.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2011, 106, 255.581, 257.581, N'I want the constructor and the AddGrade method', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2012, 107, 257.581, 258.581, N'to be public numbers.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2013, 108, 258.581, 261.581, N'I want the grades, the list of float that stores my data,', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2014, 109, 261.581, 263.581, N'I want that to be private;', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2015, 110, 263.581, 265.581, N'and that gives me some encapsulation.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2016, 111, 265.581, 267.581, N'So we''re just about ready to add some more features', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2017, 112, 267.581, 269.581, N'to our GradeBook, but before we do let''s take a look', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2018, 113, 269.581, 289.581, N'at one more keyword.', N'ro', N'', 89)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2019, 1, 0.5, 2.769, N'One more keyword I want to make you aware of in C#', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2020, 2, 2.769, 4.769, N'is the static keyword.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2021, 3, 4.769, 7.769, N'The static keyword is a bit of an advanced topic,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2022, 4, 7.769, 9.769, N'which we''ll return to in a later module to see', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2023, 5, 9.769, 10.769, N'in more detail.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2024, 6, 10.769, 12.769, N'But I want to give you a basic introduction now', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2025, 7, 12.769, 14.769, N'to explain some of the code that We''ve seen already', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2026, 8, 14.769, 16.769, N'and some of the code that we still need to write.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2027, 9, 16.769, 19.769, N'Members of a class can be marked as static,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2028, 10, 19.769, 21.769, N'meaning static is a keyword that you can apply', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2029, 11, 21.769, 23.769, N'to a method or field.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2030, 12, 23.769, 25.769, N'The code on the screen, imagine it inside', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2031, 13, 25.769, 26.769, N'of the GradeBook class.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2032, 14, 26.769, 29.769, N'It is defining two publicly available fields,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2033, 15, 29.769, 32.769, N'one called minimum grade and one called maximum grade.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2034, 16, 32.769, 34.769, N'And it''s using that field initializer syntax', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2035, 17, 34.769, 38.769, N'to initialize these fields to zero and 100, respectively.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2036, 18, 38.769, 40.769, N'These fields are static fields,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2037, 19, 40.769, 42.769, N'and here''s What''s important about a static field.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2038, 20, 42.769, 46.769, N'A static field or method is something you can access in code', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2039, 21, 46.769, 49.769, N'without creating an instance of a class.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2040, 22, 49.769, 51.769, N'Generally speaking, to do any useful work with a class,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2041, 23, 51.769, 54.769, N'you need to use the new keyword to call a constructor', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2042, 24, 54.769, 56.769, N'and create an instance of the class,', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2043, 25, 56.769, 58.769, N'but there are classes out there with static members', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2044, 26, 58.769, 61.769, N'that can do work without creating an instance.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2045, 27, 61.769, 63.769, N'Instead, you reference the field or the method', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2046, 28, 63.769, 66.769, N'using the type name, and then the name of the field', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2047, 29, 66.769, 67.769, N'or the method.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2048, 30, 67.769, 70.769, N'So GradeBook.MaximumGrade is an expression', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2049, 31, 70.769, 71.769, N'that returned 100.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2050, 32, 71.769, 74.769, N'And I don''t need an instance of GradeBook to use that.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2051, 33, 74.769, 77.769, N'This is how Console.WriteLine works.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2052, 34, 77.769, 80.769, N'Console is a class, but I don''t need to create', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2053, 35, 80.769, 82.769, N'an instance of console to use the class.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2054, 36, 82.769, 84.769, N'It has static methods that I can reach', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2055, 37, 84.769, 86.769, N'and invoke, like WriteLines.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2056, 38, 86.769, 88.769, N'I just use the name of the class and then a dot.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2057, 39, 88.769, 91.769, N'So Console.WriteLine.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2058, 40, 91.769, 93.769, N'I will warn you now that you have to be a little bit careful', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2059, 41, 93.769, 94.769, N'about using statics.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2060, 42, 94.769, 96.769, N'They can have some unfortunate and negative impacts', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2061, 43, 96.769, 98.769, N'on the design of your software.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2062, 44, 98.769, 100.769, N'we''ll talk about some of the ramifications of static', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2063, 45, 100.769, 103.769, N'later in the course, but right now I wanted to make you', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2064, 46, 103.769, 106.769, N'aware of what was happening with that static keyword', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2065, 47, 106.769, 109.769, N'and how we were invoking code like Console.WriteLine.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2066, 48, 109.769, 111.769, N'And we''ll use this knowledge in the next clip', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2067, 49, 111.769, 131.769, N'when we add some more features to the GradeBook.', N'ro', N'', 90)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2068, 1, 2, 3.784, N'What I''d like to do next is figure out how to get', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2069, 2, 3.784, 5.784, N'statistics out of the GradeBook.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2070, 3, 5.784, 7.784, N'Remember the requirements wanting to know', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2071, 4, 7.784, 9.784, N'for a given set of grades,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2072, 5, 9.784, 11.784, N'What''s the highest score, the lowest score', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2073, 6, 11.784, 12.784, N'and the average score?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2074, 7, 12.784, 13.784, N'Sometimes, when I''m not sure what to do,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2075, 8, 13.784, 16.784, N'I make stuff up and then I see if I can get it to work.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2076, 9, 16.784, 18.784, N'For example, I''m thinking if I want a GradeBook', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2077, 10, 18.784, 21.784, N'to compute statistics, then that phrase,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2078, 11, 21.784, 23.784, N'ComputeStatistics, it''s a pretty good', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2079, 12, 23.784, 26.784, N'verb-oriented behavior that I can add to a GradeBook', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2080, 13, 26.784, 27.784, N'as a method.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2081, 14, 27.784, 31.784, N'it''s very clear when I look at a piece of code like this', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2082, 15, 31.784, 33.784, N'what the GradeBook will be doing.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2083, 16, 33.784, 36.784, N'But what will the GradeBook do with those statistics?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2084, 17, 36.784, 38.784, N'Will it store those statistics internally?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2085, 18, 38.784, 41.784, N'Will it expose them somehow so I could see something', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2086, 19, 41.784, 45.784, N'like the lowest grade that is associated with the GradeBook?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2087, 20, 45.784, 47.784, N'But if I can walk up to a GradeBook at any time', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2088, 21, 47.784, 49.784, N'and look at the lowest grade, then why doesn''t the GradeBook', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2089, 22, 49.784, 51.784, N'just compute statistics for me all of the time', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2090, 23, 51.784, 53.784, N'after each grade is added?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2091, 24, 53.784, 55.784, N'This is where you just have to think about', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2092, 25, 55.784, 57.784, N'how are people going to use your objects?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2093, 26, 57.784, 59.784, N'How do people want to use your classes?', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2094, 27, 59.784, 62.784, N'And here''s how I think I would want to solve this problem.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2095, 28, 62.784, 65.784, N'I do want to call a method called ComputeStatistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2096, 29, 65.784, 67.784, N'I do want that word to be explicit', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2097, 30, 67.784, 69.784, N'because the program has reached a point where', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2098, 31, 69.784, 71.784, N'all of the grades are entered and now,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2099, 32, 71.784, 73.784, N'I want to generate those statistics so I can display them', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2100, 33, 73.784, 74.784, N'to the user.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2101, 34, 74.784, 76.784, N'But I don''t want those statistics to be part', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2102, 35, 76.784, 78.784, N'of the GradeBook, and I don''t want something called', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2103, 36, 78.784, 80.784, N'lowest score to be part of the GradeBook.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2104, 37, 80.784, 85.784, N'I''d rather have ComputeStatistics return statistics to me', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2105, 38, 85.784, 87.784, N'or have that method return some object to me', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2106, 39, 87.784, 89.784, N'that will hold the statistics that I need.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2107, 40, 89.784, 91.784, N'That way, the GradeBook is just responsible', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2108, 41, 91.784, 94.784, N'for storing the grades and computing the statistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2109, 42, 94.784, 96.784, N'And I have another object that is responsible for', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2110, 43, 96.784, 99.784, N'and encapsulates the statistical results themselves.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2111, 44, 99.784, 102.784, N'Sometimes, we talk about encapsulation as hiding things', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2112, 45, 102.784, 104.784, N'and certainly, this method, ComputeStatistics', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2113, 46, 104.784, 106.784, N'will hide the algorithms that I need to compute', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2114, 47, 106.784, 109.784, N'the statistics, and that''s nice.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2115, 48, 109.784, 111.784, N'But encapsulation can also be the concept of', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2116, 49, 111.784, 113.784, N'surrounding something, putting information together', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2117, 50, 113.784, 115.784, N'into a single context and into one place,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2118, 51, 115.784, 118.784, N'and that''s what I want the statistics to be.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2119, 52, 118.784, 120.784, N'In other words, perhaps what I really want here', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2120, 53, 120.784, 124.784, N'is to write a new class, GradeStatistics', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2121, 54, 124.784, 126.784, N'so that I can define a variable.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2122, 55, 126.784, 127.784, N'let''s call it stats.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2123, 56, 127.784, 130.784, N'And when I call ComputeStatistics, I can store a reference', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2124, 57, 130.784, 133.784, N'to the computed results inside of the stats variable.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2125, 58, 133.784, 135.784, N'This gives me a separation between the active', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2126, 59, 135.784, 139.784, N'computing statistics and the result of those calculations.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2127, 60, 139.784, 141.784, N'It does mean I''m going to have to create another class,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2128, 61, 141.784, 143.784, N'GradeStatistics, but many times you can reduce', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2129, 62, 143.784, 146.784, N'the complexity of an application by adding more classes.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2130, 63, 146.784, 148.784, N'The GradeBook will now hold the grades.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2131, 64, 148.784, 150.784, N'This GradeStatistics class will hold', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2132, 65, 150.784, 152.784, N'statistical information.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2133, 66, 152.784, 157.784, N'So let''s see if we can get this to run or at least compile.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2134, 67, 157.784, 161.784, N'So I''ll come into the grades project and add another class.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2135, 68, 161.784, 164.784, N'So select class and this add new item dialog.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2136, 69, 164.784, 167.784, N'This will be called GradeStatistics.CS.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2137, 70, 167.784, 170.784, N'I don''t actually have to put the .cs into this dialog box.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2138, 71, 170.784, 172.784, N'Visual Studio will do that for me.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2139, 72, 172.784, 173.784, N'Now I have this class.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2140, 73, 173.784, 175.784, N'If I come back to Program.cs,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2141, 74, 175.784, 177.784, N'you can see I don''t have an error anymore.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2142, 75, 177.784, 180.784, N'Visual Studio now knows what GradeStatistics is,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2143, 76, 180.784, 182.784, N'but we still don''t have a ComputeStatistics', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2144, 77, 182.784, 184.784, N'on our GradeBook.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2145, 78, 184.784, 185.784, N'So let''s add that.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2146, 79, 185.784, 187.784, N'I will expect this to be a public method', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2147, 80, 187.784, 190.784, N'so I can invoke it from outside of GradeBook.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2148, 81, 190.784, 193.784, N'And I expect this method to return an object', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2149, 82, 193.784, 195.784, N'of type GradeStatistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2150, 83, 195.784, 197.784, N'that''s another key that we haven''t talked about yet,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2151, 84, 197.784, 199.784, N'but public is an access modifier and then', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2152, 85, 199.784, 202.784, N'just before the method name, you always have to describe', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2153, 86, 202.784, 204.784, N'what a method returns.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2154, 87, 204.784, 206.784, N'In this case, I''m going to have a method', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2155, 88, 206.784, 209.784, N'named ComputeStatistics,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2156, 89, 209.784, 212.784, N'and this method will return an object', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2157, 90, 212.784, 214.784, N'of type GradeStatistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2158, 91, 214.784, 216.784, N'If a method doesn''t need to return anything,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2159, 92, 216.784, 219.784, N'you can use the void keyword to say that this method', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2160, 93, 219.784, 220.784, N'doesn''t return a value.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2161, 94, 220.784, 223.784, N'So now We''ve learned another keyword in the C# language.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2162, 95, 223.784, 225.784, N'And when you write a constructor,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2163, 96, 225.784, 227.784, N'that''s the only method that you ever write', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2164, 97, 227.784, 229.784, N'where you do not specify a return type.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2165, 98, 229.784, 230.784, N'it''s just an access modifier', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2166, 99, 230.784, 232.784, N'and then the name of the constructor,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2167, 100, 232.784, 234.784, N'which is always the same as the name of the class.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2168, 101, 234.784, 236.784, N'That makes constructors look a little bit different.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2169, 102, 236.784, 239.784, N'So AddGrade doesn''t return anything.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2170, 103, 239.784, 243.784, N'Compute statistics will return a GradeStatistics object.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2171, 104, 243.784, 245.784, N'And right now, Visual Studio will give me an error', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2172, 105, 245.784, 248.784, N'because ComputeStatistics does not return a value.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2173, 106, 248.784, 250.784, N'it''s an error to say you''ll return GradeStatistics', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2174, 107, 250.784, 254.784, N'but then not have a return statement inside of the method.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2175, 108, 254.784, 256.784, N'For right now, let''s just return', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2176, 109, 256.784, 259.784, N'a new instance of GradeStatistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2177, 110, 259.784, 262.784, N'we''ll need to populate this and do some computations.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2178, 111, 262.784, 264.784, N'But for right now, I''m just trying to get the program', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2179, 112, 264.784, 267.784, N'to build, and I should be able to, at this point,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2180, 113, 267.784, 268.784, N'build the solution.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2181, 114, 268.784, 271.784, N'We are not actually computing any statistics,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2182, 115, 271.784, 272.784, N'but that''s okay.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2183, 116, 272.784, 274.784, N'Sometimes in software, you just have to feel your way', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2184, 117, 274.784, 276.784, N'through to the final solution,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2185, 118, 276.784, 278.784, N'and I think, looking at this code,', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2186, 119, 278.784, 281.784, N'that we''re on the right track to computing some statistics.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2187, 120, 281.784, 283.784, N'In the next clip, we can take a closer look at this method', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2188, 121, 283.784, 285.784, N'and figure out how we actually are', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2189, 122, 285.784, 305.784, N'going to do these computations.', N'ro', N'', 91)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2190, 1, 1.75, 5.708, N'Inside of ComputeStatistics in the GradeBook, I need to be able to work with this object', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2191, 2, 5.708, 6.708, N'of type GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2192, 3, 6.708, 8.708, N'I need to do some calculations and ultimately,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2193, 4, 8.708, 10.708, N'I will need to add some fields to that class', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2194, 5, 10.708, 13.708, N'so that I can store the calculation somewhere.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2195, 6, 13.708, 15.708, N'So instead of returning an object immediately,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2196, 7, 15.708, 18.708, N'let me create a variable of type GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2197, 8, 18.708, 21.708, N'We can call it stats, point it to that new instance', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2198, 9, 21.708, 23.708, N'of GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2199, 10, 23.708, 24.708, N'Then we''ll need to write some code', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2200, 11, 24.708, 26.708, N'to compute the statistics and then ultimately,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2201, 12, 26.708, 27.708, N'here at the bottom of the method,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2202, 13, 27.708, 29.708, N'we will return those statistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2203, 14, 29.708, 31.708, N'I know I need to find the highest grade, the lowest grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2204, 15, 31.708, 33.708, N'and the average grade, so let''s start by computing', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2205, 16, 33.708, 34.708, N'the average grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2206, 17, 34.708, 37.708, N'We all know that to compute an average,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2207, 18, 37.708, 39.708, N'I need to sum all of the grades in the grades list', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2208, 19, 39.708, 41.708, N'and then divided by the total number of grades.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2209, 20, 41.708, 43.708, N'So let me create a variable.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2210, 21, 43.708, 46.708, N'let''s call it sum and initialize it to zero.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2211, 22, 46.708, 48.708, N'This will represent the sum of all the grades', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2212, 23, 48.708, 50.708, N'in the GradeBook, and now I need to go to each grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2213, 24, 50.708, 52.708, N'that is in that GradeBook and add it to the sum.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2214, 25, 52.708, 54.708, N'there''s an easy way to do this in C#,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2215, 26, 54.708, 57.708, N'and that is to use a foreach statement.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2216, 27, 57.708, 59.708, N'We will look at the statement in a little more depth', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2217, 28, 59.708, 62.708, N'later in this course, but what I can do with a foreach', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2218, 29, 62.708, 65.708, N'is say foreach grade in the grade collection,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2219, 30, 65.708, 67.708, N'please take that grade and put it into a variable for me.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2220, 31, 67.708, 70.708, N'And I can actually declare this variable inside', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2221, 32, 70.708, 71.708, N'of the foreach statement.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2222, 33, 71.708, 74.708, N'let''s declare the variable, its name will be grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2223, 34, 74.708, 79.708, N'And I say foreach grade in this field grades,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2224, 35, 79.708, 82.708, N'then I apply some curly braces and here''s what will happen.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2225, 36, 82.708, 84.708, N'Any code that I put inside of these curly braces', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2226, 37, 84.708, 86.708, N'will execute once for each grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2227, 38, 86.708, 88.708, N'that is in the grades collection.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2228, 39, 88.708, 91.708, N'If I have the grades 93, 85 and 80,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2229, 40, 91.708, 93.708, N'I''ll execute the code inside of this foreach', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2230, 41, 93.708, 96.708, N'once with the value 93 inside of grade,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2231, 42, 96.708, 98.708, N'and then with an 85 and then with an 80.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2232, 43, 98.708, 101.708, N'So we are looping over this code once for each grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2233, 44, 101.708, 104.708, N'And what I need to do with each grade is add that grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2234, 45, 104.708, 107.708, N'to the sum, so I can say sum = sum', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2235, 46, 107.708, 109.708, N'plus the current grade that I''m looking at.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2236, 47, 109.708, 113.708, N'And there''s actually a shortcut syntax for this in C#.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2237, 48, 113.708, 114.708, N'I can say sum = sum + grade,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2238, 49, 114.708, 118.708, N'or I can say sum += grade,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2239, 50, 118.708, 120.708, N'and those two statements are equivalent.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2240, 51, 120.708, 123.708, N'So sum = sum + grade or sum += grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2241, 52, 123.708, 126.708, N'That will add the value of the grade into that sum variable,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2242, 53, 126.708, 129.708, N'and then I can compute the average just by taking the sum', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2243, 54, 129.708, 131.708, N'and dividing it by the total number of grades', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2244, 55, 131.708, 133.708, N'that are in the list, which I can get easily', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2245, 56, 133.708, 135.708, N'because the list will tell me how many items it holds.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2246, 57, 135.708, 136.708, N'But where do I store that value?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2247, 58, 136.708, 137.708, N'That number, the AverageGrade,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2248, 59, 137.708, 140.708, N'is part of the statistics that I want to publish.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2249, 60, 140.708, 142.708, N'So it''s probably something that I want to add', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2250, 61, 142.708, 144.708, N'to the GradeStatistics class.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2251, 62, 144.708, 146.708, N'let''s come over there,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2252, 63, 146.708, 148.708, N'and I''m going to give this class three fields.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2253, 64, 148.708, 152.708, N'The AverageGrade, and I also need to store', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2254, 65, 152.708, 156.708, N'the HighestGrade and the LowestGrade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2255, 66, 156.708, 158.708, N'So these are three fields that will be present', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2256, 67, 158.708, 160.708, N'for every instance of GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2257, 68, 160.708, 163.708, N'And over in the GradeBook, I ultimately want to say', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2258, 69, 163.708, 166.708, N'stats.AverageGrade equals the average,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2259, 70, 166.708, 169.708, N'except I don''t have access to AverageGrade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2260, 71, 169.708, 171.708, N'because AverageGrade, remember,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2261, 72, 171.708, 175.708, N'if I don''t specify an access modifier for a field or method,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2262, 73, 175.708, 177.708, N'the default is for that class member to be private.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2263, 74, 177.708, 179.708, N'So AverageGrade is only available', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2264, 75, 179.708, 181.708, N'inside of the class, GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2265, 76, 181.708, 184.708, N'I need to add public in front of all three of these fields.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2266, 77, 184.708, 185.708, N'Now earlier, I said you typically want', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2267, 78, 185.708, 187.708, N'to encapsulate fields.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2268, 79, 187.708, 189.708, N'But in this case, the entire purpose of GradeStatistics', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2269, 80, 189.708, 193.708, N'is to collect all those data together and expose it.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2270, 81, 193.708, 195.708, N'I''m going to make all three of these public.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2271, 82, 195.708, 197.708, N'there''s an easy way to do that with Visual Studio.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2272, 83, 197.708, 199.708, N'I''m going to hold down the alt key on the keyboard', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2273, 84, 199.708, 202.708, N'and then click the mouse to select', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2274, 85, 202.708, 204.708, N'three rows inside of the editor.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2275, 86, 204.708, 206.708, N'And now when I type the word public,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2276, 87, 206.708, 208.708, N'I''m typing that across all three lines of code.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2277, 88, 208.708, 210.708, N'So just hold down the alt key and then click', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2278, 89, 210.708, 214.708, N'and hold the mouse to select multiple lines of code.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2279, 90, 214.708, 216.708, N'So I now have three public fields inside of GradeStatistics,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2280, 91, 216.708, 218.708, N'and I should be able to say stats.AverageGrade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2281, 92, 218.708, 222.708, N'I can see I have access to that now.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2282, 93, 222.708, 225.708, N'It will equal sum divided by,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2283, 94, 225.708, 227.708, N'and this is where I can walk up to that list of float,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2284, 95, 227.708, 231.708, N'the grades field, and one of the members that it has in here', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2285, 96, 231.708, 233.708, N'is a member called Count, which will tell me exactly', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2286, 97, 233.708, 236.708, N'how many items are in that list.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2287, 98, 236.708, 238.708, N'One thing I should be careful about is what happens', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2288, 99, 238.708, 240.708, N'if there are no grades that have been entered?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2289, 100, 240.708, 242.708, N'What if I tried to divide by zero', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2290, 101, 242.708, 244.708, N'because grades.Count is zero?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2291, 102, 244.708, 245.708, N'That would be a runtime error', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2292, 103, 245.708, 247.708, N'and something that would crash the program.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2293, 104, 247.708, 249.708, N'This will be a line of code that I need to be careful about.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2294, 105, 249.708, 251.708, N'we''re going to talk about error handling', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2295, 106, 251.708, 253.708, N'in a later module of this course.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2296, 107, 253.708, 254.708, N'For now, we''re just going to assume that the user', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2297, 108, 254.708, 256.708, N'knows what they''re doing', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2298, 109, 256.708, 258.708, N'and they''ll always add at least one grade to the gradebook', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2299, 110, 258.708, 260.708, N'before they call ComputeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2300, 111, 260.708, 263.708, N'If the user doesn''t enter a grade, the program will crash', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2301, 112, 263.708, 265.708, N'and say that it tried to divide something by zero.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2302, 113, 265.708, 267.708, N'But now we have the average grade computer.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2303, 114, 267.708, 269.708, N'What about the highest grade and the lowest grade?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2304, 115, 269.708, 271.708, N'In order to compute that, I''m going to need to keep track', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2305, 116, 271.708, 274.708, N'of what is the highest grade that I''ve seen so far.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2306, 117, 274.708, 277.708, N'So as I''m looking at each grade inside of a foreach loop,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2307, 118, 277.708, 279.708, N'I need to compare that grade to some sort of record', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2308, 119, 279.708, 281.708, N'that I''ve kept about the current highest grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2309, 120, 281.708, 284.708, N'And one way to do that would just be', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2310, 121, 284.708, 286.708, N'to keep a running record of what is the highest grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2311, 122, 286.708, 288.708, N'that I''ve seen so far.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2312, 123, 288.708, 290.708, N'I can do that directly on the stats class and say', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2313, 124, 290.708, 294.708, N'let''s initialize stats.HighestGrade to a very small value,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2314, 125, 294.708, 296.708, N'like zero, so that as we''re executing the code', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2315, 126, 296.708, 298.708, N'inside of here, we can always check to see', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2316, 127, 298.708, 301.708, N'if the current grade is greater than stats.HighestGrade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2317, 128, 301.708, 303.708, N'But many times, I want to examine a piece of code', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2318, 129, 303.708, 305.708, N'and really think a minute about the responsibilities', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2319, 130, 305.708, 306.708, N'about the line of code.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2320, 131, 306.708, 307.708, N'Where does this code belong?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2321, 132, 307.708, 310.708, N'Where should I initialize highest grade?', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2322, 133, 310.708, 312.708, N'And I''m thinking that the initialization', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2323, 134, 312.708, 314.708, N'of the highest grade and the lowest grade members', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2324, 135, 314.708, 318.708, N'will ideally be inside of the GradeStatistics class itself.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2325, 136, 318.708, 321.708, N'I could do that by adding a constructor to this class.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2326, 137, 321.708, 325.708, N'So once again, the code snippet, ctor, press tab twice,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2327, 138, 325.708, 327.708, N'and I can now say inside of here', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2328, 139, 327.708, 328.708, N'that HighestGrade = 0.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2329, 140, 328.708, 330.708, N'And notice I don''t have to say stats', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2330, 141, 330.708, 333.708, N'or access highest grade through some variable.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2331, 142, 333.708, 335.708, N'When you''re inside of a class, you can always access', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2332, 143, 335.708, 337.708, N'a member of that class without going through', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2333, 144, 337.708, 339.708, N'some sort of variable.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2334, 145, 339.708, 341.708, N'More on that later, but HighestGrade now starts', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2335, 146, 341.708, 346.708, N'as a very small value, and I need to initialize LowestGrade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2336, 147, 346.708, 348.708, N'ideally to some really high value.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2337, 148, 348.708, 351.708, N'Perhaps I could just initialize LowestGrade to 100.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2338, 149, 351.708, 354.708, N'I know all of my grades are between zero and 100,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2339, 150, 354.708, 357.708, N'but I do want to show you that on this float type,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2340, 151, 357.708, 358.708, N'there are some static members.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2341, 152, 358.708, 360.708, N'I can see that if I just type float.,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2342, 153, 360.708, 363.708, N'the IntelliSense window shows me some static members', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2343, 154, 363.708, 365.708, N'that are available on the float type.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2344, 155, 365.708, 368.708, N'And one of the static members is max value.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2345, 156, 368.708, 370.708, N'that''s the largest possible number that you could fit', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2346, 157, 370.708, 372.708, N'into a variable of type float.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2347, 158, 372.708, 375.708, N'So I''m going to make LowestGrade this really high value,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2348, 159, 375.708, 377.708, N'and now I can come back to the GradeBook', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2349, 160, 377.708, 379.708, N'and as I inspect each grade, I can see if that grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2350, 161, 379.708, 381.708, N'is higher than the highest grade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2351, 162, 381.708, 383.708, N'or lower than the lowest grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2352, 163, 383.708, 385.708, N'I could do that with an if statement.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2353, 164, 385.708, 388.708, N'I could say if the grade is greater than', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2354, 165, 388.708, 393.708, N'stats.HighestGrade, only then will I execute', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2355, 166, 393.708, 394.708, N'the following code.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2356, 167, 394.708, 396.708, N'We''ve talked about if statements and branching execution', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2357, 168, 396.708, 397.708, N'earlier in the course.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2358, 169, 397.708, 399.708, N'it''s inside of here where I would say okay,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2359, 170, 399.708, 401.708, N'the new highest grade for stats', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2360, 171, 401.708, 404.708, N'will be the grade that I''m currently looking at.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2361, 172, 404.708, 406.708, N'This is one way to write the code.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2362, 173, 406.708, 408.708, N'But let me show you another approach.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2363, 174, 408.708, 410.708, N'I''m going to remove the if statement,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2364, 175, 410.708, 412.708, N'and now I''m going to use another class', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2365, 176, 412.708, 415.708, N'of the .NET framework, the Math class.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2366, 177, 415.708, 417.708, N'Math also has some static members,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2367, 178, 417.708, 420.708, N'members that make it easy to compute a cosine', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2368, 179, 420.708, 423.708, N'or a sine, raise a number to a power and so forth.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2369, 180, 423.708, 426.708, N'It also has these static members, max and min.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2370, 181, 426.708, 428.708, N'These are methods that I can invoke.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2371, 182, 428.708, 430.708, N'And what I do when I invoke Math.Max', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2372, 183, 430.708, 433.708, N'is I pass in two numbers, and Math.Max will return', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2373, 184, 433.708, 435.708, N'the highest or the maximum of those two numbers.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2374, 185, 435.708, 439.708, N'So if I just pass in grade and stats.HighestGrade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2375, 186, 439.708, 442.708, N'and assign the result of this operation', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2376, 187, 442.708, 445.708, N'to stats.HighestGrade, stats.HighestGrade will contain', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2377, 188, 445.708, 447.708, N'the highest number of these two.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2378, 189, 447.708, 450.708, N'I can also do this to set the lowest grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2379, 190, 450.708, 454.708, N'So the lowest grade would equal Math.Min,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2380, 191, 454.708, 459.708, N'or the minimum value between grade and stats.LowestGrade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2381, 192, 459.708, 462.708, N'And now we have some code that will loop over', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2382, 193, 462.708, 464.708, N'all of the grades in our grade collection,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2383, 194, 464.708, 465.708, N'keep track of the highest grade its seen,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2384, 195, 465.708, 467.708, N'the lowest grade its seen;', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2385, 196, 467.708, 470.708, N'and also compute a sum so that it can compute an average.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2386, 197, 470.708, 472.708, N'Once all those numbers are put together', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2387, 198, 472.708, 474.708, N'inside of the GradeStatistics object,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2388, 199, 474.708, 476.708, N'we''ll return it from ComputeStatistics,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2389, 200, 476.708, 479.708, N'and now I should be able to come over into my program', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2390, 201, 479.708, 481.708, N'and use those statistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2391, 202, 481.708, 483.708, N'let''s remove some of those code we added earlier,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2392, 203, 483.708, 485.708, N'and I just want to write out the stats.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2393, 204, 485.708, 487.708, N'First I will also add another grade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2394, 205, 487.708, 490.708, N'let''s add a grade of 75,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2395, 206, 490.708, 492.708, N'then we will compute statistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2396, 207, 492.708, 494.708, N'And I want to write out the average, the highest', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2397, 208, 494.708, 495.708, N'and the lowest.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2398, 209, 495.708, 497.708, N'One way to do a Console.WriteLine really quickly', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2399, 210, 497.708, 500.708, N'is to use another code snippet, a cw snippet.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2400, 211, 500.708, 505.708, N'All I need to do is type the characters cw, press tab twice,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2401, 212, 505.708, 508.708, N'and I now have a line of code to invoke Console.WriteLine.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2402, 213, 508.708, 511.708, N'let''s write out stats.AverageGrade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2403, 214, 511.708, 515.708, N'and then Console.WriteLine, stats.HighestGrade', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2404, 215, 515.708, 519.708, N'and Console.WriteLine, stats.LowestGrade.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2405, 216, 519.708, 521.708, N'I want to run this program without the debugger', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2406, 217, 521.708, 524.708, N'so Control + F5 will do that,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2407, 218, 524.708, 525.708, N'or go to the Debug menu.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2408, 219, 525.708, 527.708, N'And the results I get out would show me that', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2409, 220, 527.708, 530.708, N'the average grade is an 85.16.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2410, 221, 530.708, 533.708, N'The highest grade is a 91, the lowest grade is a 75,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2411, 222, 533.708, 534.708, N'this whole looks correct.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2412, 223, 534.708, 536.708, N'I should change the output so that I put some', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2413, 224, 536.708, 538.708, N'additional text in front of these numbers', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2414, 225, 538.708, 540.708, N'to tell the user exactly what numbers they''re seeing,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2415, 226, 540.708, 542.708, N'but it does look like the gradebook', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2416, 227, 542.708, 543.708, N'is doing the right computations,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2417, 228, 543.708, 546.708, N'and that''s all thanks to a couple of classes', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2418, 229, 546.708, 548.708, N'that We''ve implemented: the GradeBook and GradeStatistics.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2419, 230, 548.708, 550.708, N'Also, thanks to some static members on types', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2420, 231, 550.708, 551.708, N'in the .NET Framework,', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2421, 232, 551.708, 554.708, N'things like Float.MaxValue and Math.Min.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2422, 233, 554.708, 557.708, N'And we now have a GradeBook with some minimal features', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2423, 234, 557.708, 559.408, N'but it''s something that we can build on', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2424, 235, 559.408, 579.408, N'throughout the rest of this course.', N'ro', N'', 92)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2425, 1, 2, 5.075, N'In this module, we looked at quite a few features of the C# language.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2426, 2, 5.075, 7.575, N'We learned how to create a class definition', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2427, 3, 7.575, 9.575, N'and give a class a constructor.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2428, 4, 9.575, 11.575, N'A constructor is a special method used when we create', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2429, 5, 11.575, 13.575, N'an instance of the class using the new keyword.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2430, 6, 13.575, 16.575, N'We also learned how we can construct multiple instances', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2431, 7, 16.575, 18.575, N'of the class, and we can have variables that point', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2432, 8, 18.575, 20.575, N'to these instances, these objects.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2433, 9, 20.575, 23.575, N'Two variables can point to the same object,', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2434, 10, 23.575, 25.575, N'but also point to two different objects.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2435, 11, 25.575, 27.575, N'We also learned about the public and private', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2436, 12, 27.575, 28.575, N'access modifiers.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2437, 13, 28.575, 31.575, N'Those play an important role in encapsulation.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2438, 14, 31.575, 33.575, N'And most importantly, we talked about taking', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2439, 15, 33.575, 35.575, N'some requirements for a GradeBook', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2440, 16, 35.575, 37.575, N'and using those requirements to create classes', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2441, 17, 37.575, 39.575, N'like GradeBook and GradeBook statistics.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2442, 18, 39.575, 41.575, N'Over time, you''ll figure out that these syntax', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2443, 19, 41.575, 42.575, N'of a programming language,', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2444, 20, 42.575, 44.575, N'while it can be challenging to learn,', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2445, 21, 44.575, 46.575, N'can always be mastered over time.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2446, 22, 46.575, 48.575, N'What''s a little more difficult is learning', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2447, 23, 48.575, 49.575, N'good programming practices.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2448, 24, 49.575, 51.575, N'That requires you to always think about', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2449, 25, 51.575, 54.575, N'the responsibilities of each class and method', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2450, 26, 54.575, 57.575, N'and which class is going to encapsulate and be responsible', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2451, 27, 57.575, 58.575, N'for which feature.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2452, 28, 58.575, 60.575, N'we''re going to continue to build on our GradeBook', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2453, 29, 60.575, 80.575, N'and touch on those topics throughout the rest of the course.', N'ro', N'', 93)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2454, 1, 0, 7, N'Hi this is Scott, and in this module we are going to focus on an important topic in C# development.', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2455, 2, 7, 13, N'The topic is Assemblies. Assemblies are the files the C# compiler creates for us, and inside of an assembly', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2456, 3, 13, 18, N'is the code We''ve written for our application. It is nearly impossible to write a C# programming using', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2457, 4, 18, 23, N'only a single assembly, so in this module we will learn how to build assemblies and reference other', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2458, 5, 23, 27, N'assemblies provided by the .NET Framework, as well as third-party assemblies in general.', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2459, 6, 27, 31, N'Along the way, we''ll learn about another vital topic in software development.', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2460, 7, 31, 36, N'The topic is unit testing, and we will learn to write some tests to verify the behavior and functionality of', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2461, 8, 36, 56, N'our GradeBook class.', N'ro', N'', 94)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2462, 1, 0, 4.867, N'Earlier in this course I showed you how to use the C# compiler from the command line.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2463, 2, 4.867, 11.867, N'Remember, the compiler''s name is csc.exe, and I can pass one or more C# source code files to csc,', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2464, 3, 11.867, 15.867, N'and the compiler will produce an executable that I can run in a command window.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2465, 4, 15.867, 21.867, N'that''s how we wrote a hello world program in the first module. Now technically what the C# compiler produces', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2466, 5, 21.867, 27.867, N'is called an assembly. A .NET assembly is a file that contains our compiled code, code that can execute', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2467, 6, 27.867, 32.867, N'under the supervision of the Common Language Runtime. When we are writing a simple program like the Grade', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2468, 7, 32.867, 35.867, N'Book program that We''ve been working on, we don''t need to think about assemblies.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2469, 8, 35.867, 41.867, N'We can just compile and run our program. But on more sophisticated projects, we do need to learn a bit more', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2470, 9, 41.867, 48.867, N'about how to make and also use other assemblies. .NET assemblies are just files that you will store on disk with a', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2471, 10, 48.867, 56.867, N'.exe or .dll extension. Exe is short of executable. An exe file is a file that you can execute directly', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2472, 11, 56.867, 61.867, N'by double-clicking on the file in Windows or using the name of the program from the command line.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2473, 12, 61.867, 68.867, N'The .dll extension is short for dynamic-link library. A dll is a file that you cannot execute directly,', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2474, 13, 68.867, 74.867, N'but another program can load a dll and use the code inside, which means one reason to put code inside of a', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2475, 14, 74.867, 79.867, N'dll is when you are writing code that you want to reuse in multiple applications.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2476, 15, 79.867, 84.867, N'A good example of a reuse is the .NET Framework itself. Some of the classes We''ve been using,', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2477, 16, 84.867, 89.867, N'classes like Console and DateTime, they live inside an assembly that .NET provides.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2478, 17, 89.867, 96.867, N'The assembly''s name is MSCorLib.dll. It is a core library that contains core types.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2479, 18, 96.867, 102.867, N'And many of this cor .NET assemblies like MSCorLib, they live inside a place known as the Global Assembly', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2480, 19, 102.867, 108.867, N'Cache on a Windows machine. You will find the Global Assembly Cache underneath your Windows folder where', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2481, 20, 108.867, 114.867, N'Windows installs inside a folder named Assembly. Inside of there you''ll see additional folders beginning', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2482, 21, 114.867, 120.867, N'with the letters G-A-C, GAC for short. that''s what we call the Global Assembly Cache, the GAC.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2483, 22, 120.867, 125.867, N'The assemblies stored in the GAC are available to use from any .NET program that runs on a machine.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2484, 23, 125.867, 131.867, N'that''s why popular assemblies like MSCorLib, which has the Console and DateTime classes, as well as classes', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2485, 24, 131.867, 136.867, N'like String, these assemblies live in the GAC, so there''s only one copy for the entire machine.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2486, 25, 136.867, 142.867, N'And now that we know that our GradeBook program is a .NET assembly and that we use classes from other', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2487, 26, 142.867, 162.867, N'assemblies like MSCorLib, let''s take a look in Visual Studio to explore this in more detail.', N'ro', N'', 95)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2488, 1, 1, 6.864, N'In this module we''re going to continue to work with the GradeBook that we created in the last video module,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2489, 2, 6.864, 12, N'and here inside of Visual Studio I want to point out some features that relate to creating and using other assemblies.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2490, 3, 12, 18.864, N'First of all, we know now that when I do a build in Visual Studio all of my source code files, all of the .cs', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2491, 4, 18.864, 24.864, N'files will be collected together and built into an assembly, and we can find that assembly if we go to the', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2492, 5, 24.864, 29.864, N'location where we stored this project on disk and open up a command prompt.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2493, 6, 29.864, 35.864, N'The compiler by default will build an assembly into the bin, for binaries, Debug directory.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2494, 7, 35.864, 40.864, N'And inside of here if I list the files, I told you before there''s a number of files in here that are related', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2495, 8, 40.864, 46.864, N'to just debugging information, but Grades.exe that is the assembly that the C# compiler produced, and that is', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2496, 9, 46.864, 51.864, N'an assembly that I can run because it''s an executable, and it prints out statistical information about the', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2497, 10, 51.864, 57.864, N'grades that I''ve entered into the GradeBook. Now what rules does the C# compiler use to produce Grades.exe?', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2498, 11, 57.864, 62.864, N'Why does it pick that name? Why does it pick that extension, .exe?', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2499, 12, 62.864, 69.864, N'I''m going to right-click on the project node Grades and go to Properties, and under Properties I want to go', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2500, 13, 69.864, 75.864, N'to the Application tab. Now back in the last module when we created this project with File, New, Project,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2501, 14, 75.864, 81.864, N'I told Visual Studio that I wanted to create a console application name Grades, so by default Visual Studio', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2502, 15, 81.864, 86.864, N'just configured a number of settings for me. For example, it configured the assembly name to have the same', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2503, 16, 86.864, 90.864, N'name as my project, so the assembly name is going to be Grades.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2504, 17, 90.864, 97.864, N'But how does Visual Studio and the C# compiler then know whether to put on an .exe or a .dll extension?', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2505, 18, 97.864, 102.864, N'The extension is controlled by this Output type setting. it''s in here where I can select if I want this to', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2506, 19, 102.864, 107.864, N'be an application, Console Application or Windows Application. A Windows Application would be an application', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2507, 20, 107.864, 113.864, N'that puts up windows on the screen. Since we''re running this from the command line, we have Console Application selected.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2508, 21, 113.864, 119.864, N'But I just want to show you what would happen if I selected Class Library instead.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2509, 22, 119.864, 127.864, N'A Class Library produces a dll, and if I build this project and I come back out to the console window,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2510, 23, 127.864, 131.864, N'let''s do a directory again, and now I can see I have Grades.dll.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2511, 24, 131.864, 136.864, N'Unfortunately, Grades.dll is not something that I can execute.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2512, 25, 136.864, 140.864, N'Windows will give me an error and says it doesn''t know what to do with this .dll file.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2513, 26, 140.864, 145.864, N'I would get the same sort of error if I came into Visual Studio and tried to run this with the debugger or', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2514, 27, 145.864, 150.864, N'even without the debugger. Visual Studio will tell me a project with an output type of Class Library cannot', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2515, 28, 150.864, 157.864, N'be started directly. So a dynamic-length library that is a .dll file, or what we would more commonly call', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2516, 29, 157.864, 163.864, N'inside of Visual Studio a class library, that is an assembly, but it''s not an assembly that can execute directly.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2517, 30, 163.864, 169.864, N'It has to be loaded into some other program, which will use the classes inside of that dll to do work.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2518, 31, 169.864, 175.864, N'So let me come back and change this back to being a Console Application, and then if I try to run with or', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2519, 32, 175.864, 181.864, N'without the debugger, Visual Studio will rebuild that project, and I have a working executable again.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2520, 33, 181.864, 188.864, N'So Grades.exe is again an assembly that I have on disk that I can execute directly.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2521, 34, 188.864, 192.864, N'And this is not the only assembly involved in the execution of this program.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2522, 35, 192.864, 198.864, N'I''m also relying on other assemblies like MSCorLib to give me classes like Console and Math.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2523, 36, 198.864, 204.864, N'We used the Math class in the last module to help compute some of our statistics like highest grade and lowest grade.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2524, 37, 204.864, 209.864, N'That was inside of GradeBook.cs. Here you can see I''m using the Math type.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2525, 38, 209.864, 214.864, N'Whenever you''re using a class from the .NET Framework, or really any other third-party assembly,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2526, 39, 214.864, 220.864, N'you can always place the cursor on the name of that class and press the F12 key.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2527, 40, 220.864, 227.864, N'What Visual Studio will do is open up an editor window with what looks like the source code to that particular class.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2528, 41, 227.864, 231.864, N'it''s not really the full source code, Visual Studio is just trying to show you What''s available on the Math', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2529, 42, 231.864, 237.864, N'class, and here I can see there are methods to call to get an absolute number and an arctangent and a logarithm.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2530, 43, 237.864, 242.864, N'What I just want to point out here is at the very top of the file Visual Studio will tell me what assembly', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2531, 44, 242.864, 250.864, N'this type lives in. So the Math class that has static methods we can invoke directly, it lives in the assembly mscorlib.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2532, 45, 250.864, 256.864, N'And if I want to see all of the assemblies that I might be using during execution of my program, I can come', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2533, 46, 256.864, 260.864, N'into the Solution Explorer window and open this References node.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2534, 47, 260.864, 267.864, N'All of the little block icons in here are specifying the names of other assemblies that my project references.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2535, 48, 267.864, 272.864, N'So there''s a couple of things to note here. One, by default when you create a new project with Visual Studio,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2536, 49, 272.864, 276.864, N'Visual Studio will give you a number of assembly references. These are common assemblies that many', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2537, 50, 276.864, 281.864, N'applications use, but our application doesn''t actually use all of the assemblies that are listed here.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2538, 51, 281.864, 285.864, N'And that''s okay. it''s not an error to reference an assembly that you don''t use.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2539, 52, 285.864, 291.864, N'In fact, there may not even be a performance overhead to that because .NET will only load an assembly when', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2540, 53, 291.864, 295.864, N'you actually start to use a class from that assembly inside of a program.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2541, 54, 295.864, 302.864, N'But an assembly like System.Net.Http, that''s an assembly that I could use to make calls over the network', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2542, 55, 302.864, 306.864, N'using the HTTP protocol. it''s not something that my program actually does.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2543, 56, 306.864, 313.864, N'I can right-click this assembly and Remove, and I''ll still be able to build the program and everything works.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2544, 57, 313.864, 317.864, N'If you remove an assembly that has a class that you are using, you will get a build error.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2545, 58, 317.864, 323.864, N'Now one assembly that you might notice is not here is MSCorLib, and that''s because MSCorLib is such an', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2546, 59, 323.864, 329.864, N'essential assembly that nearly every .NET application has to have that Visual Studio doesn''t even list that', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2547, 60, 329.864, 334.864, N'assembly in the references. it''s just implied that you''ll be using MSCorLib.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2548, 61, 334.864, 338.864, N'Now one additional feature that I want to point out is quite often you''ll want to be able to see what', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2549, 62, 338.864, 343.864, N'inside of an assembly. You just want to be able to explore and see what classes might be available.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2550, 63, 343.864, 349.864, N'that''s the job of the Object Browser. So if I come to the View menu one, of the options here will be the', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2551, 64, 349.864, 352.864, N'Object Browser window. there''s actually a couple of ways to open this.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2552, 65, 352.864, 358.864, N'I can get to it from the View menu. I can also right-click an assembly over here and say View in Object Browser.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2553, 66, 358.864, 363.864, N'That will open the Object Browser and put the focus right on that assembly inside the Object Browser.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2554, 67, 363.864, 369.864, N'So the Object Browser allows you to look through all of the namespaces and all of the types that are inside', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2555, 68, 369.864, 375.864, N'of an assembly. So I can see here''s my Grades assembly. What''s inside of my Grades assembly?', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2556, 69, 375.864, 381.864, N'There is a Grades namespace, and inside of that namespace I have three classes, the GradeBook Class,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2557, 70, 381.864, 386.864, N'and the GradeStatistics, and the Program classes. Those are all classes that we implemented.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2558, 71, 386.864, 392.864, N'And What''s inside of mscorlib? Inside of mscorlib you''ll find dozens of namespaces, and inside of each', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2559, 72, 392.864, 396.864, N'namespace can be dozens, maybe even over a hundred different types.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2560, 73, 396.864, 403.864, N'So here inside of mscorlib inside of the System namespace, this is where I will find classes like Console.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2561, 74, 403.864, 406.864, N'And if I click on Console, the Object Browser goes one step further.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2562, 75, 406.864, 411.864, N'Over here on the right hand side I can see all of the methods that are available on that Console class.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2563, 76, 411.864, 417.864, N'So I can see that there is a ReadLine, which is a method we used in the first module of this course to read a', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2564, 77, 417.864, 421.864, N'user''s name and find out how much sleep they had the previous evening.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2565, 78, 421.864, 426.864, N'Also inside of here would be the Math class, so that''s another way I could look and explore what can I do', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2566, 79, 426.864, 433.864, N'with this Math class that is in mscorlib. Now so far inside of our Grades program we haven''t needed any', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2567, 80, 433.864, 439.864, N'classes from assemblies that we don''t have referenced. That is when Visual Studio set up this project,', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2568, 81, 439.864, 443.864, N'it gave us access to all of the classes that we''d ever need for this GradeBook.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2569, 82, 443.864, 448.864, N'Most of things that we use are in mscorlib or in System. But in the next clip let''s try something a little', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2570, 83, 448.864, 454.864, N'bit different and see what we have to do if we need to use a class that is in an assembly that we don''t', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2571, 84, 454.864, 474.864, N'currently have referenced.', N'ro', N'', 96)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2572, 1, 0, 7.968, N'When we are executing a program and we want to use a class or a type defined in another assembly,', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2573, 2, 7.968, 12.968, N'we must have that assembly loaded into memory with our program, and this can happen automatically with', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2574, 3, 12.968, 18.968, N'the .NET runtime. The easiest way for assembly loading to happen is to establish what we call an assembly reference.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2575, 4, 18.968, 25.968, N'We can do this inside of Visual Studio and have an assembly appear in that references node that we were just looking at.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2576, 5, 25.968, 30.968, N'When you right-click that node, you can select an option that says Add Reference, which will bring up a', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2577, 6, 30.968, 35.968, N'dialog box, which will allow you to select assemblies from the .NET Framework, as well as assemblies defined', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2578, 7, 35.968, 40.968, N'by other projects that you''ve created in solution or even just assemblies that are just lying around', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2579, 8, 40.968, 45.968, N'somewhere on the disk. But the important part is once I''ve established a reference inside of a project with', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2580, 9, 45.968, 50.968, N'Visual Studio, I can start using the types inside, and the .NET Framework will automatically load that', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2581, 10, 50.968, 57.968, N'assembly when I start using pieces from it during runtime. let''s take a look and see how that works.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2582, 11, 57.968, 62.968, N'Inside of the GradeBook application, I want to try a little experiment with speech and see if I can get our', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2583, 12, 62.968, 68.968, N'program to speak a greeting and perhaps even the grades that are inside of the GradeBook.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2584, 13, 68.968, 75.968, N'And to do this, I''ve read about a class on MSDN, the Microsoft Developer Network, that has a lot of the C# documentation.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2585, 14, 75.968, 84.968, N'The class is called SpeechSynthesizer. And the problem right now is that class lives in an assembly that I don''t reference.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2586, 15, 84.968, 88.968, N'So not only would my program not run, it currently won''t build because I have to have all of my assembly', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2587, 16, 88.968, 94.968, N'references in place for the classes that I''m using before the C# compiler will even build my project.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2588, 17, 94.968, 97.968, N'And Visual Studio''s trying to give me a clue about this. It tells me that the type or the namespace', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2589, 18, 97.968, 103.968, N'SpeechSynthesizer could not be found. Are you missing a using directive or an assembly reference?', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2590, 19, 103.968, 109.968, N'And in this case the problem is an assembly reference. So let me right-click on the References node and', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2591, 20, 109.968, 114.968, N'say Add Reference. Inside of this dialog box under Assemblies I can see a list of all of the framework', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2592, 21, 114.968, 119.968, N'assemblies that are installed on this machine, and there are a number of different ways to establish an', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2593, 22, 119.968, 124.968, N'assembly reference including just browsing to an assembly that is living on my file system somewhere.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2594, 23, 124.968, 130.968, N'But the assembly I want for the SpeechSynthesizer, it is an assembly in the .NET Framework, so I''ll come up', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2595, 24, 130.968, 135.968, N'to the text box here in the upper right of the screen and just search for speech, and I can see there is a', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2596, 25, 135.968, 144.968, N'System.Speech assembly. If I select that checkbox and say OK, I can now see that System.Speech is added to', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2597, 26, 144.968, 151.968, N'my list of assembly references. I can even right-click this assembly, view it in the Object Browser,', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2598, 27, 151.968, 157.968, N'and inside of the Object Browser I can see there''s a System.Speech.Synthesis namespace, and it''s actually', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2599, 28, 157.968, 162.968, N'inside of here where I would find the SpeechSynthesizer class that I want.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2600, 29, 162.968, 167.968, N'And this class has a large number of methods that allow you to select different voices and do all sorts of', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2601, 30, 167.968, 173.968, N'tweaks to the sound and the speech that it''s going to produce, but one of the easiest methods to use is just', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2602, 31, 173.968, 180.968, N'a method called Speak, which takes a string, and the synthesizer will speak the contents of that string.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2603, 32, 180.968, 185.968, N'This is not a static method, so I do need to instantiate the SpeechSynthesizer.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2604, 33, 185.968, 190.968, N'But now when I come back to my program, I still have an error that I might be missing a using directive or an', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2605, 34, 190.968, 193.968, N'assembly reference, but this time I have the assembly reference.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2606, 35, 193.968, 198.968, N'I just need to add a using statement so that the compiler knows this is the', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2607, 36, 198.968, 205.968, N'System.Speech.Synthesis.SpeechSynthesizer class. And now I can create a variable called synth.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2608, 37, 205.968, 213.968, N'let''s set that equal to a new instance of the SpeechSynthesizer class, and let''s say synth.Speak', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2609, 38, 213.968, 222.968, N'Hello this is the grade book program. And now when I run the application, that assembly will be loaded', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2610, 39, 222.968, 227.968, N'into my program; I''ll be able to instantiate that class. And if I run this without the debugger,', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2611, 40, 227.968, 234.968, N'which is Ctrl+F5, that''s the shortcut, hello this is the grade book program, then I have now successfully', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2612, 41, 234.968, 244.968, N'used the speech synthesizer. If I were to come back into Visual Studio and remove this reference, now I will', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2613, 42, 244.968, 251.968, N'start to have errors appear as the compiler, when I do a build, no longer knows where SpeechSynthesizer comes from.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2614, 43, 251.968, 258.968, N'I get an error not only trying to use SpeechSynthesizer, but also just trying to use System.Speech.Synthesis.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2615, 44, 258.968, 263.968, N'that''s not a namespace that the compiler sees in any of the assemblies that I have referenced.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2616, 45, 263.968, 269.968, N'So for most projects that you work on, the default assembly references will not be enough to get the job done.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2617, 46, 269.968, 275.968, N'Quite often you''re going to have some feature like talking to a database or executing business algorithms', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2618, 47, 275.968, 278.968, N'that someone else in your company has written and produced into an assembly.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2619, 48, 278.968, 283.968, N'There are going to be some other features that you need to grab by referencing other assemblies.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2620, 49, 283.968, 287.968, N'Another place where you will have to learn to manage assembly references is when you have multiple projects', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2621, 50, 287.968, 291.968, N'in the solution, and one project depends on another type of project.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2622, 51, 291.968, 296.968, N'Let me clean up this program by removing code that will produce an error, and then we''ll take a look at that', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2623, 52, 296.968, 316.968, N'topic as I introduce you to unit testing with C#.', N'ro', N'', 97)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2624, 1, 0, 6.809, N'In software development, we often need to run our program to see if it is working correctly, but why run and', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2625, 2, 6.809, 12.809, N'inspect the results yourself when you can automate a test and have the computer verify the results?', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2626, 3, 12.809, 18.809, N'This is one advantage to writing unit tests. A unit test is where I write some C# code to test my other C#', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2627, 4, 18.809, 23.809, N'code in an automatic manner. Pluralsight has several courses that cover unit testing in more detail,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2628, 5, 23.809, 28.809, N'so in this course I''m going to stick to some brute force information to get you started.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2629, 6, 28.809, 32.809, N'Visual Studio provides a special project type dedicated to unit test code.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2630, 7, 32.809, 39.809, N'As a software developer, I can use this project to write tests for my classes and verify that they''re behaving correctly.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2631, 8, 39.809, 45.809, N'The unit test project produces an assembly with my test code, and my test assembly typically has to reference', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2632, 9, 45.809, 50.809, N'another assembly with the code that is being tested. For example, if I want to make sure that the GradeBook', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2633, 10, 50.809, 55.809, N'computes the proper statistics, I''d create a new test project and write some test code where that test', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2634, 11, 55.809, 60.809, N'project will reference the assembly with the GradeBook. That way inside of a unit test I can use the', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2635, 12, 60.809, 65.809, N'GradeBook, I can instantiate that class, I can give it different grades and look at the output.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2636, 13, 65.809, 69.809, N'let''s take a look and see how this works and start writing some tests, which throughout the rest of this', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2637, 14, 69.809, 75.809, N'course you''ll learn not only how to verify the behavior of your code, but I''ll show you how you can use unit', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2638, 15, 75.809, 79.809, N'tests to experiment and learn about the C# language.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2639, 16, 79.809, 86.809, N'Inside of Visual Studio, before I can begin testing my GradeBook, I have to be set up with a unit testing project.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2640, 17, 86.809, 92.809, N'There are many ways to run unit tests on the .NET Framework. I''m going to show you one way to do this with Visual Studio.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2641, 18, 92.809, 97.809, N'I''m going to go to the Solution Explorer window and right-click on the Solution, the Grades Solution,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2642, 19, 97.809, 100.809, N'because what I want to do is add another project to the Solution.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2643, 20, 100.809, 105.809, N'One of the nice things about solutions in Visual Studio is they can contain multiple projects.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2644, 21, 105.809, 110.809, N'Each project has its own set of source code for a particular piece of the application.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2645, 22, 110.809, 114.809, N'I''m going to Add a New Project that will be a unit testing project.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2646, 23, 114.809, 119.809, N'So instead of selecting Console Application, which we did for the GradeBook, I''m going to go to this Test', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2647, 24, 119.809, 129.809, N'node and select Unit Test Project, and let''s call this project Grades.UnitTests, or perhaps let''s just call', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2648, 25, 129.809, 134.809, N'it Grades.Test. So that will be the name of my project and also the name of the assembly that this project', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2649, 26, 134.809, 140.809, N'produces, Grades.Tests.dll. This assembly will just contain the compiled test code.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2650, 27, 140.809, 146.809, N'There will be a different tool, a different program that will load this library and execute the tests inside', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2651, 28, 146.809, 153.809, N'and show me the results. And once I select OK, Visual Studio will create this project, add it to my', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2652, 29, 153.809, 161.809, N'solution, and any time I do a build I''ll be building both the Grades assembly and the Grades.Tests assembly.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2653, 30, 161.809, 168.809, N'Now before we even write any code, let me go to the Test menu in Visual Studio, and I''m going to say Run All the Tests.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2654, 31, 168.809, 174.809, N'This will launch a test runner that is included in Visual Studio, and after building both of my projects,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2655, 32, 174.809, 178.809, N'this test runner will go looking for tests that are in Grades.Tests.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2656, 33, 178.809, 183.809, N'And I can see in this Test Explorer window that popped up on the left hand side there''s a single method,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2657, 34, 183.809, 187.809, N'TestMethod1, and the green checkmark tells me that test passed.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2658, 35, 187.809, 192.809, N'Of course we''re not really testing any functionality yet, and before we do I just want to run through some of', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2659, 36, 192.809, 197.809, N'the basics of a unit test. And one of the first things I''m going to do is actually drab this Test Explorer', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2660, 37, 197.809, 203.809, N'window and dock it down here beneath my Solution Explorer just because I always prefer my code to be on the', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2661, 38, 203.809, 209.809, N'left hand side of the screen. And now let me introduce you to some of the code that is inside of a file here.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2662, 39, 209.809, 217.809, N'This file is called UnitTest1.cs, and inside of here is a class, UnitTest1, and a method, TestMethod1.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2663, 40, 217.809, 224.809, N'We also have a new syntax feature of C#, a syntax feature that allows us to tell a test runner what methods', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2664, 41, 224.809, 229.809, N'are tests methods, that is methods that should be executed and checked to see if they passed or failed,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2665, 42, 229.809, 234.809, N'and also a piece of information to identify a class that has test methods.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2666, 43, 234.809, 238.809, N'So this syntax with the square brackets, these are known as attributes in C#.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2667, 44, 238.809, 242.809, N'we''re going to talk about attributes in more detail later in the course, but for now you can think of an', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2668, 45, 242.809, 247.809, N'attribute as a piece of data that is associated with a class or a method.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2669, 46, 247.809, 252.809, N'You can actually associate an attribute with all sorts of different types and members in a C# application,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2670, 47, 252.809, 257.809, N'but again that''s later in the course. For right now, just know that if you''re going to write a test that the', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2671, 48, 257.809, 263.809, N'test runner will run for you, you want to put that code inside of a method that has a TestMethod attribute', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2672, 49, 263.809, 269.809, N'with the square brackets around it, and that method goes into a class, a public class that has this TestClass', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2673, 50, 269.809, 275.809, N'attribute, and these attributes just sit directly on top of the language element that they are associated with.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2674, 51, 275.809, 280.809, N'So TestClass is associated with a class; TestMethod is associated with a method.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2675, 52, 280.809, 284.809, N'And what the test runner will do is just find all of your test classes, instantiate each one,', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2676, 53, 284.809, 290.809, N'execute the methods that are inside of each one, and then determine if a method passes or fails.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2677, 54, 290.809, 295.809, N'How does the test runner know if a method passed or failed? Well, if there was no error that occurs inside', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2678, 55, 295.809, 299.809, N'of test method, the test runner will assume that the test has passed.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2679, 56, 299.809, 306.809, N'But I can use a class that is in this namespace, Microsoft.VisualStudio.TestTools.UnitTesting.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2680, 57, 306.809, 312.809, N'This class is called a Assert, and I can use this Assert class to make assertions about a particular piece of', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2681, 58, 312.809, 318.809, N'data or a particular facet of my program. And if those assertions don''t hold true, they will raise an error', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2682, 59, 318.809, 324.809, N'and fail my test. In other words, once I dot into this Assert class, I can see all sorts of methods that are', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2683, 60, 324.809, 333.809, N'available like AreEqual, AreNotSame, AreSame, Fail, IsFalse, IsTrue, so I can try to make an assertion like', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2684, 61, 333.809, 342.809, N'are 3 and 4 equal? And if I run all of my tests again, the Test Explorer will tell me that no I have a failing test.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2685, 62, 342.809, 348.809, N'I know that now because of all the red that shows up. And I can actually click on TestMethod1, and I can see', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2686, 63, 348.809, 353.809, N'some more detail here on the right side, AreEqual failed. Expected 3, Actual 4.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2687, 64, 353.809, 360.809, N'That means I expected a value 3, I expected that to match the value 4, but we all know that 3 is not equal', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2688, 65, 360.809, 366.809, N'to 4, so this test failed. And if I double-click on this method, Visual Studio will actually place the cursor', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2689, 66, 366.809, 371.809, N'inside of that method. That way if a test fails and I don''t have the file open, it''s very easy to double-click', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2690, 67, 371.809, 378.809, N'a test and go directly to the source code. If I change Assert.AreEqual where I expect a 3 and the result to', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2691, 68, 378.809, 385.809, N'compare it to is a 3, now if I run all the tests, I am back to having a passing test.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2692, 69, 385.809, 389.809, N'And so the ultimate goal with my unit test will be this: I want to make sure that the GradeBook is behaving', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2693, 70, 389.809, 395.809, N'correctly, so I want to write one or more test methods that will feed some data into the GradeBook and then', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2694, 71, 395.809, 399.809, N'make assertions about the GradeStatistics that the GradeBook returns.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2695, 72, 399.809, 403.809, N'Did it find the correct high grade, the correct low grade? Did it compute the correct average?', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2696, 73, 403.809, 409.809, N'In order to do that, I''m going to create a new test class with new test methods, and for now I''m going to get', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2697, 74, 409.809, 414.809, N'rid of UnitTest1. This is really just sort of a sample file that Visual Studio gives you so that you can see', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2698, 75, 414.809, 420.809, N'the proper syntax for writing a unit test. But now that we know that syntax, we can create a source code', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2699, 76, 420.809, 425.809, N'file with a better name and better tests name inside, test names that are related to the GradeBook.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2700, 77, 425.809, 445.809, N'let''s do that next.', N'ro', N'', 98)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2701, 1, 0, 6.307, N'I want to be able to write some tests that will test the functionality of my GradeBook, so I''m going to', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2702, 2, 6.307, 14.307, N'right-click on Grades.Tests on that project, and let''s Add a Class because tests are nothing more than code', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2703, 3, 14.307, 18.307, N'that exists inside of test methods that are inside of a test class.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2704, 4, 18.307, 27.307, N'So I will call this class GradeBookTests and press Enter. Visual Studio will add that class to the project.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2705, 5, 27.307, 34.307, N'I want this to be a test class, and in order to use that attribute I''m going to need the namespace that we', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2706, 6, 34.307, 38.307, N'talked about earlier, Microsoft.VisualStudio.TestTools.UnitTesting.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2707, 7, 38.307, 42.307, N'And the easiest way to add that is to click on the lightbulb and then select that option.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2708, 8, 42.307, 48.307, N'I now have that using statement in place, and I can write a TestMethod, my first TestMethod.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2709, 9, 48.307, 53.307, N'So there are various philosophies about how to name your test classes, how to name your test methods,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2710, 10, 53.307, 58.307, N'how much code to put inside of a method and a class. I''m going to leave it up to all the other Pluralsight', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2711, 11, 58.307, 64.307, N'video''s about unit testing to talk about the different perspectives and subtleties of how to organize test codes.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2712, 12, 64.307, 67.307, N'For right now, I''m just going to brute force my way, and here''s what I want to do.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2713, 13, 67.307, 71.307, N'I want to be able to instantiate a GradeBook, I want to be able to give it some data, and I want to write', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2714, 14, 71.307, 76.307, N'assertions to make sure that the GradeBook computes the correct highest grade.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2715, 15, 76.307, 81.307, N'And to do that I''m going to write a public method that does not return anything, so I''ll use the void keyword.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2716, 16, 81.307, 90.307, N'This method I''ll just name it ComputesHighestGrade, and inside of the method I want to use the GradeBook.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2717, 17, 90.307, 95.307, N'Right now there are a couple of obstacles that will prevent me from using the GradeBook.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2718, 18, 95.307, 101.307, N'One obstacle is that Grades.Test, this assembly doesn''t know about the other project, the Grades project.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2719, 19, 101.307, 107.307, N'Even though they''re in the same solution, I''m not going to be able to use GradeBook until I establish a', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2720, 20, 107.307, 113.307, N'reference from Grades.Test to the Grades. So just like I did with the speech synthesizer, let me right-click', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2721, 21, 113.307, 120.307, N'References and select Add Reference, but this time instead of selecting a framework assembly I''m going to go', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2722, 22, 120.307, 125.307, N'to this Projects node. The Projects node will list all of the other projects that are available in a', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2723, 23, 125.307, 131.307, N'solution, which makes it very easy to just come in and select a checkbox and say yes, I want to reference the', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2724, 24, 131.307, 136.307, N'assembly that is produced by this other project, the Grades assembly.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2725, 25, 136.307, 140.307, N'That will give me a reference to that other project, but I still have another obstacle.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2726, 26, 140.307, 145.307, N'If I look at the error that Visual Studio is giving me, it''s telling me that GradeBook is inaccessible due to', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2727, 27, 145.307, 150.307, N'its protection level. So when you start working with multiple assemblies, you need to know a little bit more', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2728, 28, 150.307, 154.307, N'about protection levels than I''ve described so far. let''s look at the GradeBook.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2729, 29, 154.307, 160.307, N'Protection levels are established by those access modifiers that we talked about in the last module,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2730, 30, 160.307, 168.307, N'access modifiers like public and private. We know that if I mark a field or any class member as private that', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2731, 31, 168.307, 172.307, N'that field is not available to the code that is outside of this class.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2732, 32, 172.307, 177.307, N'that''s one way to achieve encapsulation in C#. And anything I make public will be available to anyone who', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2733, 33, 177.307, 183.307, N'writes code who has an instance of GradeBook around. So We''ve seen these keywords on class members,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2734, 34, 183.307, 189.307, N'but what I didn''t tell you is that there are also access modifiers available at the class level.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2735, 35, 189.307, 195.307, N'And by default if you don''t specify the access level for a class, by default it will be internal,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2736, 36, 195.307, 199.307, N'and there''s actually a C# keyword that I could place here to make that very explicit.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2737, 37, 199.307, 206.307, N'This is an internal class, and internal class can only be used by code that is inside of the same project.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2738, 38, 206.307, 212.307, N'So when a grade book is internal, I can use this in other places inside of the same project, so I can use the', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2739, 39, 212.307, 220.307, N'GradeBook from Program.cs, it''s part of the same assembly, but I will not be able to use GradeBook from GradeBookTests.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2740, 40, 220.307, 225.307, N'it''s essentially hidden from this project. If I want to make GradeBook available, I need to explicitly mark', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2741, 41, 225.307, 232.307, N'this class as public. That means I can use this GradeBook inside of this assembly, the Grades assembly,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2742, 42, 232.307, 238.307, N'as well from any assembly that references the Grades assembly. And yes, Grades is an .exe file,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2743, 43, 238.307, 243.307, N'which we don''t typically think of as a library that someone else would consume, but in .NET it''s perfectly', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2744, 44, 243.307, 250.307, N'legal to reference a dll or an exe file. So the Test project is referencing the Grades project.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2745, 45, 250.307, 256.307, N'It will now have access to this GradeBook class. It will be able to instantiate it except the C# compiler is', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2746, 46, 256.307, 261.307, N'going to check the access levels of all the classes that are involved with the GradeBook, and you can see', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2747, 47, 261.307, 265.307, N'right now I have an error. This error is an inconsistent accessibility error.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2748, 48, 265.307, 271.307, N'it''s telling me that GradeStatistics is less accessible then the method ComputeStatistics.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2749, 49, 271.307, 275.307, N'it''s a complicated error message, but it''s actually easy to reason through this one.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2750, 50, 275.307, 281.307, N'ComputeStatistics is available to anyone who has access to a GradeBook, but ComputeStatistics returns an', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2751, 51, 281.307, 288.307, N'object that is of type GradeStatistics. And if we look at GradeStatistics, the problem is that this class,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2752, 52, 288.307, 294.307, N'by default, is an internal class, it''s not visible outside of the project, so it doesn''t make sense to give', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2753, 53, 294.307, 301.307, N'access to a method that anyone can use if it returns a type that no one outside can see.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2754, 54, 301.307, 302.307, N'And there are a couple of different ways to solve this problem.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2755, 55, 302.307, 309.307, N'One way to solve this problem is that I can use that internal keyword to mark just this method as internal,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2756, 56, 309.307, 315.307, N'and that means anyone will be able to see this class even outside assemblies, but only code inside of the', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2757, 57, 315.307, 321.307, N'same assembly will be able to see and invoke this method. But I consider this part of the public API for our', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2758, 58, 321.307, 326.307, N'GradeBook, and certainly for my unit testing project I want to be able to instantiate a GradeBook and give it', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2759, 59, 326.307, 332.307, N'some data and then ask it to compute statistics, so I want this to be a public method.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2760, 60, 332.307, 338.307, N'And because I''m returning something that is of GradeStatistics, the other way to solve this problem is to', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2761, 61, 338.307, 345.307, N'make this class public also. Now anyone who references the assembly can reach the GradeBook, they can reach', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2762, 62, 345.307, 349.307, N'GradeStatistics, they can invoke ComputeStatistics, everything should work for me.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2763, 63, 349.307, 357.307, N'So inside of GradeBooksTests all I need now is my namespace, Grades, and I should be able to declare a', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2764, 64, 357.307, 367.307, N'variable of type GradeBook and instantiate a GradeBook, tell the book to add a grade, let''s choose a grade of 10,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2765, 65, 367.307, 376.307, N'and let''s choose a grade of 90. And now let''s get some statistics, so GradeStatistics the result.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2766, 66, 376.307, 381.307, N'That is what happens when I call book.ComputeStatistics. And now I want to write an assertion.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2767, 67, 381.307, 393.307, N'I want to assert that the following two things are equal: I expect a value of 90 when I ask for result.HighestGrade.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2768, 68, 393.307, 399.307, N'And with that assert in place, let me go to Test and say run all the tests, Visual Studio will build the', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2769, 69, 399.307, 405.307, N'project, and then you''ll notice a funny thing here. It doesn''t seem to execute the test; it doesn''t seem to', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2770, 70, 405.307, 411.307, N'find that test. Over here it says one test passed, but that was the last test run, and I don''t see a test', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2771, 71, 411.307, 417.307, N'listing in this window. that''s because the test runner, it''s only going to execute the test code that is', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2772, 72, 417.307, 424.307, N'inside of a class marked with TestClass, that attribute, and it also has to be a public class.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2773, 73, 424.307, 429.307, N'By default this class was internal. It was only visible to code that was inside of the same project.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2774, 74, 429.307, 436.307, N'Now I''ve made it public. Let me try to run the test one more time, and I can see that that test is passing,', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2775, 75, 436.307, 442.307, N'and my GradeBook is producing the right result. What happens if someone comes into the GradeBook and they', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2776, 76, 442.307, 445.307, N'manipulate code to the point where the GradeBook no longer works properly?', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2777, 77, 445.307, 451.5, N'that''s when my tests should fail. Slash, Slash, by the way, is a way to comment out a single line of code in', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2778, 78, 451.5, 459, N'C# so it doesn''t execute. And now anytime I make changes to ComputeStatistics, I at least of have one test', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2779, 79, 459, 464.5, N'in place that will make sure the GradeBook is doing part of its job correctly.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2780, 80, 464.5, 484.5, N'let''s write just a few more tests and see if we can make this a little more robust.', N'ro', N'', 99)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2781, 1, 0, 8.274, N'let''s write some tests to make sure that the GradeBook is computing the proper lowest grade and proper average grade.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2782, 2, 8.274, 14.274, N'To do this, I''m going to make a copy of ComputesHighestGrade by selecting that method, pressing Ctrl+C,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2783, 3, 14.274, 19.274, N'and then Ctrl+V to paste it in. Anytime you do a copy, paste operation in code, you should really take a', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2784, 4, 19.274, 23.274, N'step back and make sure that that''s the proper approach to solving a problem.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2785, 5, 23.274, 27.274, N'Copy and paste is duplicating code throughout the software, and that''s generally something that we try to avoid.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2786, 6, 27.274, 33.274, N'However, inside of a unit test we often allow for duplicate code because it makes the tests a little more', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2787, 7, 33.274, 37.274, N'explicit and clear, and that''s what I''m going to do here. I''m going to duplicate a lot of code, but I am', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2788, 8, 37.274, 43.274, N'also going to change the name of this method because now we''re going to check that we compute the lowest grade properly.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2789, 9, 43.274, 51.274, N'I''ll still add the same grades to the GradeBook, but now I want to have an assertion that 10 is result.LowestGrade.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2790, 10, 51.274, 60.274, N'Now I can run all tests by going the test menu or by pressing Ctrl+R and then the A key that will run all tests.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2791, 11, 60.274, 67.274, N'And I now have two passing tests. Let me paste a copy of ComputesHighestGrade, which I still have in my', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2792, 12, 67.274, 73.274, N'clipboard, only this time we will check to see if we compute the average grade.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2793, 13, 73.274, 77.274, N'And this time I want to add some slightly different data to the GradeBook to make things a little more interesting.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2794, 14, 77.274, 87.274, N'So instead of adding 10 and 90, let''s add the same grades that we are adding inside of Program.cs.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2795, 15, 87.274, 93.274, N'So I will take that code and copy and paste it inside of here. Then we can compute the statistics,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2796, 16, 93.274, 100.274, N'and this time I want to check the result.AverageGrade. And if I enter those results into a calculator,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2797, 17, 100.274, 107.274, N'the calculator will tell me that the average of those three numbers is an 85 followed by 1 and then 12 6''s,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2798, 18, 107.274, 116.274, N'1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, and then a 7. Let me run all the tests again, Ctrl+R and then A,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2799, 19, 116.274, 120.274, N'and I now have a failing test, which will teach us an interesting lesson.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2800, 20, 120.274, 129.274, N'Let me click on that test, and I will see that this 85.16 number is not equal to an 85.16 number that is slightly different.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2801, 21, 129.274, 134.274, N'And the important lesson is that it''s very difficult to make assertions about floating point numbers and say', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2802, 22, 134.274, 140.274, N'that two numbers are going to be exactly equal because there can always be a little bit of imprecision inside', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2803, 23, 140.274, 144.274, N'of the computer because of the way that it represents floating point numbers.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2804, 24, 144.274, 149.274, N'This could be a topic that we could spend a lot of time on, but let me just show you a couple different solutions.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2805, 25, 149.274, 153.274, N'One is you might remember there are two ways to represent a floating point number in C#.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2806, 26, 153.274, 158.274, N'there''s the double type and there''s the float type. Double is double-precision floating-point, and the float', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2807, 27, 158.274, 164.274, N'type is single-precision floating-point. You might remember from an earlier module when I tried to assign a', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2808, 28, 164.274, 169.274, N'number like this to a variable of type float the C# compiler wouldn''t allow me to do that because by default', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2809, 29, 169.274, 174.274, N'a number like this will be treated as a double-precision floating-point number.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2810, 30, 174.274, 178.274, N'And really What''s happening here is I''m comparing a double-precision floating-point number to a single-', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2811, 31, 178.274, 184.274, N'precision floating-point number, and just like I did in a previous module I could append an f to this literal', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2812, 32, 184.274, 189.274, N'number, and now at least the C# compiler will treat that as a single-precision floating-point number and', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2813, 33, 189.274, 195.274, N'compare it to another single-precision floating-point number. But more commonly what you want to do is this:', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2814, 34, 195.274, 200.274, N'I don''t particularly need the GradeBook to store this many digits after the decimal.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2815, 35, 200.274, 206.274, N'Perhaps I really only care about two digits after the decimal. And any time you compare floating-point', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2816, 36, 206.274, 211.274, N'numbers or double-precision floating-point numbers inside of a unit test with things like AreEqual,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2817, 37, 211.274, 216.274, N'there''s typically an option that allows you to specify are these two numbers close enough?', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2818, 38, 216.274, 221.274, N'And you can see in this IntelliSense window when I Assert.AreEqual on types of double or of float,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2819, 39, 221.274, 228.274, N'I would find that inside of here also. I can specify the expected value, what the actual computed value is,', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2820, 40, 228.274, 233.274, N'and then a delta, which allows those two numbers to vary by that delta amount.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2821, 41, 233.274, 241.274, N'Let me specify a delta of 0.01 and run these tests. And I''m back to three passing tests, and I now know that', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2822, 42, 241.274, 246.5, N'the GradeBook is going to compute the proper average with the right amount of precision that I need for', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2823, 43, 246.5, 266.5, N'whatever application that I''m building with this GradeBook.', N'ro', N'', 100)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2824, 1, 0, 7.541, N'In this module we learned that Visual Studio and the C# compiler will compile our code into an assembly.', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2825, 2, 7.541, 12.541, N'By default the assembly name will have the same name as the project, and then we''ll have a dll or exe', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2826, 3, 12.541, 17.541, N'extension depending on if you were building a class library or a program to execute directly.', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2827, 4, 17.541, 22.541, N'We also learned that we need more than one assembly for most applications, and we now know how to add', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2828, 5, 22.541, 28.541, N'references to other assemblies, both .NET assemblies, as well as other assemblies in our solution.', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2829, 6, 28.541, 32.541, N'In our solution we had to add a reference from the testing project to the grades project so that the test', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2830, 7, 32.541, 38.541, N'could see the GradeBook. Remember we also had to mark our Grade and our GradeStatistics classes as public so', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2831, 8, 38.541, 43.541, N'that the test project could use the GradeBook and the statistics that it computes.', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2832, 9, 43.541, 49.541, N'So in .NET all the types we create will live in an assembly, and the classes that We''ve built they are one', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2833, 10, 49.541, 55.541, N'specific type that we can create in .NET. In the next module we''ll see additional types that we create and', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2834, 11, 55.541, 75.541, N'understand two fundamental categories of types in .NET.', N'ro', N'', 101)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2835, 1, 0, 5, N'Hi, this is Scott Allen, and this module is about the different Types in C#.', N'ro', N'', 102)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2836, 2, 5, 11, N'Specifically I want to make sure that you know how every C# type falls into one of two categories.', N'ro', N'', 102)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2837, 3, 11, 17, N'Every type is either a reference type or a value type, and it''s very important to understand how these different types behave.', N'ro', N'', 102)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2838, 4, 17, 22.5, N'We will look at reference types versus value types and also see how to create these different types of types,', N'ro', N'', 102)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2839, 5, 22.5, 42.5, N'all of this and more in this fourth module of the course.', N'ro', N'', 102)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2840, 1, 0.483, 6.483, N'Reference types in C# are types created from class definitions, like the GradeBook that we created in the', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2841, 2, 6.483, 11.483, N'second module of this course. Any time I write a class I''m creating a new reference type, and we talked a', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2842, 3, 11.483, 15.483, N'little bit about the behavior of reference types in the second video module.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2843, 4, 15.483, 20.483, N'I told you that when I have a variable typed as GradeBook, which is a reference type, the variable holds a', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2844, 5, 20.483, 26.483, N'reference or a pointer to an object. What''s inside the variable is literally an address that tells the', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2845, 6, 26.483, 32.483, N'runtime where to find the object in memory, and I can have multiple variables all pointing to the exact same', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2846, 7, 32.483, 37.483, N'object instance, and I can have multiple objects, and I can have multiple variables pointing to all different objects.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2847, 8, 37.483, 44.483, N'I can even take a variable and reassign the object that it''s referencing, so it points to a new object,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2848, 9, 44.483, 51.483, N'a different object then what it started with. let''s do some more experiments in Visual Studio to see how this works.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2849, 10, 51.483, 56.483, N'let''s pick up in the grade solution that we were working on in the last two modules, and I want to do a few', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2850, 11, 56.483, 61.483, N'different experiments with the GradeBook, and before I start what I want to do is temporarily comment out', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2851, 12, 61.483, 67.483, N'this code so that this code doesn''t execute, and there''s a couple different ways to comment out these multiple lines.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2852, 13, 67.483, 74.483, N'One is I could go to the Edit menu, I can select this command Comment Selection, that will comment out each', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2853, 14, 74.483, 78.483, N'line of code that I have selected with the curser, and there''s a hot key combination that you can use to do', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2854, 15, 78.483, 85.483, N'that, Ctrl+K, Ctrl+C, I''ll select this option, and now if I run the program nothing will happen because I', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2855, 16, 85.483, 89.483, N'don''t really have any substantial code inside of my main method, it''s just going to start, and exit,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2856, 17, 89.483, 95.483, N'and the program''s done, and that''s thanks to this single line comment, which is a //.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2857, 18, 95.483, 103.483, N'Any where you put a // you can add text, or you can comment out code, or you can have a note about something', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2858, 19, 103.483, 109.483, N'that is in your code. Another way to do this would be to make it a multiline comment, so first I''m going to', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2859, 20, 109.483, 117.483, N'uncomment the selection, which is Ctrl+ KU, you can also get to that command from the Edit Advanced menu.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2860, 21, 117.483, 124.483, N'And now I''m going to use a /*, this is a multiline comment in C#, everything after /* is going to be', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2861, 22, 124.483, 130.483, N'commented out and not execute until I put in a */ to end that comment.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2862, 23, 130.483, 136.483, N'So now that we have that code marked to not execute, let me go into the GradeBook itself, and I want to give', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2863, 24, 136.483, 142.483, N'the GradeBook the ability to have a name so I can identify the GradeBooks with some friendly identifier,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2864, 25, 142.483, 152.483, N'and one easy way to do that is just to give this class a public field of type string, and let''s call it Name.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2865, 26, 152.483, 157.483, N'I''ll use an uppercase N just because public class members typically start with an uppercase letter,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2866, 27, 157.483, 164.483, N'whereas private class members like this grades field, it''s going to start with a lowercase G.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2867, 28, 164.483, 170.483, N'And now that I have a name let me go into Program.cs, and what I want to do is to create two GradeBooks.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2868, 29, 170.483, 175.483, N'we''ll call the first GradeBook g1, that''s a not a great variable name, but this is just for experimental', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2869, 30, 175.483, 182.483, N'purposes, I typically want to have a more descriptive name. And then let''s create a second variable g2,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2870, 31, 182.483, 188.483, N'and give it a copy of what is in g1 because GradeBook is a class, and it''s a reference type.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2871, 32, 188.483, 194.483, N'The value that is inside of that g1 variable is going to be a pointer, so I''m copying that pointer from g1', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2872, 33, 194.483, 203.483, N'into g2, and that means if I set the name of the GradeBook through the g1 variable, and let''s call it Scott''s', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2873, 34, 203.483, 214.483, N'grade book, and then I Console.write g2.Name. What I should see when I run this program by hitting Ctrl+F5 is Scott''s GradeBook.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2874, 35, 214.483, 219.483, N'that''s because I have two variables that are pointing to the exact same GradeBook object.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2875, 36, 219.483, 225.483, N'Now if I exit this command prompt, and I come into the program, and just before assigning name I say g1', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2876, 37, 225.483, 234.483, N'equals another new grade book, now if I run the program when I write out g2.Name I don''t have any output,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2877, 38, 234.483, 239.483, N'that''s because there are two GradeBook objects floating around in memory, and by the time we reach this', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2878, 39, 239.483, 245.483, N'g1.Name line of code, g1 is pointing to a different GradeBook than g2, g2 is still pointing to this original', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2879, 40, 245.483, 250.483, N'GradeBook, which we haven''t given a name. Now one way to do these types of experiments is just to write some', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2880, 41, 250.483, 254.483, N'code inside of a console application, and run the program, and look at the output.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2881, 42, 254.483, 258.483, N'That can be useful, and it''s a good way to learn C#, and some of the topics like we''re talking about now,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2882, 43, 258.483, 265.483, N'reference types, how do they behave, but an even better way to do this I think is to use unit tests.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2883, 44, 265.483, 269.483, N'Generally you''re going to write unit tests to prove the correctness of your program, and make sure it''s', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2884, 45, 269.483, 276.483, N'behaving correctly, but when I''m learning a topic like a new library, or a new API, or a new language,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2885, 46, 276.483, 283.483, N'I find unit tests to be an invaluable way to create some experiments, and test some hypotheses, and see if my', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2886, 47, 283.483, 287.483, N'understanding of a particular behavior is correct. Since we already have a unit testing project that we', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2887, 48, 287.483, 293.483, N'created in the last module, Grades.Test, let''s take advantage of that, and put some code inside of here that', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2888, 49, 293.483, 297.483, N'is really code that you can use to test yourself and experiment with the language.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2889, 50, 297.483, 306.483, N'I''m going to Add a New Folder to this test project, and I will give it the name Types, and I can place all of', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2890, 51, 306.483, 311.483, N'the C# code related to my experiments with reference types inside of this folder, as well as other types that', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2891, 52, 311.483, 320.483, N'we''re going to be creating, so inside of here let me add a Class, and let''s just call this ReferenceTypeTests.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2892, 53, 320.483, 327.483, N'I''ll click Add, Visual Studio will add a class for me. Remember I want to make this a public class,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2893, 54, 327.483, 334.483, N'and I want to give this class the attribute TestClass, which means I need to bring in the namespace,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2894, 55, 334.483, 342.483, N'which is Microsoft.VisualStudio.TestTools.UnitTesting. Any this light bulb appears you can open up that', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2895, 56, 342.483, 347.483, N'light bulb by pressing Ctrl and period. that''s really handy if you want to keep your hands-on the keyboard', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2896, 57, 347.483, 352.483, N'and not use the mouse to select the light bulb. I''m going to press Ctrl+ period, I''m going to select the', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2897, 58, 352.483, 358.483, N'first option here by just pressing Enter, which is to add that namespace to the top of the file for me,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2898, 59, 358.483, 366.483, N'and now I can write a TestMethod, so first the attribute TestMethod, and this will be a public void returning', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2899, 60, 366.483, 376.483, N'method, let''s call it VariablesHoldAReference, and now let me go back to Program.cs, select this code that I', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2900, 61, 376.483, 384.483, N'have here, and cut it out, come back into my Test, and paste it in, and really what I want to do in this Test', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2901, 62, 384.483, 389.483, N'is just some experiments, so my first experiment will be I want to instantiate a new GradeBook, I want to', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2902, 63, 389.483, 395.483, N'have two variables that I think are pointing to the same GradeBook, so I''ll set the name through one', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2903, 64, 395.483, 402.483, N'variable, g1, and then I want to make an assertion, I want to Assert that the following two things are equal,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2904, 65, 402.483, 410.483, N'I want to assert that g1''s name, which I just set, is the same as g2''s name because g2 is pointing to the', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2905, 66, 410.483, 416.483, N'same object, and when I look at g2.Name I will see that the name has been set by that previous line of code,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2906, 67, 416.483, 421.483, N'and now back in the program I just want to clean things up a little bit, so let''s get rid of our', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2907, 68, 421.483, 427.483, N'console.write line here, and let me get rid of the comment so that we put our program back in a correct state.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2908, 69, 427.483, 433.483, N'I''m not interested in running the program right now, I''m more interested in running this test, so let me hit', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2909, 70, 433.483, 441.483, N'Ctrl+R and then A, and our Test Explorer pops up, and I can see that test passed, so my understanding of', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2910, 71, 441.483, 446.483, N'reference types seems to be working. Now what you can do inside of this Test Project is do different', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2911, 72, 446.483, 452.483, N'experiments with different variables, and write some assertions based on what you believe should happen,', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2912, 73, 452.483, 472.483, N'and then run the test to see if your beliefs are true. we''ll continue writing some tests throughout the rest module also.', N'ro', N'', 103)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2913, 1, 0, 6.715, N'As I mentioned earlier, every type in .NET falls into one of two categories. Every time is either a', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2914, 2, 6.715, 13.715, N'reference type or a value type. A variable that is typed as a value type does not hold a memory address or a', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2915, 3, 13.715, 20.715, N'pointer, it holds a value itself. For example, integers and floats are value types in .NET.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2916, 4, 20.715, 25.715, N'If I have a variable called x1, and it''s of type int, and I use it as a variable inside of a method,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2917, 5, 25.715, 32.715, N'if I give that variable the value 100, the value 100 is literally stored inside the memory location of variable x1.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2918, 6, 32.715, 35.715, N'there''s no pointer here, the value is wholly inside that variable.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2919, 7, 35.715, 40.715, N'I can have another variable of type int, let''s call it x2, and I can assign it the value 4, and that value 4', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2920, 8, 40.715, 46.715, N'is inside the variable, this is unlike the GradeBook variables We''ve created, g1 and g2,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2921, 9, 46.715, 51.715, N'because those variables hold pointers to an object. Now why do we have these two different types?', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2922, 10, 51.715, 56.715, N'Well value types exist because they are generally faster to allocate in memory than reference types,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2923, 11, 56.715, 62.715, N'that''s one reason for the distinction. Creating an object is more expensive than creating a value type like', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2924, 12, 62.715, 70.715, N'an integer, and some programs need lots of value types to exist, millions of number for example in a mathematically-oriented program.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2925, 13, 70.715, 74.715, N'So value types are very fast, and they are also usually small. It takes a lot less memory to store an', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2926, 14, 74.715, 80.715, N'integer than it does to store an entire GradeBook. Many primitive types in .NET are value types,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2927, 15, 80.715, 85.715, N'primitive types being those low-level primitives that we can''t program without, types like integers and', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2928, 16, 85.715, 90.715, N'floating point numbers, these are small values that store themselves directly in a variable.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2929, 17, 90.715, 95.715, N'And one thing we''ll revisit later is that value types are typically immutable, meaning you cannot change the', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2930, 18, 95.715, 102.715, N'value of a value type. That doesn''t mean I cannot change the value inside of a variable, I can always walk', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2931, 19, 102.715, 108.715, N'up to an integer variable named x2 and give it a different value, I could change it from a 4 to a 3,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2932, 20, 108.715, 114.715, N'but that value 4 and that value 3, those values I cannot change, the value 4 is always the value 4,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2933, 21, 114.715, 119.715, N'the value 3 is always the value 3. And an obvious question at this point would be how do you know when', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2934, 22, 119.715, 123.715, N'you''re working with a value type, and how do you know when you''re working with a reference type, and how do', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2935, 23, 123.715, 127.715, N'you create your own value types, We''ve seen how to create reference types.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2936, 24, 127.715, 132.715, N'Any time we create a class like the GradeBook we''re creating a reference type, but what about value types,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2937, 25, 132.715, 137.715, N'we''ll answer these questions very soon, but first let''s jump into Visual Studio, and do some more experiments.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2938, 26, 137.715, 143.715, N'Inside of Visual Studio we''re doing some experiments with types inside of unit tests, and so far We''ve', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2939, 27, 143.715, 149.715, N'written a test that says variables hold a reference, but now we know this is only true if the variable is', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2940, 28, 149.715, 153.715, N'typed as a reference type, which is the case for GradeBook, it''s a reference type.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2941, 29, 153.715, 159.715, N'So let''s be a little more explicit with this test name, and say that GradeBookVariablesHoldAReference,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2942, 30, 159.715, 163.715, N'and now write a test that looks very similar, but with a value type.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2943, 31, 163.715, 168.715, N'I''m going to create a new test by using a code snippet, We''ve use d code snippets before, in this case the', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2944, 32, 168.715, 175.715, N'code snippet is testm, I just need to type those characters, and press Tab twice, Visual Studio will generate', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2945, 33, 175.715, 180.715, N'a test method for me, so press Tab twice, and now after inserting the snippet the name of this method is', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2946, 34, 180.715, 189.715, N'selected by the editor, I can immediately start typing to change the name, so let''s name this method IntVariablesHoldavalue.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2947, 35, 189.715, 195.715, N'And I want to write a test that is very similar to our other test, I want to create one variable,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2948, 36, 195.715, 201.715, N'let''s call it x1, and we''ll give it the value 100, create a second variable x2, and copy the value that is', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2949, 37, 201.715, 207.715, N'inside of x1 into x2. We did the same thing with the GradeBook, but in the case of the GradeBook the value', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2950, 38, 207.715, 213.715, N'that is inside the variable is a pointer, so with GradeBooks we have two variables pointing to the same object.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2951, 39, 213.715, 222.715, N'The question is with integers, if I make a change to x1, and give it the value 4, can I still assert that x1', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2952, 40, 222.715, 231.715, N'and x2 are equal? let''s press Ctrl+ RA to run all the tests and find out, and the answer is no,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2953, 41, 231.715, 239.715, N'that test failed because x1 now holds the value 4, x2 still holds the value 100 that I copied into it.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2954, 42, 239.715, 244.715, N'So with the GradeBook variables I can point two variables to the same object, and then make a change to that', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2955, 43, 244.715, 248.715, N'object through either of those variables, and the change will be visible through the other variable,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2956, 44, 248.715, 253.715, N'but that''s not the case with value types. If I copy a different value into the x2 variable,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2957, 45, 253.715, 258.715, N'that''s completely independent from the storage location of x1, so I don''t see that change reflected here,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2958, 46, 258.715, 268.715, N'I would have to assert that these two are not equal, and then run the test, it should pass, which it does.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2959, 47, 268.715, 274.715, N'Now if you want a good exercise to test yourself and really grasp this concept of reference types versus', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2960, 48, 274.715, 280.715, N'values types, try to figure out what would happen if I add this line of code inside of GradeBookVariablesHoldAReference.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2961, 49, 280.715, 286.715, N'I''m going to say just before assigning g1.Name g1 equals a new GradeBook.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2962, 50, 286.715, 291.715, N'What you should do is pause the video, and then think about if any other changes are required inside of this', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2963, 51, 291.715, 299.715, N'test method to make the test pass. That is do you have to change the assert from are equal to are not equal?', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2964, 52, 299.715, 302.715, N'And hopefully you have tried that, hopefully you came up with the correct answer.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2965, 53, 302.715, 307.715, N'The correct answer is that I would have to change the assert because I have assigned a new value into g1,', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2966, 54, 307.715, 312.715, N'I have given it a pointer to a new GradeBook, a second GradeBook object.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2967, 55, 312.715, 317.715, N'I''m changing the name of that second GradeBook, but g2 is still pointing to the first GradeBook that I', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2968, 56, 317.715, 326.715, N'created, therefore that first GradeBook doesn''t have a name, and that assert.AreEqual g1.Name, g2.Name, that would fail.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2969, 57, 326.715, 330.715, N'So these are the kinds of tests and experiments that you can do inside of Visual Studio with unit tests to', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2970, 58, 330.715, 334.715, N'really see if you are understanding some of the language concepts and features.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2971, 59, 334.715, 339.715, N'And now that We''ve seen how these two behave, let''s answer those questions of how do I know I''m working with', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2972, 60, 339.715, 359.715, N'a value type, and how do I create a value type.', N'ro', N'', 104)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2973, 1, 1.5, 7.106, N'One way to create a value type with C# is to create a structure using the struct keyword.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2974, 2, 7.106, 12.106, N'A struct definition looks just like a class definition. A struct has a name, it has an opening and a closing', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2975, 3, 12.106, 16.106, N'curly brace, and everything inside of those braces will be a member of the structure.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2976, 4, 16.106, 23.106, N'You can even apply an access modifier like public or internal, really the only syntactical difference is the', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2977, 5, 23.106, 28.106, N'keyword that''s being used, struct or class, which leads to the next obvious question, when should I write a', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2978, 6, 28.106, 32.106, N'struct, and when should I write a class. The general rule of thumb is that you want to write a class by default.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2979, 7, 32.106, 37.106, N'Structs are meant for special cases when you need to write an abstraction that represents a single value,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2980, 8, 37.106, 43.106, N'like a DateTime that is inside of the .NET Framework that represents a single value even though you can break', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2981, 9, 43.106, 49.106, N'a DateTime down into small constituent pieces like the current hour, or the current day, or the current year,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2982, 10, 49.106, 54.106, N'a DateTime does represent something that we can reason about as a single value, and it''s a value that', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2983, 11, 54.106, 61.106, N'represents a point in time. Other value types in the .NET Framework, types like int, very obviously hold', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2984, 12, 61.106, 65.106, N'only a single value, but over the years I''ve built many custom value types using struct, and I''ve done this', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2985, 13, 65.106, 72.106, N'to represent things like complex numbers, or a point in two or three demential space, or a currency amount,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2986, 14, 72.106, 78.106, N'which consists of a monetary value and a currency symbol, all of those abstractions represent single values', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2987, 15, 78.106, 83.106, N'conceptually, and the other characteristic that those value types have in common is that they are all small.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2988, 16, 83.106, 89.5, N'Structs do best when they contain a small amount of data because as we''ll see value types get copied around in memory frequently.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2989, 17, 89.5, 96.106, N'A value type like int in C#, that not only requires 4 bytes of data to store, and most CPUs will copy that data', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2990, 18, 96.106, 105.106, N'just using a single CPU cycle, but more on that later. Another way to create a value type in C# is to use the enum keyword.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2991, 19, 105.106, 108.106, N'An enum creates a type that will only hold specific numerical values.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2992, 20, 108.106, 114.106, N'An enum, which is short for enumeration, and it''s a good way to create named constants in your software.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2993, 21, 114.106, 121.106, N'So here''s a scenario, let''s say we''re building an application to pay employees, and we already have an employee class.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2994, 22, 121.106, 126.106, N'One attribute we need to tract for each employee is how they are paid, are they paid on an hourly basis,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2995, 23, 126.106, 132.106, N'are they salaried, are they an executive, one way to represent those categories would be to give each', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2996, 24, 132.106, 139.106, N'category a number, so an hourly employee has a payroll type of 4, and a salaried employee has a payroll type of 2.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2997, 25, 139.106, 144.106, N'The problem is if we actually use those numbers in our source code they become what we call magic numbers.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2998, 26, 144.106, 150.106, N'You look at the source code and you see a 2, what does that represent, is that employee hourly or salaried,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (2999, 27, 150.106, 154.106, N'I''m not sure, those are the types of things that you forget about 24 hours after you write the code.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3000, 28, 154.106, 160.106, N'An enum can turn those magical numbers into symbols, so instead of using the value 4 for an hourly employee,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3001, 29, 160.106, 167.106, N'I can use the code Payroll.Type.Hourly, so an enum isn''t something that I have to instantiate to use,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3002, 30, 167.106, 172.106, N'I can just use the name of the enum, and then one of the members of the enum that I have defined like', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3003, 31, 172.106, 178.106, N'.constractor, .salaried, and so forth. So in the if statement we''re looking at using an employee object,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3004, 32, 178.106, 186.106, N'every employee object has a field named Role that is defined of type PayrollType, so instead of saying', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3005, 33, 186.106, 190.106, N'.Role=2 or .Role=3, I can involve this enum, and the code is a little bit clear.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3006, 34, 190.106, 196.106, N'Defining an enum is very simple, you use the enum keyword, give the enum a name, there''s an opening and', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3007, 35, 196.106, 201.106, N'closing curly brace just like a class, but what is inside are your symbols.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3008, 36, 201.106, 207.106, N'Here we have Contractor, Salaried, Executive, and Hourly. By default the first entry in an enum will carry', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3009, 37, 207.106, 214.106, N'the value 0 because behind the scenes this enum is represented as an integer value like 1, or 2, or 3.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3010, 38, 214.106, 219.106, N'Inside the enum you can explicitly assign values as We''ve done here when we say Contractor = 1.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3011, 39, 219.106, 225.106, N'What the C# complier will do is automatically assign the next numerical value if I don''t explicitly provide', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3012, 40, 225.106, 232.106, N'one, so Salaried would be a 2, Executive would be a 3, Hourly would be a 4, and this code we''ll just use the', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3013, 41, 232.106, 238.106, N'defaults there, but we could''ve explicitly overwritten that and said hourly = 128 if we wanted to.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3014, 42, 238.106, 241.106, N'let''s take a look at this in code.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3015, 43, 241.106, 246.106, N'In Visual Studio let me first show you an easy way to figure out if you''re working with a reference type or a value type.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3016, 44, 246.106, 252.106, N'When I declare a variable like g1, which is of type GradeBook, how do I know that''s a reference type?', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3017, 45, 252.106, 258.106, N'One way to do this is to put the curse on the GradeBook symbol and use the F12 key, We''ve used this before,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3018, 46, 258.106, 263.106, N'that will take me to the source code if Visual Studio has the source code available, and when I come to the', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3019, 47, 263.106, 269.106, N'source code for GradeBook I can see it''s defined as a class, therefore this is a reference type, and g1 will hold a pointer.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3020, 48, 269.106, 275.106, N'What about integers? I can use the same trick here. I can press F12, integer is part of the .NET Framework,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3021, 49, 275.106, 281.106, N'but what Visual Studio will do is recreate the structure of that type from metadata, so this is the metadata', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3022, 50, 281.106, 286.106, N'view we used this earlier in the course. We can see that his is part of MSCorLib.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3023, 51, 286.106, 291.106, N'So that''s where the int type lives. Now you''ll notice the actual name of this type is system.In32,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3024, 52, 291.106, 299.106, N'it''s not int, and that''s just because in C# int is a C# keyword that will give you an in32, so I could define', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3025, 53, 299.106, 307.106, N'these variables using either the C# keyword int or the type system.in32, it''s all going to come out the same', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3026, 54, 307.106, 313.106, N'in the end, those two are completely equivalent. I prefer to use the C# keyword int, but you can see here', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3027, 55, 313.106, 320.106, N'that int, AKA an in32, it is a struct, therefore an int is a value type.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3028, 56, 320.106, 324.106, N'If I looked at the DateTime type in .NET I would see it as also a struct, and this metadata view, by the way,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3029, 57, 324.106, 330.106, N'can be very useful if you''re trying to figure out what something can do for you, I can look at this in32', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3030, 58, 330.106, 335.106, N'type, and I can see that I can convert an int to a string, I can compare integer values, I can parse an', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3031, 59, 335.106, 339.106, N'integer out of a string, we will look at some of those features later in the course.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3032, 60, 339.106, 346.106, N'For right now I''d also like to show you how to write or use an enum that''s built-in to the .NET Framework,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3033, 61, 346.106, 352.106, N'so let me create a new test method. This time what we''re going to be experimenting with is StringComparisons.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3034, 62, 352.106, 359.106, N'So first I''ll declare a variable, let''s call it name1, and it''s going to point to value Scott with an uppercase S.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3035, 63, 359.106, 365.106, N'So is string a value type or a reference type in .NET? If I press F12 I can see clearly that string is a', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3036, 64, 365.106, 371.106, N'reference type, don''t let anyone ever tell you anything different, however string is a little bit magical,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3037, 65, 371.106, 377.106, N'and we''ll talk about that later in this module. So string is a reference type, name1 points to the string Scott.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3038, 66, 377.106, 385.106, N'Let me also declare name 2, and I want this to point to scott, but without an uppercase S, and now what I''d', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3039, 67, 385.106, 390.106, N'like to do is do a StringComparison that will tell me these two strings are equivalent, so I need to do a', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3040, 68, 390.106, 396.106, N'StringComparison that ignores the case of the individual characters, so an uppercase S should be equivalent', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3041, 69, 396.106, 402.106, N'to a lowercase S. Let me declare another variable of type bool, so we can hold the value true or false.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3042, 70, 402.106, 411.106, N'What is bool by the way? Bool, also a value type, it''s a struct. I''m going to say that result =', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3043, 71, 411.106, 418.106, N'String.Equals, and I want to compare name1 and name 2, and there''s an optional third parameter here where I', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3044, 72, 418.106, 423.106, N'can specify the type of StringComparison to do, and StringComparison is an enum, so if I say', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3045, 73, 423.106, 428.106, N'StringComparison., Visual Studio will show me the various StringComparisions I can do.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3046, 74, 428.106, 435.106, N'I can compare strings and take into effect the CurrentCulture, my CurrentCulture is set up for English.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3047, 75, 435.106, 439.106, N'I can also ask for InvariantCulture, so it doesn''t matter whether my machine is set up for English,', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3048, 76, 439.106, 445.106, N'or Spanish, or French, or Norwegian, and I''m going to select this option, InvariantCultureIgnoreCase.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3049, 77, 445.106, 454.106, N'And I want to assert it IsTrue this result because if I''m ignoring the case when I compare these two strings', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3050, 78, 454.106, 459.106, N'I should get a true out, and I now have six passing tests, so that has worked.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3051, 79, 459.106, 465.106, N'let''s press F12 on StringComparison, and go to the metadata view, and here I can see how that enum is defined.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3052, 80, 465.106, 472.106, N'I''m using StringComparison.InvarientCultureIgnoreCase, which holds the value 3, that would actually be the', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3053, 81, 472.106, 478.106, N'value that''s passed around behind the scenes, but if I try to put a 3 in here you''ll notice I do get the red', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3054, 82, 478.106, 484.106, N'underline, which indicates there is an error, so even though that underlying value is a 3, I cannot pass the', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3055, 83, 484.106, 491.106, N'integer value 3 into this method. The C# complier wants to see something that is one of these StringComparison values.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3056, 84, 491.106, 497.106, N'that''s another benefit of using strong typing and using enums instead of just magic numbers.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3057, 85, 497.106, 502.106, N'And speaking of passing parameters to a method, another topic that we want to make that we''re comfortable', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3058, 86, 502.106, 522.106, N'with is how these different types, these reference types or value types, how they behave when we pass them to another method.', N'ro', N'', 105)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3059, 1, 0, 7, N'Understanding the difference between how reference types and value types behave becomes extremely important', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3060, 2, 7, 13.789, N'when you write methods and pass parameters to a method. In C# the default is to pass parameters by value.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3061, 3, 13.789, 18.789, N'This means when you call a method that takes a parameter, by default the value in the variable you pass will', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3062, 4, 18.789, 25.789, N'be copied into the variable that is a parameter to the method, and what you pass is always a copy unless you', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3063, 5, 25.789, 30.789, N'add some additional keywords, which we will talk about, but you hardly ever want to use these keywords,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3064, 6, 30.789, 36.789, N'you want to use the default of pass by value, and that means for reference types you are passing a copy of a', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3065, 7, 36.789, 42.789, N'reference, a copy of the pointer that is inside the variable, and when I pass a value type to a method,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3066, 8, 42.789, 48.789, N'a value type like an int, or a double float, or DateTime, I am passing a copy of the value, a copy of the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3067, 9, 48.789, 55.789, N'value that is inside the variable. So if I have a method that takes a GradeBook parameter, and I pass the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3068, 10, 55.789, 61.789, N'method of variable from my code, the method gets a copy of the pointer to a GradeBook, so both the calling', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3069, 11, 61.789, 66.789, N'code and the method that is being called, they will both have pointers to the exact same object, and this has', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3070, 12, 66.789, 73.789, N'profound implications for what happens inside the method, and what changes I can see when a method exits and', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3071, 13, 73.789, 77.789, N'returns control to the caller. let''s take a look in Visual Studio.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3072, 14, 77.789, 83.789, N'Inside of our testing project we''re really branching out beyond just reference type tests, so let''s rename', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3073, 15, 83.789, 89.789, N'our test class to just TypeTests. The name of a test class really doesn''t matter except in the output of the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3074, 16, 89.789, 94.789, N'test explorer, and what I want to do now is write a couple test methods that I can use to explore the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3075, 17, 94.789, 99.789, N'difference between value types and reference types when it comes to calling methods.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3076, 18, 99.789, 103.789, N'The truth is there really is no difference, we''re always passing something by value, but behavior may appear', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3077, 19, 103.789, 108.789, N'differently, let''s just take a look. Let me create another test method with a code snippet, and let''s name', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3078, 20, 108.789, 115.789, N'this method ReferenceTypesPassByValue, and what I want inside of here is code that is similar to some of the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3079, 21, 115.789, 122.789, N'other code that We''ve written. I want to create a new GradeBook, and I want to have two variables that point', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3080, 22, 122.789, 128.789, N'to that GradeBook, so book2 will equal book1, what is this line of code doing, it''s copying the reference', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3081, 23, 128.789, 133.789, N'that is inside of book1 into book2, so now I have two variables both pointing to the same object,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3082, 24, 133.789, 139.789, N'and now let''s call a method. I''m going to write a private method, GiveBookAName.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3083, 25, 139.789, 145.789, N'Since this method is private and doesn''t have a test method attribute, it''s not going to be a method that the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3084, 26, 145.789, 150.789, N'test runner tries to invoke to see if something is going to pass or fail, and simply a method that I can use', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3085, 27, 150.789, 156.789, N'inside of my tests, and this method I want it to take a GradeBook parameter, and I want it to set the name of', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3086, 28, 156.789, 166.789, N'the GradeBook, so book.Name = A GradeBook, and so back in my test method I want to invoke this method,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3087, 29, 166.789, 174.789, N'GiveBookAName, I want to pass in book2, and then I want to write an assertion that will pass that will look', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3088, 30, 174.789, 182.789, N'at book1''s name, and I''m going to paste in that string A GradeBook. we''re going to see if book1.Name is', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3089, 31, 182.789, 191.789, N'equal to a GradeBook, Ctrl+ RA to run all the tests, and I now have seven passing tests, so I can see that', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3090, 32, 191.789, 200.789, N'test worked because when I invoke GiveBookAName, the value inside of book2 is copied into the parameter book,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3091, 33, 200.789, 207.789, N'and that value is a pointer, so there is a period of time during the execution of these tests where I have', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3092, 34, 207.789, 213.789, N'three variables that are pointing to the same GradeBook object, book1, book2, and this parameter book,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3093, 35, 213.789, 219.789, N'and any changes that I make to the GradeBook through any of those variables, they will be visible if I look', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3094, 36, 219.789, 226.789, N'at that object through any of the other variables. Now let''s try a similar experiment, but with value types.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3095, 37, 226.789, 233.789, N'So let me create a test method, we''ll call it ValueTypesPassedByValue, and in this method I want to just try', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3096, 38, 233.789, 241.789, N'some things with a simple integer value, so let''s say that x = 46, and again let me create a private method,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3097, 39, 241.789, 247.789, N'let''s say that we''ll increment a number that is passed in, so this method expects an integer parameter,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3098, 40, 247.789, 255.789, N'we can call it the number, and all I will do inside of here is say number = number + 1.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3099, 41, 255.789, 262.789, N'Another way to write that in C# is to say number += 1, so that''s a way of saying take this value, add 1 to', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3100, 42, 262.789, 268.789, N'it, and assign it back to the variable. And now the question is inside of this test method is I invoke', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3101, 43, 268.789, 281.789, N'IncrementNumber, and I pass in x, should I assert that x is a 46 or a 47, let''s say that we expect a 46 to be', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3102, 44, 281.789, 289.789, N'the value inside of x, I will run all the tests, and that is also one of my passing tests.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3103, 45, 289.789, 296.789, N'So what is happening here is that I take this 46 that is inside of x, it''s being copied into number when I', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3104, 46, 296.789, 303.789, N'invoke method, but since this is a copy of that value I can make any changes that I want with this number variable.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3105, 47, 303.789, 311.789, N'I can add 1, subtract 1, divide by 3, multiple by 6, it really doesn''t matter what I do to this number inside of here.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3106, 48, 311.789, 317.789, N'The changes I make are only visible inside of the code that is inside of IncrementNumber, it just has a copy', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3107, 49, 317.789, 322.789, N'of that integer value, there''s nothing I can do with number that could make a change that would be visible', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3108, 50, 322.789, 327.789, N'from the code inside of ValueTypesPassByValue, and if that''s a little bit confusing that''s okay,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3109, 51, 327.789, 333.789, N'it takes some time for this to sink in, and that''s one of the reasons that I wanted you to set up a unit test', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3110, 52, 333.789, 338.789, N'project so you could explore some different scenarios with PassByValue, and write some tests, and see what', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3111, 53, 338.789, 343.789, N'tests pass, and what tests fail, and become more comfortable with this behavior, but one thing that might', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3112, 54, 343.789, 349.789, N'make this a little bit more clear is this, the only reason that I can call GiveBookAName, and see changes to', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3113, 55, 349.789, 355.789, N'A GradeBook object from outside of this method is because I am working with a reference type, and I have a', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3114, 56, 355.789, 362.789, N'reference to an object, and I''m making to the estate of some object, and that change is visible because', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3115, 57, 362.789, 366.789, N'there''s three different variables that can all hold a pointer to that same object, but just like with the', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3116, 58, 366.789, 372.789, N'integer experiment above, there''s no change that I can make to this book variable itself that would change', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3117, 59, 372.789, 382.789, N'the value that is inside of book1 or book2. So for example, down here if I said book = new GradeBook,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3118, 60, 382.789, 389.789, N'this is not going to change the pointer or the reference inside of book2, it''s only going to change the value', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3119, 61, 389.789, 395.789, N'that is stored inside of this book variable inside of GiveBookAName, so that particular variable will be', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3120, 62, 395.789, 401.789, N'pointing to a new GradeBook, but the variables that are back in the calling method, book1 and book2,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3121, 63, 401.789, 407.789, N'they won''t be changed at all, and if I run this test I will find I have a failing test because we will no', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3122, 64, 407.789, 414.789, N'longer be setting the name of this GradeBook that we created, we''re creating a second GradeBook and setting its name.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3123, 65, 414.789, 420.789, N'So the way to think about this really is that both tests demonstrate that C# uses PassByValue, and in both', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3124, 66, 420.789, 427.789, N'cases when I pass a parameter to a method, there''s no way that the method that I call can make a change to', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3125, 67, 427.789, 433.789, N'the value that I hold inside of my variable, but if what I''m holding is a pointer to an object,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3126, 68, 433.789, 437.789, N'that method can always make changes to an object that are visible to me as a caller.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3127, 69, 437.789, 445.789, N'Now there is a way in C# to make changes to the variable, the value of that variable when I invoke a method,', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3128, 70, 445.789, 465.789, N'it''s a rare scenario, but let''s talk about that next.', N'ro', N'', 106)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3129, 1, 0, 3.5, N'In C# there are two keywords that can change this', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3130, 2, 3.5, 8.008, N'default behavior of PassByValue, these two keywords are ref and out.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3131, 3, 8.008, 15.008, N'I''m going to show you how they work, but I will say that in 15 years of developing with C# I rarely if ever use these keywords.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3132, 4, 15.008, 19.5, N'there''s a few special methods that Microsoft provides in the .NET Framework where I have to use these', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3133, 5, 19.5, 24.008, N'keywords, but I rarely if ever use these keywords in methods and classes that I build.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3134, 6, 24.008, 28.5, N'I will cover these key words for those of you that want to get a complete picture of the C# language,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3135, 7, 28.5, 33.5, N'but feel free to skip this clip and move to the next one if this something that doesn''t interest you.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3136, 8, 33.5, 41.008, N'So the two keywords are ref and out. let''s go back to the situation where I am saying book = new GradeBook', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3137, 9, 41.008, 47.008, N'inside of GiveBookAName, and I''ve already demonstrated that this test will fail now because when I change the', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3138, 10, 47.008, 53.008, N'value inside of book that does not change the value inside of book2, therefore book2 still pointing to the', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3139, 11, 53.008, 59.008, N'original GradeBook, and I''m only changing the name on a new GradeBook that is created here inside of', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3140, 12, 59.008, 64.008, N'GiveBookAName, but all that can change if I use on of these two keywords, ref or out.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3141, 13, 64.008, 69.008, N'These keywords go in front of the type for the parameter, and this is the ref keyword, and the way to think', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3142, 14, 69.008, 76.008, N'about it now is what I''m receiving inside of the book parameter is a reference to the variable in the calling', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3143, 15, 76.008, 81.008, N'code, and there''s a couple observations to make. For those of you with a computer science background, yes,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3144, 16, 81.008, 88.008, N'you can think of book as a pointer to a pointer, but the syntax that I use inside of the method doesn''t have to change.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3145, 17, 88.008, 96.008, N'If I assign a new value to this parameter you can think of that value being written into the book2 variable,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3146, 18, 96.008, 101.008, N'but the way I access the GradeBook doesn''t change, I can still just say book., and I get to any instance', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3147, 19, 101.008, 106.008, N'member of that object. The next observation to make is that I have a complier error.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3148, 20, 106.008, 112.008, N'When the C# complier see you''re invoking a method that has a ref parameter, it also wants to see the ref', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3149, 21, 112.008, 117.008, N'keyword in front of the parameter when you invoke the method. That just makes it very explicit when you''re', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3150, 22, 117.008, 122.008, N'calling another method, that you are passing this variable by reference, and it''s quite possible that the', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3151, 23, 122.008, 127.008, N'method you are calling can change the underlying value inside of book2.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3152, 24, 127.008, 133.008, N'So I''m about to run the tests, and I want you to take a guess whether the test will pass or fail.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3153, 25, 133.008, 139.008, N'Let me give you a little bit of a hint, the assertion right now is still looking at book1.Name, so if I run', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3154, 26, 139.008, 146.008, N'the test, the test is still failing because when I say book = new GradeBook down here, yes, I''m writing a new', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3155, 27, 146.008, 151.008, N'value into book2, but that doesn''t influence book1, I don''t have a reference into that variable, I have a', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3156, 28, 151.008, 158.008, N'reference into book2, so book1 is still pointing to the original GradeBook, but book2 now, let''s write an', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3157, 29, 158.008, 165.008, N'assertion against that, and just to make this clearer perhaps, let''s get rid of the ref keyword for just a second.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3158, 30, 165.008, 171.008, N'I''m going to run all the tests, that test should still fail because in this scenario when I say book = new', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3159, 31, 171.008, 177.008, N'GradeBook, we''re back into the scenario that we previously looked at where I am writing a new value into this', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3160, 32, 177.008, 181.008, N'book parameter, but there''s nothing I can do here that can change the value that is inside of book2,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3161, 33, 181.008, 188.008, N'so book2 is still pointing to the original GradeBook. let''s change this back to ref, and I''m writing the', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3162, 34, 188.008, 195.008, N'assertion against book2.Name, let''s run all the tests, and the tests now passes because when I say book = new', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3163, 35, 195.008, 200.008, N'GradeBook inside of GiveBookAName, I can think of this book as pointing to the new GradeBook,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3164, 36, 200.008, 208.008, N'and because this is a by ref parameter I''ve also changed where book2 is pointing, so it''s pointing to that new GradeBook also.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3165, 37, 208.008, 214.008, N'The ref keyword, I can also use this against value types, so We''ve already seen if I call IncrementNumber on', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3166, 38, 214.008, 220.008, N'x, there''s nothing I can do inside of IncrementNumber that will actually change the value that is inside of', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3167, 39, 220.008, 227.008, N'x, but that''s all different if I use the ref keyword. If I use the ref keyword, and I also use it here where', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3168, 40, 227.008, 232.008, N'I am invoking the method, I can think of number as a reference to this variable location, the x,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3169, 41, 232.008, 238.008, N'so any changes that I make to that value like incrementing the number, that change will be reflected inside', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3170, 42, 238.008, 250.008, N'of x, so Ctrl+ RA to run the tests, I expected a 46, but now the actual is 47, I did increment that number.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3171, 43, 250.008, 255.008, N'let''s change the assert, run all the tests, and now we have a passing test.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3172, 44, 255.008, 262.008, N'Let me show you the other keyword, the out keyword that also changes the behavior of PassByValue, and the out', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3173, 45, 262.008, 268.008, N'keyword is pretty much identical to ref. Let me just change both the method and the calling of that method', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3174, 46, 268.008, 275.008, N'to use the out keyword, and here we will see what the real difference is between ref and out, with out the C#', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3175, 47, 275.008, 281.008, N'complier assumes that you are creating an output here. Most methods produce an output by returning a value,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3176, 48, 281.008, 289.008, N'but when you use the out keyword, the semantics are that you are producing an output through this parameter,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3177, 49, 289.008, 293.008, N'and one of the things the C# complier wants to see is a definite assignment to that parameter.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3178, 50, 293.008, 298.008, N'Right now the error is Use of unassigned out parameter number, that''s because in order to add 1 to number,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3179, 51, 298.008, 306.008, N'and say number += 1, I first have to read the number, and then add 1 to it, but the C# complier is saying', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3180, 52, 306.008, 311.008, N'since this is an output I cannot guarantee that the caller gave you an initialized value that you can use,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3181, 53, 311.008, 318.008, N'and so for this scenario I have to use the ref keyword if I want to increment an existing number,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3182, 54, 318.008, 322.008, N'and with ref the initialization rules are just on the other side of the fence.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3183, 55, 322.008, 329.008, N'So with the ref keyword if I did not have a definite assignment to the variable x, now I would get an error', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3184, 56, 329.008, 335.008, N'in this method that I''m using an unassigned local variable. So with the ref keyword the C# complier will', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3185, 57, 335.008, 338.008, N'make sure that you initialize a variable before you call a method.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3186, 58, 338.008, 344.008, N'If I have the out parameter here I wouldn''t need this initialization statement, I could just say int x,', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3187, 59, 344.008, 350.008, N'and invoke a method that passes x as an out parameter. And that''s the story with the ref and out keywords.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3188, 60, 350.008, 357.008, N'Again these are keywords that I rarely use, there''s usually a better way to design a method than by taking a', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3189, 61, 357.008, 360.008, N'ref or an out parameter, but hopefully I''ve given you enough information if you do encounter one of those', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3190, 62, 360.008, 366.008, N'keywords you''ll know what to do, and you can always explore and experiment with unit tests like this to make', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3191, 63, 366.008, 386.008, N'sure that you understand the behavior correctly.', N'ro', N'', 107)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3192, 1, 0, 6.808, N'One special behavior that I need to point out about value types is that value types are typically immutable,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3193, 2, 6.808, 12.808, N'which means they cannot change, and certainly the value types that Microsoft provides as primitives for us to', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3194, 3, 12.808, 17.808, N'work with from the .NET Framewrk, those value types are immutable, and that means that once you create a', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3195, 4, 17.808, 23.808, N'value you cannot change the value. That doesn''t mean that the value stored in a variable cannot change.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3196, 5, 23.808, 29.808, N'We call them variables because the data inside can vary, but the actual value of the value type cannot change.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3197, 6, 29.808, 36.808, N'So for example you cannot change the value of the integer value 4, that seems obvious, but it also means that', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3198, 7, 36.808, 41.808, N'once you''ve constructed a DateTime, which is a value type, that particular value cannot change.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3199, 8, 41.808, 48.808, N'So with this in mind I want to cover two common errors that new C# developers frequently run into,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3200, 9, 48.808, 51.808, N'one error with a DateTime value type, and one error with a string type.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3201, 10, 51.808, 56.808, N'Once you construct a DataTime, and yes, you can use the new operator, you can construct a DateTime,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3202, 11, 56.808, 62.808, N'and set that DateTime value to August 11, of the year 2002, which is what the code on the screen is doing.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3203, 12, 62.808, 66.808, N'that''s because the DateTime constructor takes the year, the month, and the day.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3204, 13, 66.808, 72.808, N'Once I create this value I cannot change it, I can assign a different value into that date variable even', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3205, 14, 72.808, 78.808, N'though the DateTime exposes members like AddDays, which makes it look like I can add one day to an existing', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3206, 15, 78.808, 84.808, N'DateTime value, but this code has a problem because AddDays will never change the underlying DateTime value.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3207, 16, 84.808, 92.808, N'Instead what AddDays will do is return a new DateTime instance, so I need to assign the return value of', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3208, 17, 92.808, 97.808, N'AddDays into a variable if I really want to capture the date. The string type in .NET also has these qualities.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3209, 18, 97.808, 103.808, N'What''s interesting about string is that string is a reference type, and as I said before, don''t let anyone', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3210, 19, 103.808, 109.808, N'tell you that string is not a reference type. When working with strings your variables will be a reference', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3211, 20, 109.808, 113.808, N'that point to a sequence of characters, and that makes it easy to pass strings around to different methods', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3212, 21, 113.808, 119.808, N'because we pass a reference instead of copying the entire value of the string, and that''s good because', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3213, 22, 119.808, 123.808, N'strings can contain millions of characters and can be quite large.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3214, 23, 123.808, 129.808, N'A string is a reference type then, but it behaves like a value type in many ways because a string is immutable.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3215, 24, 129.808, 135.808, N'One of the methods on a string is a Trim method. What Trim will do is remove the leading or trailing white', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3216, 25, 135.808, 140.808, N'space from a string, so the space characters before it and after the value Scott should be removed,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3217, 26, 140.808, 146.808, N'but Trim does not modify the string that I am pointing to, instead Trim will create a new string with the', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3218, 27, 146.808, 151.808, N'characters removed, and return that new string. If all I do is just call Trim, and I don''t assign the return', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3219, 28, 151.808, 157.808, N'value of that method call to a variable, I''ve lost all the work that the Trim method performed, and so the', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3220, 29, 157.808, 164.808, N'code on the screen is all wrong, don''t use it, instead use the code that I''ll show you now.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3221, 30, 164.808, 169.808, N'Inside of Visual Studio let''s experiment with the code that was just on the slide, so first I will write a', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3222, 31, 169.808, 176.808, N'new test method, this test method will test how to add days to a DateTime.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3223, 32, 176.808, 182.808, N'So first I will need a DateTime variable, let''s just call it date, and I could assign to that variable', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3224, 33, 182.808, 188.808, N'DateTime.Now, We''ve seen that earlier in the course, that will give me the current time as this program is', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3225, 34, 188.808, 194.808, N'executing, but instead let''s use a specific date. I can do that using the new keyword, and there is a', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3226, 35, 194.808, 201.808, N'constructor for DateTime where I can pass in the year, let''s say 2015, and then the month, let''s just use', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3227, 36, 201.808, 207.808, N'January, and then the day of the month, let''s just use the first day, and there''s also constructors that', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3228, 37, 207.808, 212.808, N'would allow me to construct that day with a specific time during the day, but let''s go with that value,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3229, 38, 212.808, 220.808, N'and now say DateTime.AddDays1, and like I say it''s very easy to think that now you have a DateTime that', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3230, 39, 220.808, 228.808, N'represents January 2, but if I write an assert, and I try to assert that the following two things are equal,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3231, 40, 228.808, 235.808, N'the value 2, and date.Day, I will find this test will fail. Before I do that I''ll just point out that', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3232, 41, 235.808, 240.808, N'there''s all sorts of ways to look at various different pieces of the date, I could look at the specific hour,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3233, 42, 240.808, 249.808, N'or the specific millisecond, but I just want to look at the day, and if I run the test the failing test will', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3234, 43, 249.808, 256.808, N'tell me that I expected a 2, but the actual value is 1, so Date.Day is still a 1, and that''s because AddDays', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3235, 44, 256.808, 264.808, N'will construct a new DateTime, so let me assign that new DateTime into the date variable, and run the test', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3236, 45, 264.808, 271.808, N'again, and now we have a passing test. Next let''s try something with a string, so another test method,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3237, 46, 271.808, 281.808, N'and let''s test how to uppercase a string. So if I have a string variable, let''s call it name, and I point it', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3238, 47, 281.808, 287.808, N'to the string scott, with all lowercase characters, and yes, I do point it to that string value because if I', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3239, 48, 287.808, 294.808, N'press F12 on string I do see that it is a class defined inside of MSCorLib, and you''ll notice the class name', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3240, 49, 294.808, 300.808, N'is actually uppercase S, it just so happens that once again C# provides a magic keyword, string with a', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3241, 50, 300.808, 305.808, N'lowercase letter, that will map to that stystem.stringtype, so the two are equivalent.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3242, 51, 305.808, 311.808, N'C# is a case sensitive language, so if I didn''t have that keyword in C# I would have to stay String uppercase', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3243, 52, 311.808, 315.808, N'S, but now that we know that let''s try to do something with our name.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3244, 53, 315.808, 323.808, N'Ultimately what I want to do is invoke a ToUpper method, which is one of many methods on the string type that', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3245, 54, 323.808, 329.808, N'looks like it would change the underlying string, so you can Trim a string, you can Trim from the start,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3246, 55, 329.808, 337.808, N'or Trim just from the end. You can say ToUpper, ToLower, but if I write an assertion here, and try to assert', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3247, 56, 337.808, 344.808, N'that the value I expect is SCOTT, all uppercase, and compare that to the actual value, which is the value', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3248, 57, 344.808, 353.808, N'in name, if I run this test I will find that it fails because even though string is a reference type,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3249, 58, 353.808, 358.808, N'it behaves very much like a value type, and I can see that I expected an all uppercase SCOTT, but I actually', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3250, 59, 358.808, 363.808, N'got an all lowercase scott, and that''s because all of these methods like Trim, and ToUpper, and ToLower,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3251, 60, 363.808, 370.808, N'they don''t modify the string that I''m pointing to, instead they create a new string, and return that string', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3252, 61, 370.808, 375.808, N'from the method, so I really need to capture that by assigning a reference to that new string back into my', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3253, 62, 375.808, 382.808, N'name variable, and once I do that, and I run all the tests I should find that this passes, which it does,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3254, 63, 382.808, 386.808, N'and hopefully this will save you some time in the future. Always remember when working with a value type', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3255, 64, 386.808, 391.808, N'that the value type might be immutable, but methods you see on that value type might be methods that return a', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3256, 65, 391.808, 397.808, N'new value or a new instance, and not change the underlying value, and that rule also applies to string,', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3257, 66, 397.808, 417.808, N'which behaves like a value type.', N'ro', N'', 108)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3258, 1, 0, 3.835, N'One more reference type that I want to cover in more depth is the array.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3259, 2, 3.835, 8.835, N'The array is a simple data structure to manage a collection of multiple objects or multiple values,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3260, 3, 8.835, 14.835, N'and the array itself is always a reference type. Now you might remember that in our GradeBook we are', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3261, 4, 14.835, 19.835, N'managing a collection of multiple floating point values, those values represent the grades in the GradeBook,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3262, 5, 19.835, 25.835, N'but we are using a list to store those grades in the GradeBook, not an array, primarily because arrays have', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3263, 6, 25.835, 31.835, N'a fixed size, that means when I create an array I have to specify the size of the array, which is how many', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3264, 7, 31.835, 40.835, N'items the array can hold, and that size, although you can change it, changing the size of an array can be a relatively expensive operation.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3265, 8, 40.835, 45.835, N'In our program if we new exactly how many grades we might need to store, or at least the maximum number of', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3266, 9, 45.835, 51.835, N'grades, then it might make sense to use an array instead of a list, but since we don''t know how many grades', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3267, 10, 51.835, 56.835, N'someone might want to store we use a list because a list will just grow automatically, and grab the space', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3268, 11, 56.835, 62.835, N'needed to keep storing new items every time we call Add on that list, but one thing both the list and the', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3269, 12, 62.835, 69.835, N'array have in common is that they are both 0 indexed, meaning the first item in a list or an array is at', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3270, 13, 69.835, 74.835, N'index 0, which is sometimes confusing because we tend to think of the first item being in position 1,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3271, 14, 74.835, 79.835, N'but in C# and many other languages actually, the first item is position 0.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3272, 15, 79.835, 86.835, N'You might remember we encountered this indexing already when we worked with the args array passed to our', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3273, 16, 86.835, 91.835, N'program in the first module, the args array contained the command line parameters, and the first parameter', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3274, 17, 91.835, 97.835, N'to the program was in position 0. Here in this code snippet we see the syntax for declaring an array.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3275, 18, 97.835, 103.835, N'First is a const int variable. The const keyword is something that you can add to a variable if that', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3276, 19, 103.835, 108.835, N'variable if that variable is going to hold a constant value. Once I''ve declared and initialized the', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3277, 20, 108.835, 114.835, N'variable, the value of that variable cannot be changed. And in this code we will store the final score for', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3278, 21, 114.835, 119.835, N'four students, so students so the syntax for declaring an array is to use the type that the array is going to', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3279, 22, 119.835, 126.835, N'hold, followed by square brackets. What we''re declaring here is an array called scores, it''s going to hold integers.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3280, 23, 126.835, 132.835, N'We will construct a new array that can hold exactly four integers, and this is all strongly typed, so if I', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3281, 24, 132.835, 140.835, N'try to assign a string or a floating point number into one of the positions of the aray, I would get a complier error.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3282, 25, 140.835, 145.835, N'The array can only store integer values. And then we have a foreach loop very similar to the foreach loop', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3283, 26, 145.835, 148.835, N'that we have inside of the GradeBook when we''re computing statistics.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3284, 27, 148.835, 154.835, N'it''s going to look at each integer value in that array of scores, and add that score to another variable', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3285, 28, 154.835, 162.835, N'where we''re keeping track of the total score. let''s work with arrays a bit inside of our unit tests.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3286, 29, 162.835, 169.835, N'Inside of our test project let me set you up with a test method that you can use to start experimenting with arrays.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3287, 30, 169.835, 175.835, N'So let''s just call this test UsingArrays, and I''ll need to declare an array, so let''s create an array of', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3288, 31, 175.835, 179.835, N'floating point numbers, that means I need to use the float keyword, and then I need to use the square', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3289, 32, 179.835, 186.835, N'brackets, that tells the C# complier this is an array. let''s just call the array grades, and now instead of', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3290, 33, 186.835, 192.835, N'initializing that variable immediately, let me just declare the variable because right now I have a variable', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3291, 34, 192.835, 198.835, N'that can point to any array of floating point numbers, it doesn''t matter what the size is.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3292, 35, 198.835, 205.835, N'In order to effectively use that variable, however, I will need to point it to a specific array,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3293, 36, 205.835, 211.835, N'so let''s assign a reference to a new floating point array. This time when I use the square brackets I need', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3294, 37, 211.835, 218.835, N'to specify the size of that array. let''s give the array the ability to store three numbers, then let''s call', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3295, 38, 218.835, 224.835, N'a method that will add grades into that array, so a method that doesn''t exist yet, it will be called', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3296, 39, 224.835, 230.835, N'AddGrades, and I''ll pass in the grades, and then I''ll want to write an assertion, I want to Assert,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3297, 40, 230.835, 240.835, N'let''s say, that the value 89.1 is in array index sub1. So we need to create this method AddGrades,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3298, 41, 240.835, 246.835, N'and let me show you a trick. Visual Studio is smart enough that if you''ve written a method that doesn''t', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3299, 42, 246.835, 251.835, N'exist yet, Visual Studio has the ability to create that method for you, it doesn''t know how you want to', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3300, 43, 251.835, 257.835, N'implement that method, but if I go to the light bulb, and select generate the method, I now have a private', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3301, 44, 257.835, 263.835, N'void method called AddGrades that takes as a parameter a reference to an array of floating point numbers.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3302, 45, 263.835, 268.835, N'The code that is inside this method right now, I want to remove that, and I want to be able to say that', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3303, 46, 268.835, 276.835, N'grades sub 1 = 89.1 , the floating point number. Again you do have to be very careful when comparing numbers', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3304, 47, 276.835, 281.835, N'for strict equality, that will always work for integers, but for floating point numbers you can sometimes', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3305, 48, 281.835, 287.835, N'run into trouble as we saw earlier, but you might be wondering since float is a value type, will the calling', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3306, 49, 287.835, 294.835, N'method using arrays actually see this value placed into the array, and the answer is yes because an array is', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3307, 50, 294.835, 300.835, N'a reference type, and even though I''m dealing with a value type, which is a floating point number,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3308, 51, 300.835, 305.835, N'that number is stored inside the array, and both the grades variable inside of using arrays and the grades', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3309, 52, 305.835, 311.835, N'variable that is the parameter to add grades, those are both references to the exact same array.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3310, 53, 311.835, 319.835, N'If I run the test with Ctrl+ RA I will see that is a passing test, and let''s recreate a scenario that we were looking at earlier.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3311, 54, 319.835, 326.835, N'What happens here on the first line of code, if I say grades = a new array of floating point number,', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3312, 55, 326.835, 334.835, N'let''s say of size 5, what happens when I run the test now? Well the test will fail because now I''ve created', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3313, 56, 334.835, 340.835, N'a new array, I''ve placed this value inside of that new array, the grades variable that is inside of using', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3314, 57, 340.835, 345.835, N'arrays, that''s still pointing to the original array of floating point number that we had, and this method', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3315, 58, 345.835, 350.835, N'AddGrades no longer uses that. This is not placing the value into the array that we need, so let me remove', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3316, 59, 350.835, 357.835, N'that line of code, rerun the test, leave you with all passing tests, and now I encourage you to experiment', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3317, 60, 357.835, 362.835, N'with the code that is inside of this unit test project, try some different scenarios passing around value', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3318, 61, 362.835, 368.835, N'types and reference types, and using arrays, and using strings, and with every little bit of code that you', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3319, 62, 368.835, 388.835, N'write you''ll become more comfortable with the C# language.', N'ro', N'', 109)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3320, 1, 0, 6.085, N'What We''ve seen in this module is that every type falls into one of two categories, every type is a value', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3321, 2, 6.085, 12, N'type or a reference type. You can use the struct keyword to create a new value type, but the majority of', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3322, 3, 12, 17.5, N'what you''ll be creating in day-to-day software is reference types, and you''ll do that using a class keyword.', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3323, 4, 17.5, 23, N'We also looked a little bit at strings and arrays, these are both reference types, but remember the string', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3324, 5, 23, 28.5, N'behaves like a value type because strings are immutable, and you cannot change a string value that already', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3325, 6, 28.5, 33, N'exists, you can only build new strings. In the next module we''re going to build on this knowledge,', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3326, 7, 33, 36.5, N'and we''re going to start adding some additional features to our GradeBook.', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3327, 8, 36.5, 42, N'we''ll add those features by adding new members to our GradeBook, class members like methods, but we''re also', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3328, 9, 42, 62, N'going to look at some different types of members, members like properties and events.', N'ro', N'', 110)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3329, 1, 0, 8, N'Hi, this is Scott, and in this module we''re going to look at the members that you can attach to a type in the C# programming language.', N'ro', N'', 111)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3330, 2, 8, 13.5, N'This includes some familiar members We''ve already used, members like methods and fields, We''ve attached these', N'ro', N'', 111)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3331, 3, 13.5, 18, N'to classes and structs. we''re going to go into more detail on those members, but also', N'ro', N'', 111)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3332, 4, 18, 38, N'introduce new members that you can use, the new members being properties and events.', N'ro', N'', 111)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3333, 1, 1.526, 5.526, N'let''s start this module by reviewing a few things that we know about methods.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3334, 2, 5.526, 12.526, N'Methods define behavior, they are our place where we can write code, and we can invoke a method to execute that code inside.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3335, 3, 12.526, 17.526, N'Every method has an access modifier, the default is private where the method is only available to other code', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3336, 4, 17.526, 23.526, N'inside of the same class, but we can mark a method as internal to make it available to all the code inside of', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3337, 5, 23.526, 27.526, N'the same project, or use the public keyword to make the method available everywhere.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3338, 6, 27.526, 32.526, N'Every method also has a return type, the method that we are looking at on the screen has a return type of', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3339, 7, 32.526, 37.526, N'void, meaning the method doesn''t return a value to the caller, it executes the code inside, but it doesn''t', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3340, 8, 37.526, 43.526, N'need a return statement to give anything back. Then we have the method name, and then 0 or more parameters,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3341, 9, 43.526, 50.526, N'which are listed in the parentheses after the name. This method takes one parameter, a numerical value of', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3342, 10, 50.526, 54.526, N'type int, and the parameter is then a variable that is available throughout the rest of the method.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3343, 11, 54.526, 60.526, N'The method we are looking at takes this integer and passes it through to another method, the static GetBytes', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3344, 12, 60.526, 65.526, N'method of the BitCoverter class. This BitConverter has a number of methods available to turn values into', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3345, 13, 65.526, 71.526, N'bytes, and once we have the byte for our integer we will write out each byte to the console using some', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3346, 14, 71.526, 76.526, N'special formatting symbols that know how to write out those values as hexadecimal numbers.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3347, 15, 76.526, 81.526, N'More on the formatting symbols in just a bit. Now here''s a couple of new concepts about methods,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3348, 16, 81.526, 85.526, N'first there is a params keyword I want to show you in the demo.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3349, 17, 85.526, 89.526, N'The params keyword allows you to take a variable number of arguments because sometimes you might not know how', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3350, 18, 89.526, 95.526, N'many parameters a method will need. Params is not typically something that you use on a regular basis,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3351, 19, 95.526, 101.526, N'but it''s extremely useful in some scenarios. Another concept I want to introduce you to in the demo is the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3352, 20, 101.526, 108.526, N'concept of a method signature. You can think of a method signature as the unique identifier for a method.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3353, 21, 108.526, 114.526, N'The signature consists of the name of the method, as well as the number and the types of the parameters that the method takes.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3354, 22, 114.526, 119.526, N'The method signature allows the C# complier to distinguish between a method named WriteAsBytes that takes a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3355, 23, 119.526, 126.526, N'single int and another method with the same name, WriteAsBytes, but it takes a parameter of type string.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3356, 24, 126.526, 131.526, N'Those are two different methods, and I can have both methods in my class, and really I could have as many', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3357, 25, 131.526, 138.526, N'methods named WriteAsBytes as I need, as long as the parameter lists are unique because parameter lists are', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3358, 26, 138.526, 143.526, N'part of the signature. This is a feature in C# known as method overloading, and I do want to point out that', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3359, 27, 143.526, 150.526, N'the return type of a method is not part of the method signature, let''s take a closer look.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3360, 28, 150.526, 153.526, N'In this module we''re going to continue to work with the GradeBook project that we created earlier in the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3361, 29, 153.526, 159.526, N'course, and if I run this project with Ctrl+F5 you can see we are outputting statistics, but without any', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3362, 30, 159.526, 165.526, N'descriptive text for these numbers. So while you might be able to infer what is the average, the highest,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3363, 31, 165.526, 169.526, N'and the lowest grades, it would be nice if we added some text to make that more descriptive.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3364, 32, 169.526, 175.526, N'So each time I write out a result, I also want to write out a description of what that result is, and to do', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3365, 33, 175.526, 180.526, N'that I''m going to create a helper method, a method that I can invoke from the main method of the program class.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3366, 34, 180.526, 186.526, N'let''s call this method WriteResult, I''ll use the void keyword because this method doesn''t need to return a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3367, 35, 186.526, 193.526, N'value, and this has to be a static method because I want to invoke this method from another static method,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3368, 36, 193.526, 198.526, N'and when you are inside a static member of a type you can only reach other static members of that same type,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3369, 37, 198.526, 204.526, N'so this has to be a static method that''s called WriteResult. Every time I invoke this method I want to pass', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3370, 38, 204.526, 210.526, N'in a description of the result that I''m going to write, and then the value of the result itself.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3371, 39, 210.526, 215.526, N'And inside of here let''s just do a Console.WriteLine, I''ll do that with the code snippet in Visual Studio CW,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3372, 40, 215.526, 221.526, N'press Tab and Tab, I want to write out the description, and let''s just do some string concatenation to format', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3373, 41, 221.526, 227.526, N'the output, so description plus a colon and a space, and then the result.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3374, 42, 227.526, 234.526, N'let''s try this out just with the average grade for right now, so I want to WriteResult, pass in the text', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3375, 43, 234.526, 242.526, N'Average, and then the AverageGrade itself. let''s give that a quick run with Ctrl+F5, and that looks like the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3376, 44, 242.526, 244.526, N'type of output that I want, so I can change over some of the other values.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3377, 45, 244.526, 251.526, N'Before I do, let me take this WriteResult method, and make a copy of that with Ctrl+C, and then paste it with', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3378, 46, 251.526, 257.526, N'Ctrl+V, and as soon as I do that Visual Studio will tell me that the C# complier sees an error, and the error', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3379, 47, 257.526, 262.526, N'is that I cannot have two methods on a type with the same signature, so now I have two methods,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3380, 48, 262.526, 268.526, N'they''re both called WriteResult, they both take two parameters of type string and float, so this is illegal,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3381, 49, 268.526, 275.526, N'but what happens if I change this version of WriteResult to take an integer value instead.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3382, 50, 275.526, 279.526, N'Now the C# complier sees two different methods, one that takes a string and an int, one that takes a string and a float.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3383, 51, 279.526, 285.526, N'So when I call write result here, which method will the C# complier choose, well generally speaking the C#', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3384, 52, 285.526, 290.526, N'complier will choose the method that makes the most sense. So if I am invoking WriteResult, and I''m passing', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3385, 53, 290.526, 296.526, N'a string and a floating point number, if the C# complier sees a method signature that matches those parameter', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3386, 54, 296.526, 301.526, N'types exactly, that''s the version of the overloaded method that it''s going to invoke.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3387, 55, 301.526, 306.526, N'Now there are some subtleties and some crazy edge cases where sometimes the C# complier can choose a method', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3388, 56, 306.526, 311.526, N'that you didn''t expect, but for the most part the C# complier is going to do something sensible, so you can', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3389, 57, 311.526, 316.526, N'see just based on the highlighting in Visual Studio that the version of WriteResult I''ll be invoking is the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3390, 58, 316.526, 321.526, N'one that takes a string and a float. Now let''s change over highest grade, and what I want to do is a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3391, 59, 321.526, 329.526, N'WriteResult, and I''ll pass in the text Highest, and this time I want to take this highest grade and do an', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3392, 60, 329.526, 335.526, N'explicit conversion to an integer, so this syntax in C# where you have a type name, or in this case the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3393, 61, 335.526, 341.526, N'keyword int, which maps to a type, the int 32 type, this is a type corrosion, some people would call this a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3394, 62, 341.526, 347.526, N'type cast, this is explicitly telling the C# complier I want to take this floating point number and convert', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3395, 63, 347.526, 353.526, N'that value into an integer, and when you do this at runtime the floating point number will just be truncated.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3396, 64, 353.526, 358.526, N'If you actually wanted to do some rounding when you do the conversion there are some methods on the math', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3397, 65, 358.526, 363.526, N'class that will allow you to round a number, but this time when I call WriteResult you can see based on the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3398, 66, 363.526, 367.526, N'highlighting the C# complier will choose the method that takes a string and an int.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3399, 67, 367.526, 373.526, N'So for the most part, the C# complier is just going to match up the parameters and their types so that everything works together.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3400, 68, 373.526, 381.526, N'And let''s do this one more time, I want to WriteResult on the LowestGrade by passing in lowest, and now if I', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3401, 69, 381.526, 388.526, N'run the program I have some nice output. And this is the essence of method overloading in C#.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3402, 70, 388.526, 391.526, N'Typically when you overload methods to take these different parameter types it''s because you want to do', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3403, 71, 391.526, 396.526, N'something different with those parameter types, in this case all we''re really doing is just doing a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3404, 72, 396.526, 402.526, N'Console.WriteLine, but I want to show you the Console.WriteLine itself, it is an overloaded method.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3405, 73, 402.526, 407.526, N'So if I remove and retype the opening parenthesis that will bring up the IntellSense window that shows me all', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3406, 74, 407.526, 412.526, N'of the different overloads of Console.WriteLine. here''s one that takes a bool, one that takes a character,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3407, 75, 412.526, 420.526, N'I can navigate through this using the arrow keys, here''s a character array, a decimal value, a double value.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3408, 76, 420.526, 425.526, N'I want to show you a special version of WriteLine that is in here, the fifteenth overload of WriteLine,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3409, 77, 425.526, 431.526, N'this one takes a string and then an object array. Notice that object array has the params keywords in front.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3410, 78, 431.526, 437.526, N'That params keyword means that you can pass a variable number of arguments to this method, and a parameter to', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3411, 79, 437.526, 443.526, N'a method that is marked with this params keyword, it''s always the last parameter to a method because what the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3412, 80, 443.526, 449.526, N'C# complier will do as you start to pass parameters to this method, everything after the initial string,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3413, 81, 449.526, 453.526, N'the C# complier is just going to take all those parameters, package them up into an array, and pass them to', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3414, 82, 453.526, 459.526, N'the method that you are invoking. So in other words, just as an experiment, if I used the params keyword', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3415, 83, 459.526, 465.526, N'here, then my result would not be a single floating point number, instead it would be an array of floating', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3416, 84, 465.526, 472.526, N'point number, and now what I can do is I can pass just a single value, but I could also continue to pass', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3417, 85, 472.526, 477.526, N'values in here, so I could pass the lowest grade, and then a 2, and a 3, and a 4, and of course inside of', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3418, 86, 477.526, 482.526, N'WriteResult what we''d have to do then is loop through this array, and display each result, this isn''t really', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3419, 87, 482.526, 487.526, N'what we want to do, I just want to demonstrate how you would use the params keyword, we just want a single', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3420, 88, 487.526, 493.526, N'floating point result, so let me change this back, but what I do want to do is use this version of WriteLine', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3421, 89, 493.526, 498.526, N'that takes What''s known as a formatting string, and then a variable number of parameters because you''ll see', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3422, 90, 498.526, 504.526, N'this quite commonly in C# code. A formatting string looks like this, let''s say I want to display the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3423, 91, 504.526, 507.526, N'description, and then a colon, and a space, and then the result.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3424, 92, 507.526, 513.526, N'One way to do that is with string concatenation, another way to do that is to use a formatting string like', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3425, 93, 513.526, 519.526, N'so, and you can think of the pieces inside of the curly braces as placeholders, so I have placeholders 0 and', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3426, 94, 519.526, 525.526, N'placeholder 1, and then the values that I pass here, that runtime will be placed into those placeholders.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3427, 95, 525.526, 533.526, N'In other words if I pass description and result, then at runtime instead of displaying curly brace 0 curly', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3428, 96, 533.526, 540.526, N'brace, the runtime is going to go off looking for the first element in the array of parameters that I have', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3429, 97, 540.526, 545.526, N'passed, so these two parameters, they are packaged up into an array, the first element would be description,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3430, 98, 545.526, 550.526, N'so description goes here. Now we have some literal text, which is the colon and the space, and then here''s', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3431, 99, 550.526, 556.526, N'another placeholder where I want array index 1 placed into here, so this will take the result and place it here.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3432, 100, 556.526, 562.526, N'If I run this program again, you''ll see I still get the same output, which is quite often it''s sometimes', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3433, 101, 562.526, 567.526, N'easier to work with a formatting string than it is string concatenation because you can think of that', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3434, 102, 567.526, 573.526, N'formatting string as a template, and it''s sometimes a little bit easier to see the resulting string that', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3435, 103, 573.526, 576.526, N'you''re hoping to build. Now as the slide eluded to, there''s also some special formatting characters that you', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3436, 104, 576.526, 583.526, N'can add to these placeholders. I am not going to go into detail on all of the formatting options that are', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3437, 105, 583.526, 587.526, N'available, you can go to your favorite search engine, and search for C# string formatting, and you''ll find', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3438, 106, 587.526, 591.526, N'lots of documentation because there are many formatting options.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3439, 107, 591.526, 596.526, N'There are all sorts of pneumonics to format DateTime values in a specific way, or to take this floating point', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3440, 108, 596.526, 604.526, N'number and format it as a currency or in scientific notation. here''s an example, if I place a colon and a', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3441, 109, 604.526, 610.526, N'F2, what I''m asking the runtime to do is to take my number, the result, and format it as a floating point', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3442, 110, 610.526, 619.526, N'number with two digits after the decimal place, so you can see now instead of getting 85.166666, I get 85.17.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3443, 111, 619.526, 627.526, N'So this has even rounded the number for me. I can also place a C in here to format that value as a currency.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3444, 112, 627.526, 633.526, N'Notice that highest isn''t formatted that way because when we displayed the highest grade we were displaying', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3445, 113, 633.526, 639.526, N'it using this version of WriteResult that takes an integer. And now one more quick tip, if you''re using', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3446, 114, 639.526, 646.526, N'Visual Studio 2015 and the C# 6 complier, there''s a new feature in C# version 6 called string interpolation,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3447, 115, 646.526, 651.526, N'it works like this. Instead of using these formatting strings, which can sometimes create trouble because', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3448, 116, 651.526, 657.526, N'you forget that you really need two parameters in here, and you only pass one, a new feature of C# 6 string', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3449, 117, 657.526, 665.526, N'interpolation allows you to place a dollar sign in front of the opening quote for this formatting string,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3450, 118, 665.526, 670.526, N'and instead of using numbers to index into an array, I can use the variable name directly, so this is a way', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3451, 119, 670.526, 675.526, N'of saying please write out the description, whatever that string value is, and then the literal text colon', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3452, 120, 675.526, 681.526, N'space, and now I want to write out the result, and I can still use a formatting string, so I want it to write', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3453, 121, 681.526, 687.526, N'out as a floating point number with two digits after the decimal, and if we run this we''re still getting the', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3454, 122, 687.526, 693.526, N'output that we desire. So the key take-aways are that you can have overloaded methods in C#, that is methods', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3455, 123, 693.526, 699.526, N'that have the same name, but different signatures, or the signature consists not only of the method name,', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3456, 124, 699.526, 704.526, N'but also the number and the types of parameters, and the easy way to think about it is when you write code to', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3457, 125, 704.526, 710.526, N'invoke WriteResult, will there be a way to distinguish between these two different methods, and in this case', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3458, 126, 710.526, 715.526, N'since they both take two parameters, fortunately the last parameter has different types, so the C# complier', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3459, 127, 715.526, 735.526, N'will choose the int method or the float method depending on the type of the value that you have to pass in.', N'ro', N'', 112)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3460, 1, 0, 7.935, N'Another type of member We''ve already been using is the field. Fields define the variables inside of a class,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3461, 2, 7.935, 11.935, N'so they define the state or the data that you want to hold as part of an object.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3462, 3, 11.935, 16.935, N'Previously we added a name field to our GradeBook class, and we made that field public, so anyone could go to', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3463, 4, 16.935, 22.935, N'the GradeBook and change the name at anytime, but it is more common to make fields private and hide them,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3464, 5, 22.935, 27.935, N'so that no code outside of the class has access to the field. Data is something you typically want to', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3465, 6, 27.935, 32.935, N'protect and validate, you don''t want just anyone to be able to change the data inside of an object,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3466, 7, 32.935, 38.935, N'so the code on the screen is using a private field of type string, the name of the field is _name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3467, 8, 38.935, 43.935, N'the underscore isn''t required for private fields, that''s just a naming convention that some developers use', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3468, 9, 43.935, 48.935, N'for private fields, you don''t have to use that convention, but this field is inside of a class named Animal,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3469, 10, 48.935, 54.935, N'and in the constructor for Animal we force someone to construct an animal by passing a name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3470, 11, 54.935, 59, N'and the constructor saves the name in the private field, so it''s available for the rest of the object to use.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3471, 12, 59, 64.935, N'Notice this field has a readonly keyword attached, that means the code inside of this class can only assign a', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3472, 13, 64.935, 70.935, N'name in the constructor, or when the field is defined with a field initializer, so I could say private', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3473, 14, 70.935, 77.935, N'readonly string _name = and some string value. If I try to set name to a new value in any other method other', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3474, 15, 77.935, 81.935, N'than the constructor, the C# complier will give me an error for this class.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3475, 16, 81.935, 86.935, N'Now you might wonder how could I let code outside of my class get to the value of this field like the name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3476, 17, 86.935, 92.935, N'do I have to write a method to return that value for other people to be able to read the name, and the answer', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3477, 18, 92.935, 95.935, N'is no, that''s where properties come in.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3478, 19, 95.935, 101.935, N'A property is similar to a field because it controls state and data associated with an object, but unlike a', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3479, 20, 101.935, 108.935, N'field a property has a special syntax we can use to control what happens when someone reads the data or writes the data.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3480, 21, 108.935, 113.935, N'These are known as the get and set accessors, and these accessors can contain code, you can almost think of', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3481, 22, 113.935, 117.935, N'them as methods, and we can do things like computations or validation.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3482, 23, 117.935, 121.935, N'In this code snippet we have a field called _name again, it is private, so I can only access the field', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3483, 24, 121.935, 127.935, N'directly from code inside of the same class, but I also have a property called Name, and that''s capitalized', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3484, 25, 127.935, 132.935, N'because the naming guidelines for C# tell us to capitalize property names, as well as method names,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3485, 26, 132.935, 136.935, N'and I know this is a property because it has get and set accessors.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3486, 27, 136.935, 143.935, N'Inside of a get accessor I have some code, it''s inside of curly braces just like the code inside of a method.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3487, 28, 143.935, 147.935, N'I can write as much code as I want inside of the get accessor, but ultimately I have to return a value,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3488, 29, 147.935, 153.935, N'and that value has to be of type string because that''s the type of property that I''m inside, and this code is', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3489, 30, 153.935, 159.935, N'just returning the same string that I already have in _name, but I could also return the name as uppercased,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3490, 31, 159.935, 163.935, N'or lowercased, or just the first three letters, whatever I want as long as I return a string.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3491, 32, 163.935, 170.935, N'Even more important here is the set accessor, inside of set, this is the code that will be invoked any time', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3492, 33, 170.935, 174.935, N'someone tries to write a value into this name property, and whatever value someone is trying to write,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3493, 34, 174.935, 180, N'that will be passed to me implicitly through a variable called value.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3494, 35, 180, 184.935, N'You can think of this almost as a parameter to this set accessor if you''re thinking of it as a method.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3495, 36, 184.935, 191.935, N'So I can take that value and store it directly under _name, but first do some validation to make sure that', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3496, 37, 191.935, 195.935, N'someone''s not trying to set name to null or to an empty string.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3497, 38, 195.935, 200.935, N'I want to make sure that the name actually has some characters, and that''s a common use of set logic,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3498, 39, 200.935, 206.935, N'to validate an incoming value to make sure it meets some standards before you accept that value into your object.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3499, 40, 206.935, 212.935, N'there''s another type of property in C# known as the auto-implemented property, this is a property that just', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3500, 41, 212.935, 219.935, N'has the keywords get and set inside, there''s semicolons after get and set, there''s no curly braces or code,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3501, 42, 219.935, 223.935, N'and it''s known as an auto-implemented property because behind the scenes the C# complier will automatically', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3502, 43, 223.935, 229.935, N'create a field to store the value for this property, and it will automatically read that field during a get', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3503, 44, 229.935, 234.935, N'operation, and write to that field during a set operation, but I never have to write that field or the code', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3504, 45, 234.935, 237.935, N'explicitly, the C# complier will do that for me behind the scenes.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3505, 46, 237.935, 247.935, N'let''s take a closer look at this in code. Inside of our program let''s open up the GradeBook, so I can remind', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3506, 47, 247.935, 251.935, N'you about the public field that we added to this class earlier in the course, it''s a field called Name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3507, 48, 251.935, 258.935, N'and I have capitalized this member because it is a public member, and that''s the typical convention in the C# program.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3508, 49, 258.935, 266.935, N'Inside of Program.cs I can make an assignment to that Name field just by saying book.Name = Scott''s', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3509, 50, 266.935, 272.935, N'GradeBook, so you can think of that as writing a reference into that field, a reference to a string that says', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3510, 51, 272.935, 280.935, N'Scott''s GradeBook, and I can read that value just by using the .operator and saying book.Name.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3511, 52, 280.935, 288.935, N'That will write out the name of the GradeBook when I run the program, and now I can see Scott''s GradeBook.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3512, 53, 288.935, 294.935, N'Now let''s change this over to being a property, and I''ll start by implementing an auto-implemented property,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3513, 54, 294.935, 299.935, N'that''s where I just have get and set with semicolons immediately after the keywords, there''s no code', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3514, 55, 299.935, 304.935, N'involved, but I have now changed this member of the GradeBook class from being a field to a property,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3515, 56, 304.935, 309.935, N'and you might be wondering what is the difference, well from a client''s perspective, that is someone who''s', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3516, 57, 309.935, 315.935, N'using the Gradebook, there is no difference, I still say book.Name = to assign to that property,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3517, 58, 315.935, 320.935, N'that will call the setter, and I still use book.Name to retrieve the value of that property, and read the', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3518, 59, 320.935, 326.935, N'property, that will call the getter, and behind the scenes the C# complier has automatically created a', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3519, 60, 326.935, 333.935, N'backing field for this property, that''s what we would call the field behind a property that actually stores the value.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3520, 61, 333.935, 338.935, N'So this change hasn''t made a huge difference in my code, but I will tell you there are some parts to the .NET', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3521, 62, 338.935, 343.935, N'Framework and other frameworks that treat properties and fields differently, specifically if you''re doing', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3522, 63, 343.935, 349.935, N'serialization, that is if you''re taking an object, and you''re serializing it into XML, or JSON, or saving it', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3523, 64, 349.935, 355.935, N'to a database, there are some frameworks that only look at properties when they do the serialization,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3524, 65, 355.935, 360.935, N'they do not look at fields by default. There are also data-binding features in the .NET Framework,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3525, 66, 360.935, 366.935, N'these are features where you assign an object to some part of your user interface, and the data-binding', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3526, 67, 366.935, 371.935, N'features will automatically move data from an object onto the screen, and some of these data-binding features', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3527, 68, 371.935, 376.935, N'will only move properties, they won''t look at fields, so again there can be a very subtle difference between', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3528, 69, 376.935, 382.935, N'fields and properties, and I would say in general in you''re going to make the member publically available,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3529, 70, 382.935, 390.935, N'we typically do that through a property instead of a field. In other words I will keep the grades field as a', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3530, 71, 390.935, 395.935, N'field and keep that private, I only want to be able to change grades inside of this class, but names,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3531, 72, 395.935, 400.935, N'since I''m making that publically available, I will make that a property, and I will make it a capitalized', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3532, 73, 400.935, 407.935, N'member of the type, although it is perfectly legal to have private properties or internal properties,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3533, 74, 407.935, 412.935, N'but I would say you just don''t see them that often. But what if we wanted to protect against this situation,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3534, 75, 412.935, 421.935, N'what if we wanted to protect against someone saying book.Name = an empty string, or book.Name = null,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3535, 76, 421.935, 429.935, N'so null is a keyword in C#, and as we talked about before a field or a variable that holds a null value,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3536, 77, 429.935, 433.935, N'it doesn''t point to anything, it doesn''t reference anything, there''s no object, or there''s no string there', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3537, 78, 433.935, 439.935, N'now to interact with, and currently if I run the program, if I try to Console.WriteLine that null value it', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3538, 79, 439.935, 445.935, N'just comes out as blank. I want to prevent that, and that means I won''t be able to use an auto-implemented', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3539, 80, 445.935, 453.935, N'property, I''m going to need to add some logic to my setter to perform some validation, and as soon as I start', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3540, 81, 453.935, 458.935, N'to add code to the setter then I either need to get rid of my getter or also add code to the getter,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3541, 82, 458.935, 465.935, N'and because I''m not using an auto-implemented property anymore I''m going to need to create a field explicitly', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3542, 83, 465.935, 472.935, N'that will be able to hold that string value, so I will create a private field called _name, and when someone', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3543, 84, 472.935, 479.935, N'wants to read the name property I''ll just return name, but again I could do anything that I wanted to in here.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3544, 85, 479.935, 487.935, N'I could return a new string that was uppercased, or lowercased, or a sub string, I''ll just return _name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3545, 86, 487.935, 491.935, N'and when someone''s trying to write to this property I want to check to see if the string is null or empty,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3546, 87, 491.935, 498.935, N'so I can write String.IsNullOrEmpty, that is a static method on the string class.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3547, 88, 498.935, 503.935, N'I will pass in value, which is the implicit variable that I have inside of a setter that will contain the', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3548, 89, 503.935, 511.935, N'value that someone is trying to write into my property, and then IsNullOrEmpty will return true is value IsNullOrEmpty.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3549, 90, 511.935, 518.935, N'If I put an exclamation point here, that is a logical not operation that would turn that true into a false,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3550, 91, 518.935, 526.935, N'so I''m saying if the string is not null or empty only then will I assign that value into the name,', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3551, 92, 526.935, 534.935, N'otherwise I will ignore this value. What I''d really like to do is create an error condition if someone gives', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3552, 93, 534.935, 538.935, N'me an empty name, that way I can let the caller know that they did something wrong, but we''ll talk about', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3553, 94, 538.935, 542.935, N'error conditions like that more in the next module when we talk about exceptions.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3554, 95, 542.935, 548.935, N'For right now I just want to show you when I run the program, this assignment Book.Name = null, we should be', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3555, 96, 548.935, 553.935, N'ignoring that value, we''ll stick with Scott''s GradeBook, and that''s the real power of properties.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3556, 97, 553.935, 557.935, N'You can write logic inside of a get accessor and a set accessor.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3557, 98, 557.935, 563.935, N'The get accessor can perform computations, or just retrieve some field value, and return it, the set accessor', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3558, 99, 563.935, 568.935, N'can perform validations, and it can protect the internal state of your object, and make sure that someone', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3559, 100, 568.935, 574.935, N'isn''t giving you a value that you don''t want. So properties are really all about state, methods are still', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3560, 101, 574.935, 594.935, N'all about behavior, and next let''s turn our attention to one more type of member that we can add to a type.', N'ro', N'', 113)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3561, 1, 0, 4.5, N'Another type of member that you can have in a class is an event.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3562, 2, 4.5, 10.045, N'To understand events we need to delve into some new concepts in C# and .NET, but before we do let me give you', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3563, 3, 10.045, 17.045, N'a high-level overview of why events are useful. Many times in software development we need to interact with', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3564, 4, 17.045, 21.045, N'or keep track of components that do interesting things at unpredictable times.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3565, 5, 21.045, 26.045, N'For example, a button on a screen is a component that we want to keep track of, and we want to know when a', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3566, 6, 26.045, 32.045, N'user clicks on this button. We don''t know exactly when the user will click on the button, but we do need to', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3567, 7, 32.045, 37.045, N'be notified because when the user does click we typically need to then execute some code.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3568, 8, 37.045, 43.045, N'Sometimes we need to save data to a file or read data from a database, and this isn''t just about components', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3569, 9, 43.045, 47.045, N'on the screen like a button. We might need to also keep track of a directory on the hard drive and be', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3570, 10, 47.045, 54.045, N'notified when a user places a new file on that directory, or when a timer expires because I want to execute', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3571, 11, 54.045, 59.045, N'some code every 60 seconds, and refresh some data, like refreshing stock quotes.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3572, 12, 59.045, 65.045, N'All these are examples of when events are useful. Events allow an object, like an object that represents a', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3573, 13, 65.045, 70.045, N'button, events allow that object to announce to anyone who is listening that something interesting happened,', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3574, 14, 70.045, 77.5, N'like when the user clicks on that button. We call the announcement an event, and we say that the button publishes this event.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3575, 15, 77.5, 82.045, N'The code that is interested in the click event is code that subscribes to the event.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3576, 16, 82.045, 90.045, N'You can have multiple subscribers listening to a single click event, so that when the user clicks a button 0', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3577, 17, 90.045, 95.045, N'or more independent pieces of code will execute. One piece of code might save data to a file,', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3578, 18, 95.045, 100.045, N'another piece might change the color of the screen, another piece might log information to a database,', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3579, 19, 100.045, 108.045, N'those are three independent pieces of code all executing off of the same event, and the beauty of events is', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3580, 20, 108.045, 113.045, N'that the button object itself, it doesn''t need to keep track of who is subscribing, and the subscribers don''t', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3581, 21, 113.045, 119.045, N'need to know about each other. This is all done through the magic of delegates in C#, so in order to', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3582, 22, 119.045, 139.04500000000002, N'understand events we really need to understand delegates first.', N'ro', N'', 114)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3583, 1, 0, 8.225, N'Imagine that you want to declare a variable that references a method, so not a variable to hold an integer,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3584, 2, 8.225, 14.225, N'or point to a string, or point to any class object, you want to declare a variable, and point the variable to', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3585, 3, 14.225, 19.225, N'a method, that means you''ll have a variable that encapsulates executable code, and you can invoke the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3586, 4, 19.225, 26.225, N'variable just like you would invoke a method by using parentheses and optionally passing some arguments along.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3587, 5, 26.225, 32.225, N'In order for this to work you''ll need to create a delegate type, so a delegate is a type just like we used', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3588, 6, 32.225, 37.225, N'the class keyword to create a type, or the struct keyword to create a type, there is a delegate keyword in', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3589, 7, 37.225, 43.225, N'the C# language, and that keyword will allow me to create a type that is dedicated to referencing methods,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3590, 8, 43.225, 48.225, N'and that means the type definition for a delegate looks much different than a class definition.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3591, 9, 48.225, 56.225, N'The type definition looks almost like a method definition, the type definition describes the methods that I want to call.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3592, 10, 56.225, 61.225, N'In this code snippet I''m creating a delegate called Writer. I know this is a delegate because I can see the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3593, 11, 61.225, 68.225, N'delegate keyword, and a variable of this type will point to a method that returns void and takes a string parameter.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3594, 12, 68.225, 75.225, N'there''s no curly braces here, I''m not defining a method with executable code, I just end the statement with a semicolon.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3595, 13, 75.225, 80.225, N'I am defining a type that I can use to create variables, and point those variables to methods that have this', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3596, 14, 80.225, 86.225, N'same signature and same return type. Again the name of this type is Writer.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3597, 15, 86.225, 92.225, N'Now imagine I have a class called Logger. I can instantiate a Logger, and once I have a Logger I can invoke', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3598, 16, 92.225, 98.225, N'a WriteMessage method, and have the Logger do something interesting like print a message to the screen.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3599, 17, 98.225, 105.225, N'I can also write a bit of code that instantiates a Logger and then instantiates a delegate that references', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3600, 18, 105.225, 111.225, N'the WriteMessage method itself of the Logger object. that''s what this bit of code here is doing.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3601, 19, 111.225, 117.225, N'Notice I''m not invoking logger.WriteMessage, there are no parentheses after WriteMessage, this code is', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3602, 20, 117.225, 123.225, N'literally creating a new instance of a delegate and passing the WriteMessage method to this writer delegate.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3603, 21, 123.225, 130.225, N'That delegate is saved into a variable named Writer, and I can now invoke logger.WriteMessage just by', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3604, 22, 130.225, 135.225, N'invoking this variable, all I need to do is apply parentheses to the variable and pass the string parameter', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3605, 23, 135.225, 140.5, N'that I want the Logger to use. Now depending on what programming background you have, this information might', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3606, 24, 140.5, 146, N'be a bit foreign. If you come from a C or C++ background you can think of a delegate as a way of creating a', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3607, 25, 146, 152, N'type save function pointer, and if you come from any functional language like JavaScript, the idea of', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3608, 26, 152, 157.5, N'having a variable that points to a function, that''s not new, it''s just going to be the C# syntax and all the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3609, 27, 157.5, 162, N'type checking that you''ll need to get used to because the C# complier is very picky about the methods that I', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3610, 28, 162, 167.5, N'can point to with a delegate. Like in this example, a writer delegate will only work with methods that', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3611, 29, 167.5, 173, N'return void and take a single string parameter. Notice the name of the method doesn''t matter, I can have the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3612, 30, 173, 179, N'delegate called Writer, and reference a method called WriteMessage, or any other name as long as that method', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3613, 31, 179, 184, N'returns void and takes a string. let''s take a look at this in Visual Studio.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3614, 32, 184, 190, N'Back inside of the GradeBook let''s look at a scenario where something else in the application needs to know', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3615, 33, 190, 195.5, N'when the name of the GradeBook is changing. Maybe that something else is a data-binding framework that needs', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3616, 34, 195.5, 199.5, N'to update the screen with the new GradeBook name whenever the name changes.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3617, 35, 199.5, 206.5, N'We don''t know, we just know that the only place in the entire application that knows exactly when the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3618, 36, 206.5, 212.225, N'GradeBook name is changing is the code that is inside of the setter for the name property itself.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3619, 37, 212.225, 218.225, N'If from inside of here I could announce somehow that the name is changing and invoke some other code,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3620, 38, 218.225, 222.225, N'that would satisfy my requirements that I need to call something else in the application when the name', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3621, 39, 222.225, 227.225, N'changes, but I don''t know what. that''s the perfect scenario for delegates because delegates essentially', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3622, 40, 227.225, 232.225, N'allow you to have a variable that points to a method, and because it''s a variable it can point to different', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3623, 41, 232.225, 237.225, N'methods it can be assigned to, and that''s what I need inside of my setter, I need to know when the name is', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3624, 42, 237.225, 245.225, N'changing, perhaps I could have an additional if check here to say if _name is not equal to the incoming', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3625, 43, 245.225, 251.225, N'value, so I know for a fact that the name is changing, that I want to be able to invoke some arbitrary code.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3626, 44, 251.225, 258.225, N'let''s say I have a delegate called NameChanged. I want to be able to invoke that, perhaps I pass in the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3627, 45, 258.225, 266.225, N'existing name, and the new value that will be assigned to the name, and that will fulfill my responsibility', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3628, 46, 266.225, 268.225, N'to the outside world that I''ve made this announcement, my name is changing.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3629, 47, 268.225, 275.225, N'In order to pull this off I''m going to need a delegate, so let me right-click on the GradeBook project,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3630, 48, 275.225, 280.225, N'and I''m going to say Add, Class even though what I really want is a delegate, this is the easiest way to get', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3631, 49, 280.225, 287.225, N'a .cs file into the project. I will call this NameChangedDelegate, and press Add.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3632, 50, 287.225, 294.225, N'Visual Studio will assume I want something with a .cs extension, and no, I don''t want a class, and I don''t', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3633, 51, 294.225, 302.225, N'want the curly braces. What I do want is a new type, a public type that I''ll create with delegate, and now I', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3634, 52, 302.225, 308.225, N'need to describe the types of methods that this can invoke. I don''t care about the return value from this', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3635, 53, 308.225, 314.225, N'method, all I know is it''s going to need to take two string values, so let me create this delegate by saying', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3636, 54, 314.225, 325.225, N'the method will return void, and the method will take two string parameters, let''s call them existingName and newName.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3637, 55, 325.225, 329.225, N'Just remember that the names of these parameters are arbitrary.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3638, 56, 329.225, 333.225, N'When the C# complier is checking to make sure this delegate points to the proper method it doesn''t check the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3639, 57, 333.225, 339.225, N'parameter names to make sure they match, it''s only going to check the type, so a method that returns void and', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3640, 58, 339.225, 343.225, N'takes two strings, that''s the type of method that I can point this delegate to.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3641, 59, 343.225, 351.225, N'And so with this delegate back in the GradeBook I can now create a public field using that delegate type,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3642, 60, 351.225, 358.225, N'so public NameChangedDelegate, let''s call it NameChanged, and I now have a public member that other areas of', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3643, 61, 358.225, 364.225, N'the application can walk up, and assign to this delegate, and give it the code that needs to be invoked out', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3644, 62, 364.225, 371.225, N'there somewhere in the outside world. All I need to do in my GradeBook is just invoke that delegate at the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3645, 63, 371.225, 377.225, N'appropriate time when the name has changed. Now just so we get some interesting output let''s initialize', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3646, 64, 377.225, 385.225, N'_name to something inside of the constructor for the GradeBook just so there is always some value there.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3647, 65, 385.225, 391.225, N'let''s just use the text Empty, and now what I want to do back in my program is take advantage of this new', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3648, 66, 391.225, 396.225, N'feature to execute arbitrary code when the name of the GradeBook changes.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3649, 67, 396.225, 407.225, N'So back in Program.cs at some point after I create the book I want to be able to say book.NameChanged = a new', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3650, 68, 407.225, 412.225, N'instance of the NameChangedDelegate, and then pass in a method that can be invoked.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3651, 69, 412.225, 417.225, N'I currently don''t have a method that returns void and takes two strings, so before we finish that line of', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3652, 70, 417.225, 423.225, N'code, let''s write something. This will have to be a static method so that I can reach it from the main method.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3653, 71, 423.225, 429.225, N'It has to be a method that returns void. I can call it anything I want, let''s call it OnNameChanged,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3654, 72, 429.225, 437.225, N'and I just have to take two string parameters, the names don''t matter, but I think existingName and newName,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3655, 73, 437.225, 443.225, N'those are pretty good parameter names, so we will stick with those, and when this method is invoked I want to', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3656, 74, 443.225, 451.225, N'write out some information. let''s use some string interpolation, and say Grade book changing name from', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3657, 75, 451.225, 459.225, N'existingName to newName, and that should be everything that I need, so let me take this method name,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3658, 76, 459.225, 466.225, N'and copy it, and I should be able to paste it here, and the delegate will be happy and say ah, you want me to', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3659, 77, 466.225, 473.225, N'call OnNameChanged whenever someone invokes this delegate. let''s try it, Ctrl+F5 to run, and I can see', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3660, 78, 473.225, 478.5, N'Grade book changing name from Empty to Scott''s Grade Book, and this should happen anytime the name changes,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3661, 79, 478.5, 486.225, N'so I should be able to say book.Name = Scott''s Grade Book, and let''s say book.Name = just Grade Book.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3662, 80, 486.225, 492.225, N'We should see that method fire twice, and it does. It goes from Empty to Scott''s Grade Book and then Scott''s', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3663, 81, 492.225, 497, N'to just Grade Book, and this is the type of situation where you want to use a delegate, so going back to the', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3664, 82, 497, 503.225, N'UI example that we talked about earlier, let''s say you''re writing your class that''s going to have a button', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3665, 83, 503.225, 508.225, N'associated with it because it''s a part of a user interface, and your class, the code inside of it will know', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3666, 84, 508.225, 514.225, N'when the button is clicked, but how can your class announce to the rest of the world when that button is', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3667, 85, 514.225, 518.225, N'clicked because chances are it might not be just you that is interested in that button click, you might need', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3668, 86, 518.225, 521.225, N'to tell other pieces of the application when the button is clicked.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3669, 87, 521.225, 527.225, N'How can you do that? Ultimately it''s done with events that build on top of delegates, and right now we''re', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3670, 88, 527.225, 533.225, N'just focusing on the delegate part. So let me show you a few other things that are interesting about delegates.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3671, 89, 533.225, 542.225, N'let''s come back to Program.cs, and let me create a copy of OnNameChanged, and I''m going to paste it,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3672, 90, 542.225, 547.225, N'and we know now that will create a complier error because we have two methods with the exact same signature,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3673, 91, 547.225, 555.225, N'but I will change the second one to be OnNameChanged2, and let''s do something simple inside of here like', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3674, 92, 555.225, 563.225, N'write out three asterix, and now back up at the top, what happens when if I say book.NameChanged = this new', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3675, 93, 563.225, 571.5, N'NameChangedDelegate OnNameChanged, and then right after that line of code I assign again with OnNameChanged2.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3676, 94, 571.5, 578.225, N'Well if I run the program what we''ll see is that we''re only outputting asterixs now, and that''s because I''ve', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3677, 95, 578.225, 583.225, N'effectively overwritten the information inside of that delegate that would allow me to call OnNameChanged,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3678, 96, 583.225, 588.225, N'I''ve overwritten that delegate, I''m now calling OnNameChanged2 only.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3679, 97, 588.225, 594.225, N'However the interesting thing about delegates in C# is they can reference multiple methods, we call them', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3680, 98, 594.225, 601.225, N'MutlicastDelegates because when I invoke a delegate that might call one method, but a delegate can also hold', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3681, 99, 601.225, 608.225, N'references to multiple methods, so invoking NameChanged might actually call 10 different methods because', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3682, 100, 608.225, 613.225, N'there might be 10 different pieces of the application that are interested in knowing when the name of a', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3683, 101, 613.225, 622.225, N'GradeBook has changed, and the way I can get that to work is instead of doing an assignment I can use the += operation.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3684, 102, 622.225, 626.225, N'You might remember += from some of the mathematical operations we did with integers.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3685, 103, 626.225, 633.225, N'I can say some variable += 3, an integer variable, and that will take whatever is in that integer variable,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3686, 104, 633.225, 640.225, N'and add 3 to it, it''s like saying x = x+3. This is the same concept, I''m saying take whatever is in', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3687, 105, 640.225, 647.225, N'NameChanged, and add this additional delegate, and then add this additional delegate, so that now when I run', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3688, 106, 647.225, 656.225, N'the program each time the name changes, not only do I invoke OnNameChanged, but I also invoke OnNameChanged2,', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3689, 107, 656.225, 664.225, N'and just so you know there''s also a -= operation to remove a reference to a method, that would effectively be', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3690, 108, 664.225, 669.225, N'a way of saying I don''t care about the NameChanged operation anymore, please remove me from your list of', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3691, 109, 669.225, 676.225, N'methods that you call, but this capability of being able to invoke multiple methods, this is ideal again for', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3692, 110, 676.225, 681.225, N'situations like building a UI component, or there might be multiple people, or multiple components that are', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3693, 111, 681.225, 687.225, N'interested in that button click event, and although I could do that with delegates, delegates don''t quite', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3694, 112, 687.225, 693.5, N'offer enough encapsulation because someone can always walk up to book.NameChanged, and say I''m going to set', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3695, 113, 693.5, 699.225, N'this to null, which is empty it out, and that effectively overwrites all the previous delegates that were in', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3696, 114, 699.225, 704.225, N'there, and that''s not something that I want to happen if I want different areas of the application to be able', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3697, 115, 704.225, 709, N'to independently subscribe to this event that the GradeBook name is changing.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3698, 116, 709, 715.225, N'I want to prevent lines of code like this somehow, and that''s exactly what I can do by using events instead', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3699, 117, 715.225, 735.225, N'of delegates, let''s look at that next.', N'ro', N'', 115)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3700, 1, 0, 5.5, N'Once you have a handle on how delegates work, it''s very easy to', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3701, 2, 5.5, 10.697, N'understand events because events are based on and use delegates.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3702, 3, 10.697, 17.697, N'The only thing I need to do to make NameChanged a proper event is to add the C# keyword here event,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3703, 4, 17.697, 23.697, N'and now there is no code that I need to change inside of the GradeBook because events are based on delegates,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3704, 5, 23.697, 29.697, N'and I can still invoke NameChanged. The C# complier will still check to make sure that I pass along two', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3705, 6, 29.697, 34.697, N'parameters, both of type string, and there''s nothing that has to change inside of the GradeBook.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3706, 7, 34.697, 41.697, N'The reason that events are preferred to just exposing delegates is because of the error that we see inside of Program.cs.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3707, 8, 41.697, 48.697, N'The error is that NameChanged can only appear on the left-hand side of += or -=.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3708, 9, 48.697, 54.697, N'That means from outside of the GradeBook the only thing that other pieces of code can do is add a subscriber', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3709, 10, 54.697, 61.697, N'to event, or remove a subscriber to this event, and it''s no longer possible to do an assignment, and wipe out', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3710, 11, 61.697, 64.697, N'everything that was inside, wipe out all the other subscriptions.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3711, 12, 64.697, 70.697, N'This is what we want for events because we want independent pieces of code being able to subscribe and', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3712, 13, 70.697, 76.697, N'unsubscribe, and not interfere with others, so this line of code is now an error, I will remove that line of', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3713, 14, 76.697, 84.697, N'code, and just show you that I can use += as many times as I want, I can even wire up the same method twice.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3714, 15, 84.697, 89.697, N'Now you can see every time the name changes I get two sets of asterix, and I will also point out now that the', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3715, 16, 89.697, 95.697, N'C# complier is pretty intelligent when it comes to using Events and delegates, and the syntax that I''m', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3716, 17, 95.697, 101, N'currently using to wire up a subscriber for that event is a little bit verbose.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3717, 18, 101, 107.697, N'I can actually remove new NameChangedDelegate, I can remove that from all three lines of code, and then once', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3718, 19, 107.697, 114.697, N'I get rid of the parentheses at the end I will still have legal C# code, because the C# complier is smart', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3719, 20, 114.697, 119.697, N'enough to look at NameChanged, and the method that I''m trying to add as a subscriber, and it can figure out', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3720, 21, 119.697, 124.697, N'that those two things are compatible, and it will just automatically create that delegate instance for me', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3721, 22, 124.697, 129.697, N'behind the scenes, I don''t have to explicitly say new and then the name of some delegate.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3722, 23, 129.697, 135.697, N'So this code is a little bit easier on the eyes, and just as a quick quiz, what happens if I add another line', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3723, 24, 135.697, 146, N'of code here with a -= operation, so now I''m subscribing OnNameChanged2 twice, and then unsubscribing once.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3724, 25, 146, 152.697, N'The question is will -= wipe out all of the subscriptions for OnNameChanged2 or just one of them, and if I', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3725, 26, 152.697, 161.697, N'run the program we''ll see I now have just one set of asterix, so OnNameChanged2 was subscribed twice,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3726, 27, 161.697, 168, N'removed once, and then that result was one subscription, therefore that method fires once every time the name changes.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3727, 28, 168, 174.697, N'Now I also want to point out that we''re doing something unconventional with our event, and that is that we''re', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3728, 29, 174.697, 181.697, N'passing two string parameters along with this event. There is a convention in .NET, it''s not a convention', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3729, 30, 181.697, 186.697, N'that you have to follow, but it''s a convention that 99.9% of all events in the .NET Framework follow.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3730, 31, 186.697, 193.697, N'it''s a convention where an event always passes along two parameters, the first parameter is going to be the', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3731, 32, 193.697, 199.697, N'sender of the event, in other words if the GradeBook is announcing that the name has changed, it''s going to', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3732, 33, 199.697, 205.697, N'send itself as the first parameter, and then the second parameter always contains all of the arguments or all', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3733, 34, 205.697, 210.697, N'of the needed information about that event, which means I''m going to need to build a custom class to put', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3734, 35, 210.697, 217.697, N'together the existing name and the new name into a single object so I can pass that object along as the arguments.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3735, 36, 217.697, 226.697, N'let''s make this change. I''m going to go to the GradeBook project, and add another class, I''ll call this', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3736, 37, 226.697, 232.697, N'class NameChangedEventArgs, which is another convention when you are working with events.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3737, 38, 232.697, 240, N'The parameter that passes along the argument for the event, the name of its type will always end with the words EventArgs.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3738, 39, 240, 246, N'So now I have my class, let me add the public keyword here to make this a public class, and now I need', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3739, 40, 246, 252.697, N'properties for the existing name and the new name. The easiest way to add a property when you''re using', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3740, 41, 252.697, 258.697, N'Visual Studio is to use a code snippet p, r, o, p, I''ll just type that and press Tab twice, now I can fill in', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3741, 42, 258.697, 266.697, N'the type for my property, and then Tab twice over to the name, and fill out the name of my property,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3742, 43, 266.697, 271.697, N'and Visual Studio will give me an auto-implemented property. Let me go to the next line of code and p, r, o,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3743, 44, 271.697, 279.697, N'p again, this time I want the NewName property to be here. So this will give me my EventArgs class,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3744, 45, 279.697, 285.697, N'and something that we''ll talk about in the Object Oriented Programming module of this course is how a class', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3745, 46, 285.697, 292.697, N'can inherent from another class. If you haven''t worked with inheritance before then you can just wait till', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3746, 47, 292.697, 298.697, N'we get to that module for me to explain this in more detail, but in .NET anything that''s going to pass along', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3747, 48, 298.697, 305.697, N'arguments inside of an event, it should derive or inherent from an EventArgs base class that the .NET Framework provides.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3748, 49, 305.697, 314, N'that''s what this syntax is doing, it''s specifying an inheritance relationship where NameChangedEventArgs derives from EventArgs.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3749, 50, 314, 322.697, N'Again, more on inheritance later. Now I want to change over my delegate so it''s not taking two string parameters any longer.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3750, 51, 322.697, 331.697, N'Instead, it needs to take the sender of this event, and then the NameChangedEventArgs, an object of that type.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3751, 52, 331.697, 336.697, N'Why am I specifying sender as an object? Object is another one of those topics that we''ll talk a little more', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3752, 53, 336.697, 341.697, N'about when we talk about object-oriented programming, but this is another convention in .NET around events,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3753, 54, 341.697, 348.697, N'and when I have a parameter typed in as an object, that means I can pass anything as a parameter here.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3754, 55, 348.697, 356.697, N'I can pass an integer value, or a string, or a GradeBook instance, and if the GradeBook is the sender of this', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3755, 56, 356.697, 362, N'event, GradeBook is what I want to pass here, but I will type it as object because that''s a common convention.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3756, 57, 362, 369, N'Now that I''ve changed the delegate around I will have some complier errors both in Program.cs and in GradeBook.cs.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3757, 58, 369, 375.697, N'In GradeBook.cs I need to pass EventArgs and the sender here instead of two strings.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3758, 59, 375.697, 382.697, N'So first let''s create an instance of NameChangedEventArgs, I will just call it args, and initialize a new', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3759, 60, 382.697, 392.697, N'instance, and say that the ExistingName equals the value that I currently have in _name, and the NewName that', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3760, 61, 392.697, 401.697, N'will equal the incoming value, and now when I invoke NameChanged, I should really pass along myself and then these arguments.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3761, 62, 401.697, 407.697, N'How do I pass along myself? Well inside of every non-static method in a C# class or struct, there is an', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3762, 63, 407.697, 414.697, N'implicit variable called this, and this will reference the object that I''m inside of, so this will reference', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3763, 64, 414.697, 421.697, N'the GradeBook object that we''re currently operating on. I just need to pass along this and args, and just to', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3764, 65, 421.697, 426.697, N'show you if I type this., here you can see all of the members of the GradeBook, so there''s _Name,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3765, 66, 426.697, 432.697, N'there''s the property name, there''s the private field grades, I can see private fields through this because', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3766, 67, 432.697, 438.697, N'I''m using code that is inside of the same class, so this is a variable that you can use anywhere in your C#', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3767, 68, 438.697, 444.697, N'code inside of an instance member if you need to refer to yourself, or pass yourself along as another', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3768, 69, 444.697, 451.697, N'parameter, and now I will need to change Program.cs because delegates are very type safe, and now the C#', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3769, 70, 451.697, 456.697, N'complier sees that I''m using these methods that no longer take the parameters that the delegate is', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3770, 71, 456.697, 462.697, N'describing, so I wrote these methods as taking two strings, and now this delegate is trying to pass an object', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3771, 72, 462.697, 467.697, N'and a NameChangedEventArgs, so I''m going to need to change these around.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3772, 73, 467.697, 473.697, N'let''s actually get rid of OnNameChanged2 all together, that makes this a little less work, and up here', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3773, 74, 473.697, 481.697, N'OnNameChanged, I will change this around so that it can take a sender parameter, and then an instance of', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3774, 75, 481.697, 491.697, N'NameChangedEventArgs, and down here I will just need to change these to use args.ExistingName,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3775, 76, 491.697, 498.697, N'and args.NewName, then let''s remove the subscription to OnNameChanged2, that method no longer exists,', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3776, 77, 498.697, 505.697, N'run the GradeBook, I can still see it''s behaving correctly, and this is the magic of events in .NET.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3777, 78, 505.697, 509.697, N'Not all programming environments use events, but they are quite common if you''re doing some sort of desktop', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3778, 79, 509.697, 514.697, N'program, that is a C# application that runs under Windows or runs on a mobile phone.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3779, 80, 514.697, 519.697, N'it''s quite common that your user interface elements will have events to let your code know when something', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3780, 81, 519.697, 525.697, N'was clicked on or if something was hovered over, and now you''ll know that you can subscribe to those events', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3781, 82, 525.697, 545.697, N'using += and a method that accepts the parameters that event will raise.', N'ro', N'', 116)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3782, 1, 0, 6, N'In this module we looked at the different members that you can add to a class.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3783, 2, 6, 9.395, N'We looked at fields and properties, which can hold an exposed state.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3784, 3, 9.395, 14.395, N'We also looked at methods again, this time seeing how you can overload methods by writing multiple methods', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3785, 4, 14.395, 19.395, N'with the same name, but different signatures. Remember the signature is defined not only by the name of the', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3786, 5, 19.395, 23.395, N'method, but also the types and the number of parameters to that method.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3787, 6, 23.395, 30.395, N'And finally we looked at events, which allow subscribers to listen for interesting things that might happen in an object.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3788, 7, 30.395, 35.52, N'We saw how events are based on delegates, which are useful in other places in .NET programming too.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3789, 8, 35.52, 40.5, N'If you want more information on events and delegates I do spend some time on them in both my C# Generics', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3790, 9, 40.5, 46.395, N'course and my Linq Fundamentals course. The whole goal of seeing fields, properties, methods, constructors,', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3791, 10, 46.395, 52.395, N'and events all together is to know what tools are available when you want to build an abstraction in C#.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3792, 11, 52.395, 56.395, N'In this case We''ve built a GradeBook that encapsulates the behavior of the GradeBook.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3793, 12, 56.395, 60, N'It can computer statistics and raise events when important state changes happen.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3794, 13, 60, 66, N'we''ll continue seeing how to build abstractions when we talk about object-oriented programming, but first we', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3795, 14, 66, 71.395, N'will in the next module look at flow control in C#, which is how to branch, and loop, and both create,', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3796, 15, 71.395, 91.395, N'and catch runtime errors.', N'ro', N'', 117)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3797, 1, 0, 7, N'Hi, this is Scott Allen, and in this module we''re going to look at Control Flow in a C# application.', N'ro', N'', 118)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3798, 2, 7, 12, N'Specifically we''re going to look at the keywords and constructs available in the language to perform', N'ro', N'', 118)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3799, 3, 12, 17, N'branching, looping, and to jump to different points in an execution path.', N'ro', N'', 118)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3800, 4, 17, 22, N'And finally, we''ll look at error handling, that is how to throw errors, and how to catch errors,', N'ro', N'', 118)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3801, 5, 22, 42, N'and potentially resolve those errors.', N'ro', N'', 118)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3802, 1, 1.924, 5.924, N'Conditional branching is something that we''re already using in this course, but we really haven''t stopped to', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3803, 2, 5.924, 10.924, N'dig into the details of the if statement, which is one way to branch execution.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3804, 3, 10.924, 15.924, N'And by branching, I mean we have some code where we want to go in one of two directions, it''s like getting', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3805, 4, 15.924, 20.924, N'into the branches of a tree where one branch sprouts out to the left, and one branch to the right,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3806, 5, 20.924, 25.924, N'which direction do we go? that''s what an if statement can do. The if statement selects a statement for', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3807, 6, 25.924, 31.924, N'execution based on the value of some Boolean expression. So, in the first if statement on the screen,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3808, 7, 31.924, 36.924, N'if age is less than or equal to a 2, that''s a Boolean expression that we''ll return true or false.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3809, 8, 36.924, 42.924, N'If the expression returns true, the if statement will execute the statement that immediately follows the if.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3810, 9, 42.924, 47.924, N'If the expression is false, we''ll skip that statement. Notice that I don''t need to use curly braces to', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3811, 10, 47.924, 53.924, N'surround the call to ServeMilk, but it is a considered a good coding style to use curly braces,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3812, 11, 53.924, 57.924, N'because curly braces make the code easier to maintain and a little more readable.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3813, 12, 57.924, 63.924, N'The curly braces are required if I want to execute multiple statements when the expression returns true.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3814, 13, 63.924, 69.924, N'I need to use the curly braces to create a block of code, and that block can enclose multiple method', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3815, 14, 69.924, 74.924, N'invocations, multiple statements, inside of the if. Without the curly braces, I will only execute the', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3816, 15, 74.924, 80.924, N'statement that immediately follows the if. Now if the first expression inside of an if statement returns', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3817, 16, 80.924, 87.924, N'false, let''s say that age is a 10, we will not invoke ServeMilk, and instead we''ll jump to the next if', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3818, 17, 87.924, 93.924, N'statement, because this code snippet includes else statements. it''s like saying I need to check to see if', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3819, 18, 93.924, 99.924, N'the age is less than or equal to 2, if it''s not, then I need to go and check to see if the age is less than 21.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3820, 19, 99.924, 106.924, N'And if both of the tasks were to return false, we will fall into the final else statement and invoke a method ServeDrink.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3821, 20, 106.924, 112.924, N'You don''t need to include an else statement after every if that you write, but you can have as many else ifs', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3822, 21, 112.924, 118.924, N'as you want after an if test. Notice that the curly braces are not required around ServeDrink either because', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3823, 22, 118.924, 122.924, N'it''s just a single statement, but again I believe it makes the code a little more readable.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3824, 23, 122.924, 126.924, N'And speaking of readability, it''s also possible to nest if statements.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3825, 24, 126.924, 131.924, N'So any code that I would place where the comment is in the middle of the second code snippet,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3826, 25, 131.924, 137.924, N'that code will only execute if the age variable is less than or equal to 2 and the name variable is equal to Scott.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3827, 26, 137.924, 142.924, N'You have to be careful nesting too many statements together like this, because the code can become hard to', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3828, 27, 142.924, 146.924, N'read when you have if statements inside of if statements inside of if statements.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3829, 28, 146.924, 150.924, N'Closely related to the if statement is the conditional operator.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3830, 29, 150.924, 155.924, N'it''s also sometimes referred to as the ternary operator because it comes in three pieces.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3831, 30, 155.924, 160.924, N'The first piece is an expression that needs to return true or false, so age greater than 20.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3832, 31, 160.924, 167.924, N'And then the conditional operator will return one of two values based on the evaluation of that expression.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3833, 32, 167.924, 172.924, N'If the expression returns true, we''ll return the value that is on the left-hand side of the colon.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3834, 33, 172.924, 177.924, N'And if the expression returns false, we''ll return the value on the right-hand side of the colon.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3835, 34, 177.924, 183.924, N'So, for example, if the age variable contained the value 19, the expression will return false,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3836, 35, 183.924, 189.924, N'and the string pass would be assigned the value, nopass. This conditional operator is sometimes useful when', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3837, 36, 189.924, 194.924, N'you just need a really quick conditional check to assign one of two different values.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3838, 37, 194.924, 198.924, N'You can write the exact same logic with an if statement, but with a conditional statement there''s fewer', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3839, 38, 198.924, 203.924, N'characters to type. You do have to be careful with the conditional operator because again,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3840, 39, 203.924, 209.924, N'sometimes it can make the code difficult to read. let''s take a look at branching in our Grade Book.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3841, 40, 209.924, 214.924, N'let''s take a look at branching using the Grades project that We''ve been working on throughout the course.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3842, 41, 214.924, 220.924, N'The first thing I''m going to do, just to simplify some of the output is remove some of the code that we used', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3843, 42, 220.924, 225.924, N'to experiment with events. So I''m going to remove everything related to the Grade Book name,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3844, 43, 225.924, 233.924, N'and changing the name, and that includes writing out the name, and also this event handler that we had to', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3845, 44, 233.924, 237.924, N'print out some output when the Grade Book name changed. Again just trying to simplify the program and I''m', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3846, 45, 237.924, 242.924, N'trying to make all the changes to the code here in the video so you can follow along.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3847, 46, 242.924, 249.924, N'I can also get rid of one of these WriteResults if I remove that cast to an int that we placed here in the', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3848, 47, 249.924, 254.924, N'previous module, and we did that just see an example of method overloading, but I''ll give you another example', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3849, 48, 254.924, 259.924, N'of method overloading here in just a bit. here''s what I''m thinking we could do, I want the GradeStatistics', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3850, 49, 259.924, 265.924, N'class to compute a letter grade. What is a letter grade? Well here in the States when I was growing up,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3851, 50, 265.924, 271.924, N'my school teachers would grade all of my assignments, quizzes, and tests on a scale of 0 to 100,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3852, 51, 271.924, 276.924, N'where 100 was a perfect score, and then periodically they would take all my scores and compute an average,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3853, 52, 276.924, 281.924, N'and from that average, compute a letter grade. It was the letter grade that was sent home to my parents to', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3854, 53, 281.924, 287.924, N'tell them how I was doing in school. And when I was growing up the letter grades were A, B, C, D, and F.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3855, 54, 287.924, 291.924, N'An A meant that you were doing wonderfully in a class, it was the best letter grade you could get.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3856, 55, 291.924, 296.924, N'And then there was a B, and then there was a C, a C was considered average, then there was a D,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3857, 56, 296.924, 300.924, N'and then there was an F. An F meant that you were failing a class.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3858, 57, 300.924, 307.924, N'And I think I can get the Grade Book statistics to compute this logic just using some simple if else statements.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3859, 58, 307.924, 313.924, N'So let''s add another property to GradeStatistics, this is something the statistics can do all on their own,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3860, 59, 313.924, 320.924, N'given an average grade. So let''s create a property called LetterGrade.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3861, 60, 320.924, 326.924, N'For this property, I''m only going to use a get accessor, that effectively makes this a read-only property,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3862, 61, 326.924, 331.924, N'no one will be able to assign to it, which is just what I want, I want the letter grade to be computed from', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3863, 62, 331.924, 336.924, N'the average grade, there''s reason to set the letter grade. And the letter grades work like this,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3864, 63, 336.924, 345.924, N'if your average grade was greater than or equal to a 90, then that was a letter grade of A.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3865, 64, 345.924, 351.924, N'And you might want to use something like math.round, so that a student with a score of 89.9 would also have', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3866, 65, 351.924, 357.924, N'an A, but I''ll leave that as an exercise for you to try out. But now if the average grade is less than 90,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3867, 66, 357.924, 361.924, N'I need to handle that situation too, so let me write an else if.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3868, 67, 361.924, 369.924, N'Else if the AverageGrade is greater than or equal to 80, that would be a letter grade of a B.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3869, 68, 369.924, 375.924, N'Now, generally speaking, I try to maintain a coding style where I only have a single return statement inside', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3870, 69, 375.924, 381.924, N'of a method or a property. that''s not always possible, but it does make the code sometimes easier to read.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3871, 70, 381.924, 386.924, N'I''m going to reach that goal, I''m going to try to do that by declaring a local variable result,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3872, 71, 386.924, 392.924, N'and in this case not even initialize that because I expect to initialize it in the logic that is inside of', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3873, 72, 392.924, 399.924, N'this property, and instead of immediately returning, let me just say result = A, and result = B,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3874, 73, 399.924, 404.924, N'and at the bottom whatever we have computed for result, that is what we will return.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3875, 74, 404.924, 409.924, N'Currently we have an error because the C# compiler is smart enough to realize that you might be returning an', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3876, 75, 409.924, 415.924, N'unassigned local variable. If the average grade right now is lower than an 80, then we never make an', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3877, 76, 415.924, 419.924, N'assignment to result, and the C# compiler won''t let us get away with that.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3878, 77, 419.924, 424.924, N'So let''s continue writing out some of our logic. If the letter grade is less than an 80, we won''t branch in', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3879, 78, 424.924, 431.924, N'to assign a result of A, and we won''t branch in to assign a result of B, so now we will have to check if the', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3880, 79, 431.924, 437.924, N'average grade is greater than a 70, and if so the result is a C.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3881, 80, 437.924, 440.924, N'And notice one thing that I don''t have to do here is I don''t have to check that the average grade is greater', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3882, 81, 440.924, 447.924, N'than 70 and the average grade is less than 80. Technically that is the rule to get a letter grade of C,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3883, 82, 447.924, 452.924, N'your average grade has to be greater than or equal to 70, or less than 80, but the way the if else statements', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3884, 83, 452.924, 459.924, N'work, I know that this test I don''t really need this, because if the average grade was greater than 80 we', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3885, 84, 459.924, 466.924, N'already would have assigned a result here and skipped over this else if statement, we would never evaluate this.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3886, 85, 466.924, 473.924, N'we''ll need one more else if to check for a letter grade of D, which would be an average grade greater than or', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3887, 86, 473.924, 481.924, N'equal to 60, in that case, the letter grade is a D, and then finally, if I haven''t branched into any of', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3888, 87, 481.924, 488.924, N'those if statements, then I know that the average grade is less than a 60, and the result should be a failing', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3889, 88, 488.924, 493.924, N'letter grade, a letter grade of F. And if I come back into the program, let''s write out the letter grade,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3890, 89, 493.924, 501.924, N'let''s try to do a WriteResult of Grade, with stats.LetterGrade, and this is one of those situations where the', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3891, 90, 501.924, 508.924, N'C# compiler says, oh you''re passing a string here, I don''t see a version of WriteResult that takes a string,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3892, 91, 508.924, 515.924, N'so let me copy this method and paste it in here, and create a version a WriteResult that takes two strings,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3893, 92, 515.924, 521.924, N'one is the description, one is the result. I do not need to format result a floating point number,', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3894, 93, 521.924, 529.924, N'so let me take off the :F2 here, and run the program, and I can see that the average grade is an 85 and the', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3895, 94, 529.924, 535.924, N'letter grade is a B, so I think my logic is working correctly. Of course I should write a unit test to make', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3896, 95, 535.924, 555.924, N'sure, but again I''ll leave that as an exercise for you to try.', N'ro', N'', 119)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3897, 1, 1.249, 6.5, N'The C# language also includes a switch statement. What the switch statement allows you to do is branch the', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3898, 2, 6.5, 13.249, N'execution of a program to a set of statements that are inside of a case label, which you create with the keyword case.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3899, 3, 13.249, 19.249, N'The switch statement does this by matching the value inside the switch against the values that you specify in', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3900, 4, 19.249, 24.249, N'each case label. These values for each case statement, they must be compile-time constants,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3901, 5, 24.249, 30.249, N'and we can see in the code on the screen, we''re checking a variable to see if the name is equal to one of the', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3902, 6, 30.249, 37.249, N'string literals, Scott or Alex. If the name is Scott, we execute the method ServeSoda, and then we break out', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3903, 7, 37.249, 41.249, N'of the switch, that is we jump to the line of code following the switch.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3904, 8, 41.249, 46.249, N'So we only execute the code inside of a single case. You can have multiple statements and multiple lines of', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3905, 9, 46.249, 52.249, N'code inside of a case, but you also must have a break statement in each case, that''s a little bit different', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3906, 10, 52.249, 57.249, N'form other languages like C++ where you can fall through from one case to the next.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3907, 11, 57.249, 62.249, N'Now if the value you are switching on does not match any of the values in the case statements,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3908, 12, 62.249, 68.249, N'then the default path can be chosen, but you don''t need to have a default label, so that''s entirely optional.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3909, 13, 68.249, 71.249, N'let''s take a look in code.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3910, 14, 71.249, 77.249, N'Back in the Grades project, it might be useful to provide a textual description of the letter grade,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3911, 15, 77.249, 82.249, N'that is a grade of A should produce text like excellent, while a grade of F should produce text like failing.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3912, 16, 82.249, 88.249, N'This type of logic I could also add to GradeStatistics, and I could do this as another property.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3913, 17, 88.249, 94.249, N'So in addition to the LetterGrade property, here is another public property of type string,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3914, 18, 94.249, 100.249, N'let''s call it Description, and just like LetterGrade, this will have only a get accessor.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3915, 19, 100.249, 103.249, N'And inside of here, I could look at the average grade, but I could also look at the letter grade.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3916, 20, 103.249, 108.249, N'I could say okay, if the letter grade is an A, let''s produce this text, and if it''s a B let''s produce this', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3917, 21, 108.249, 113.249, N'text, and that''s the type of logic I could do with if else statements, but since we''re looking at switch,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3918, 22, 113.249, 119.249, N'let''s do a switch on LetterGrade instead. A switch statement is very much like a series of if else if', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3919, 23, 119.249, 126.249, N'statements, and what I can do case the letter grade is the string A, let''s execute the following code.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3920, 24, 126.249, 131.249, N'And what I want to do ultimately is compute some result, just like I did with LetterGrade,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3921, 25, 131.249, 137.249, N'and then return that result at the bottom of the property. So when we have a capital A, let''s say that the', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3922, 26, 137.249, 148.249, N'result = Excellent, and then you can think about this as else, if I have the sting B, the result would be', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3923, 27, 148.249, 154.249, N'equal to Good, or we could say Above Average, and notice I have a compiler error right now because it''s', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3924, 28, 154.249, 160.249, N'illegal to fall through from one case label to another. And there''s a couple ways to solve that error,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3925, 29, 160.249, 166.249, N'but by far the most common approach is to use a break statement, and what the break statement will do is', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3926, 30, 166.249, 171.249, N'allow me to execute as many lines of code as I want inside of that case label, but once I hit the break', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3927, 31, 171.249, 177.249, N'statement, I''ll be jumping out of the switch. And if we have a letter grade of B we can then break,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3928, 32, 177.249, 184.249, N'of course a C, the result for a C would be Average, and then we break.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3929, 33, 184.249, 193.249, N'We also need to handle the D case, and for the result there we could say Below average, and then break,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3930, 34, 193.249, 201.249, N'and now I have a choice, I could either write another case statement and say, case letter grade is an F,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3931, 35, 201.249, 208.249, N'or I could have a default label, in which case if the letter grade is anything but an A, B, C, or D,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3932, 36, 208.249, 218.249, N'we will end up inside of here, and I can say the result is Failing, and once again I will still need a break.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3933, 37, 218.249, 226.249, N'let''s try this out in the program. Instead of writing out the text Grade, let''s write out stats.Description.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3934, 38, 226.249, 233.249, N'I will run this program, and I can see that a B is a Good grade, so my switch statement appears to be working.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3935, 39, 233.249, 240.249, N'So switch is the type of logic that you could also implement using if and else if statements,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3936, 40, 240.249, 246.249, N'but note that I would not be able to implement LetterGrade using a switch statement.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3937, 41, 246.249, 251, N'In a switch statement I cannot write an expression like AverageGrade greater than or equal to 90,', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3938, 42, 251, 256.249, N'all I''d be able to do is switch on AverageGrade, and have a case when AverageGrade is 90 exactly.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3939, 43, 256.249, 276.249, N'So switch statements, not so useful for evaluating ranges, but sometimes useful for replacing if else if statements.', N'ro', N'', 120)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3940, 1, 2.616, 8.616, N'There are four different statements for iterating in the C# language, iterating being a fancy term for', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3941, 2, 8.616, 13.616, N'looping over code and executing a block of code repeatedly. Typically you want to loop because you want to', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3942, 3, 13.616, 19.616, N'execute some code for each item in a collection, like printing out each number in an array of integers,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3943, 4, 19.616, 24.616, N'and one statement We''ve already used is the foreach statement. This is where you use the foreach keyword,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3944, 5, 24.616, 30.616, N'and declare a variable before the keyword in. The code on the screen has a variable named value,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3945, 6, 30.616, 35.616, N'and I want to point out that this value variable, it''s only available inside the block of code for the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3946, 7, 35.616, 40.616, N'foreach loop, so once you exit the foreach loop and you''ve moved beyond that closing curly brace you can no', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3947, 8, 40.616, 46.616, N'longer access the variable named value. The code inside this loop, it will see each number in the array,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3948, 9, 46.616, 51.616, N'and the variable value will hold each item once. So the first time through the loop we''ll see the value 2,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3949, 10, 51.616, 57.616, N'and the last time through the loop we see the value 100. This ages variable, by the way, it is an array of', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3950, 11, 57.616, 63.616, N'integers and we are initializing that variable using a collection initializer syntax in C#.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3951, 12, 63.616, 68.616, N'This is where we just place objects or values between curly braces on the right-hand side of an assignment,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3952, 13, 68.616, 74, N'and the C# compiler is smart enough to say yes, I can create an array from those values.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3953, 14, 74, 79.616, N'Another looping construct in C# is the for statement. You can think of the for statement as being more', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3954, 15, 79.616, 84.616, N'explicit about the starting and ending conditions for looping, because with foreach you basically say,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3955, 16, 84.616, 89.616, N'loop once for each item, but with a for loop, you have to say I''m going to start at 0 and I''m going to go to', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3956, 17, 89.616, 94.5, N'the number 4, because I know I have an array that has 5 items inside.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3957, 18, 94.5, 98.616, N'To operate at this lower level, the for statement includes three pieces of information,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3958, 19, 98.616, 104.616, N'there''s the initializer, the condition, and the iterator. This is the same as the for loop in C, C++,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3959, 20, 104.616, 109.616, N'Java, JavaScript, and many other languages. The for statement begins execution by executing any statements', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3960, 21, 109.616, 114.616, N'that are specified in the initializer, and these statements are only executed once, no matter how many times', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3961, 22, 114.616, 122.616, N'you''re looping, that only executes once, then before any statements are executed inside of this for loop,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3962, 23, 122.616, 126.616, N'the condition is evaluated, the condition appears after the first semicolon.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3963, 24, 126.616, 130.616, N'The condition is always a Boolean expression that has to return true of false.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3964, 25, 130.616, 136.616, N'If the expression returns false, then we do not execute anything inside of the for loop, and we stop looping', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3965, 26, 136.616, 140.616, N'and continue with the next statement after the for statement.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3966, 27, 140.616, 145.616, N'But if the condition evaluates to true, we''ll execute the statements that are inside of the for statement,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3967, 28, 145.616, 150.616, N'that is everything inside the curly braces, and for that reason you could say that a for loop will execute', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3968, 29, 150.616, 156.616, N'0 or more times because the program does test this condition before the first pass through the loop,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3969, 30, 156.616, 161.616, N'and if it returns false on the first test, we don''t execute any code inside, but then after each execution of', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3970, 31, 161.616, 168.616, N'the code inside, the iterator executes. In this case the iterator is incrementing the variable i,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3971, 32, 168.616, 173.616, N'and then we come back and check the condition, if it returns true, we execute again.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3972, 33, 173.616, 178.616, N'So the iterator is typically used to increment or decrement some sort of index variable, and I''m using a', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3973, 34, 178.616, 184.616, N'variable named i, i is short for index, that''s a fairly common convention in C# programming.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3974, 35, 184.616, 189.616, N'The while statement, this is another way to loop 0 or more times in a C# application.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3975, 36, 189.616, 194.616, N'In this case the while statement evaluates an expression, and if that expression returns true,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3976, 37, 194.616, 199.616, N'the statements inside the while loop will execute. Once the while loop is finished executing,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3977, 38, 199.616, 205.616, N'the condition is evaluated again, and at some point, that condition should return false, unless you''re trying', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3978, 39, 205.616, 210.616, N'to write an infinite loop, and infinite loops can be useful in some situations, but when that expression', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3979, 40, 210.616, 217.616, N'returns false, that''s when we finish executing the while loop. And closely related to the while loop is the do while loop.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3980, 41, 217.616, 223.616, N'The do while loop always executes one or more times, you''re guaranteed to execute the code inside of here at', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3981, 42, 223.616, 229.616, N'least once, because the primary difference between a while and a do while is that in a do while the condition', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3982, 43, 229.616, 235.616, N'is checked after the code inside of the statement executes, so you''re guaranteed to have control pass through', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3983, 44, 235.616, 241.616, N'a do while loop at least once. let''s see an example in the Grade project.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3984, 45, 241.616, 246.616, N'Inside of the Grades project I''d like to give the GradeBook a new feature, I''d like to be able to walk up to', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3985, 46, 246.616, 251.616, N'any GradeBook object, and tell it to loop through the available grades that is has and write them to the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3986, 47, 251.616, 255.616, N'screen, or write them to some destination. I''d like there to be a little bit of flexibility.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3987, 48, 255.616, 261.616, N'For example, I''d like to be able to say something like, GradeBook, please write out the grades,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3988, 49, 261.616, 265.616, N'and then pass in a parameter that will allow me to change destinations.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3989, 50, 265.616, 271.616, N'Maybe I want it to be on the screen, maybe I want it to be in a file, and fortunately, the .NET Framework', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3990, 51, 271.616, 275.616, N'contains some abstractions that will allow me to do that. For example if I call WriteGrades,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3991, 52, 275.616, 282.616, N'which is a method we still have to implement, but I pass in a static member of the Console class,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3992, 53, 282.616, 287.616, N'which is the Out property, what that will do is send an object into that WriteGrades method that the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3993, 54, 287.616, 292.616, N'GradeBook can use to write out to the screen. The GradeBook doesn''t know it''s the screen,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3994, 55, 292.616, 298.616, N'but Console.Out, it represents the output stream that goes to this console window, to the screen.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3995, 56, 298.616, 303.616, N'we''ll see the type of that parameter in just a second. Let me use Visual Studio to generate this method on', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3996, 57, 303.616, 310.616, N'the GradeBook, I can do that by placing the cursor on WriteGrades and pressing Ctrl., you can see the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3997, 58, 310.616, 316.616, N'drop-down option here is to generate a method, GradeBook.WriteGrades, that''s exactly what I wanted to do,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3998, 59, 316.616, 321.616, N'so I''ll press Enter to take that selection, and now if I come over into the GradeBook I should be able to', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (3999, 60, 321.616, 328.616, N'find that method in this class, it is right here. let''s make it a public method, let''s get rid of this line', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4000, 61, 328.616, 332.616, N'of code that is inside the method, we''ll replace it with something more useful, and let me change the name of', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4001, 62, 332.616, 336.616, N'this parameter to destination. But before I do, why is there an @ sign here?', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4002, 63, 336.616, 343.616, N'The @ sign is here because out is reserved keyword in C#, it''s not legal to have a parameter named out,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4003, 64, 343.616, 350.616, N'but anytime you want to have a parameter or variable name that has the same name as a C# keyword,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4004, 65, 350.616, 358.616, N'you can escape that name using the @ sign. For example, I could also say @class if I wanted this parameter to be called class.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4005, 66, 358.616, 364.616, N'But I generally avoid names that require an @ sign, let''s call this destination.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4006, 67, 364.616, 370.616, N'you''ll see this destination is of type TextWriter, and this is a useful abstraction in the .NET Framework', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4007, 68, 370.616, 375.616, N'because I can write information into a TextWriter, and ultimately I don''t know if that''s going to a file,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4008, 69, 375.616, 381.616, N'or to the console, or over the network, it just so happens that this particular TextWriter is going to be', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4009, 70, 381.616, 387.616, N'Console.Out so it will send output to the screen, but we''ll see later some of the flexibility that this', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4010, 71, 387.616, 393.616, N'abstraction gives me. Now We''ve already seen how to use a foreach loop, so let''s try using a for loop.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4011, 72, 393.616, 398.616, N'there''s a code snippet where if I just type for and press Tab, Tab, Visual Studio will generate the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4012, 73, 398.616, 404.616, N'skeleton of for loop, it''s going to do that by having an initializer i that starts at 0.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4013, 74, 404.616, 409.616, N'Before we enter the loop each time we''ll check to make sure that i less than some value,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4014, 75, 409.616, 416.616, N'that''s something we''re going to have to change, and each time after the loop executes, we will add 1 to i using i++.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4015, 76, 416.616, 422.616, N'So I want to loop from i = 0 to i is less than the number of grades in my list.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4016, 77, 422.616, 429.616, N'Fortunately this private variable, grades, it has a Count property, and quite often if you''re going to write', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4017, 78, 429.616, 434.616, N'a for loop against a collection, that collection will be a list which has a Count property,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4018, 79, 434.616, 440.616, N'or an array which has a Length property, and you can use those properties in the conditions for your for loop.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4019, 80, 440.616, 447.616, N'And now what I can do, is use my destination to write a line, which is grades, and I''m going to index into', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4020, 81, 447.616, 453.616, N'grades using that i variable to pull out a specific grade, the first grade will be index 0,', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4021, 82, 453.616, 461.616, N'the last item will essentially be index grades.Count -1. If I run the program, then we''re printing out the', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4022, 83, 461.616, 467.616, N'3 grades that we entered into the GradeBook, 91, 89.5, 75. Very good.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4023, 84, 467.616, 475.616, N'What if we wanted to do them in reverse order? Well then I could start at grades.Count, and I could go and', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4024, 85, 475.616, 484.616, N'loop while i is greater than 0, and each time through the loop I would decrement i, or subtract one from i.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4025, 86, 484.616, 490.616, N'And now because I''m starting this index at grades.Count, I just have to make sure that I subtract 1 from i', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4026, 87, 490.616, 496.616, N'when I index in to the Grades list. That way I don''t try to index in to the Grades list with a value of', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4027, 88, 496.616, 504.616, N'3 when Grades only contains 3 items, so now we get the grades in reverse order, 75, 89.5, 91.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4028, 89, 504.616, 509.616, N'So the for loop is quite flexible, I prefer to use foreach when I can, and I would certainly use a foreach in this', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4029, 90, 509.616, 514.616, N'scenario, and I could even use a while loop, like the while loop that we saw on the slide.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4030, 91, 514.616, 519.616, N'What I certainly wouldn''t want to do is use a do while loop, at least not without writing some additional', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4031, 92, 519.616, 524.616, N'code, because a do while loop always executes once, and there''s a possibility someone might invoke', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4032, 93, 524.616, 529.616, N'WriteGrades when there are no grades in the GradeBook, in which case we would never want to enter into a', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4033, 94, 529.616, 533.616, N'loop that tried to index into the grades, that would create a runtime error.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4034, 95, 533.616, 538.616, N'we''ll be talking more about runtime errors in this module, but next, let''s talk about some statements that', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4035, 96, 538.616, 558.616, N'allow us to jump around in code.', N'ro', N'', 121)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4036, 1, 1.908, 6.908, N'C# includes a number of keywords that allow you to unconditionally jump to some target.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4037, 2, 6.908, 10.5, N'These keywords include break, continue, goto, return, and throw.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4038, 3, 10.5, 14.908, N'We''ve already seen break, we know that we can use break inside the case label of a switch statement,', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4039, 4, 14.908, 19.908, N'but you can also use a break inside of a while loop, a do loop, a for loop, or a foreach loop,', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4040, 5, 19.908, 24.908, N'to break out of a loop and stop looping. For example, here is a foreach statement that''s going to loop', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4041, 6, 24.908, 30.908, N'through some collection of integers, and inside of the code if the age variable holds the value 21,', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4042, 7, 30.908, 35.908, N'we''re going to break out of this loop. So if age is equal to 21, even if there are more items left on that', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4043, 8, 35.908, 40.908, N'collection, we''re going to stop execution of the foreach loop and continue execution on the statement that', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4044, 9, 40.908, 45.908, N'is after the foreach statement. The continue statement in similar, except that instead of breaking out of', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4045, 10, 45.908, 51.908, N'the foreach statement, we''re going to skip executing any code after the continue statement and go to the next', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4046, 11, 51.908, 57.908, N'iteration of a loop. So in the code if we encounter an age value equal to 2, we''re going to continue the', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4047, 12, 57.908, 61.908, N'loop, we''re not going to execute anything that follows, and we''re not going to jump out of the foreach statement.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4048, 13, 61.908, 66.908, N'Essentially the continue statement starts the next iteration, and you can use it again inside of a while,', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4049, 14, 66.908, 72.908, N'a do while, a for, or a foreach statement. And then there is a goto statement in C#.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4050, 15, 72.908, 76.908, N'You can use the goto statement to jump to another statement that is marked by a label.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4051, 16, 76.908, 82.908, N'So in this version of the foreach loop, if we encounter age equal to 2, we''re going to jump execution down to', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4052, 17, 82.908, 86.908, N'the label with the name of skip, and jump over any code that was in between.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4053, 18, 86.908, 91.908, N'I do have to say in over 25 years of programming with various languages, I''ve never had to use a goto', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4054, 19, 91.908, 97.908, N'statement, and most programmers avoid goto at all costs, because it does make a program harder to follow.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4055, 20, 97.908, 102.908, N'The return statement, this is something that We''ve also used in the demos of this course,', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4056, 21, 102.908, 106.908, N'but I do want to point out that you can use a return statement with a void method.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4057, 22, 106.908, 111.908, N'So typically what We''ve done is, we''d have a method that has to return a string or an integer or some type of', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4058, 23, 111.908, 118.908, N'object like a GradeBook Statistics object, and we used a return statement to return the value of some variable.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4059, 24, 118.908, 124.908, N'But it is legal to use return when you have a void method, you''re just not allowed to pass a value back to the caller.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4060, 25, 124.908, 129.908, N'In that case you just have the return statement. So in this foreach loop, if we encounter an age equal to', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4061, 26, 129.908, 135.908, N'21, we are not only going to break out of the loop, we''re going to jump out of the method itself.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4062, 27, 135.908, 141.908, N'So if there was any additional code before we reach the end of the method, that code wouldn''t execute.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4063, 28, 141.908, 161.908, N'The last jumping statement that we need to cover is the throw statement, which it means it''s time to talk about exceptions.', N'ro', N'', 122)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4064, 1, 1.5, 8.768, N'The throw keyword in C# is used to raise an exception. An exception is a signal that an error condition', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4065, 2, 8.768, 13.768, N'exists, and as the name would imply, an exception should only be raised in exceptional circumstances,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4066, 3, 13.768, 18.768, N'that is, you shouldn''t use exceptions to change the normal program flow.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4067, 4, 18.768, 22.768, N'Use exceptions when your software finds itself in a position where it cannot move forward.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4068, 5, 22.768, 27.768, N'Exceptions are what happens when you have a bad input value, or the program is out of memory,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4069, 6, 27.768, 32.768, N'or a network is not available for communication. Those are the types of situations that may require', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4070, 7, 32.768, 38.768, N'exceptions, but not always. When you throw an exception, you are throwing an object, this is why we say', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4071, 8, 38.768, 43.768, N'exception handling is type safe because every exception with C# is going to be of a known type,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4072, 9, 43.768, 48.768, N'and the compiler can help you handle exceptions. We also say that working with exceptions is structured,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4073, 10, 48.768, 53.768, N'because you can set up blocks of code to handle exceptions, meaning you can structure your program to', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4074, 11, 53.768, 57.768, N'anticipate certain exceptions, and try to recover from those error conditions.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4075, 12, 57.768, 62.768, N'The reason we use a throw keyword, is you can picture your software throwing some error object,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4076, 13, 62.768, 68.768, N'and the error object is going to start travelling back through the program until it is either stopped by an', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4077, 14, 68.768, 72.768, N'exception handler, which is a piece of code that tries to recover from an exception,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4078, 15, 72.768, 77.768, N'or if there are no exception handlers, we have what we call an unhandled exception.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4079, 16, 77.768, 83.768, N'With .NET an unhandled exception will terminate your program, which sounds terrible, but in reality it''s', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4080, 17, 83.768, 88.768, N'usually better to shut down a program that has an unhandled error than it is to let the program continue', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4081, 18, 88.768, 93.768, N'because the program might be in a bad state after an error occurs, and it could save corrupt data,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4082, 19, 93.768, 98.768, N'it''s much better to fail. In this code snippet, we''re checking to see if the age value is equal to 21,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4083, 20, 98.768, 105.768, N'and if it is, we''ll throw a new ArgumentException. So you can see that an exception object will have a type definition.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4084, 21, 105.768, 110.768, N'In this case ArgumentException is a built-in class in the .NET Framework, and we need to create a new', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4085, 22, 110.768, 116.768, N'instance of that ArgumentException, and when we do, the constructor allows us to pass in a description so we', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4086, 23, 116.768, 121.768, N'can give some additional information about this error. Now if it is a common occurrence that age could be', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4087, 24, 121.768, 125.768, N'equal to 21, it''s probably not something that you want to generate an exception for,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4088, 25, 125.768, 132.768, N'exceptions should be for exceptional circumstances. let''s take a look in our program.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4089, 26, 132.768, 137.768, N'Inside of the Grades project, you might remember that we gave the GradeBook a Name property in a previous', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4090, 27, 137.768, 143.768, N'module, and then the logic for the setter of that property, we added some validation checks to make sure that', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4091, 28, 143.768, 149.768, N'the incoming NewName value was not going to be null or empty. And currently, if a caller tries to set the', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4092, 29, 149.768, 154.768, N'name of a GradeBook to something that is null or empty, we silently ignore that assignment.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4093, 30, 154.768, 159.768, N'What I''d like to do now is create an error condition so that if a caller tries to set the name to an invalid', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4094, 31, 159.768, 164.768, N'value, we will create an error condition in this program, we''ll do that by throwing an exception.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4095, 32, 164.768, 169.768, N'And to do this, I''m going to restructure the setter just a bit, I''m going to remove this if check,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4096, 33, 169.768, 176.768, N'actually I''m going to cut it out with Ctrl+X, and remove the curly braces that made that a block of code,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4097, 34, 176.768, 183.768, N'now I''m going to press Ctrl+K, followed by Ctrl+D, that allows Visual Studio to reformat that code,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4098, 35, 183.768, 187.768, N'and We''ve removed the indentation that was there, we don''t need that indentation any longer.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4099, 36, 187.768, 192.768, N'And now what I want to do is have an if check, but this time I will remove the not operator,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4100, 37, 192.768, 198.768, N'so this time I want to check if string.IsNullOrEmpty, and I can do that just by going right the string', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4101, 38, 198.768, 204.768, N'class and invoking the static method, I can also do that through the string keyword that is in C#,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4102, 39, 204.768, 209.768, N'and now if value is null or empty, I want to throw a new exception.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4103, 40, 209.768, 214.768, N'But what exception should I throw? There are many built-in exceptions in the .NET Framework,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4104, 41, 214.768, 219.768, N'you can also create your own custom exception classes. A class that represents an exception that you can', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4105, 42, 219.768, 223.768, N'throw, it always ends with the word Exception, that is in the class name.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4106, 43, 223.768, 229.768, N'And you can see if I just start tying Exception, the IntelliSense window will filter things out so I''m only', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4107, 44, 229.768, 233.768, N'looking at exception types. And just based on the few namespaces that we have imported right now,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4108, 45, 233.768, 240.768, N'you can see there are many built-in exceptions. These exceptions include everything from a', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4109, 46, 240.768, 246.768, N'DirectoryNotFoundException, to a DivideByZeroException, and there''s also some built-in argument exceptions,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4110, 47, 246.768, 251.768, N'so there''s ArgumentNullException, I could throw this exception if someone passes me an argument and that', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4111, 48, 251.768, 256.768, N'argument is null and I cannot work with a null value. there''s also a slightly more generic', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4112, 49, 256.768, 260.768, N'ArgumentException, which is just a way of saying something is wrong with one of the arguments.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4113, 50, 260.768, 266.768, N'And in the constructor for the particular type of exception, there''s an overload of the constructor that', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4114, 51, 266.768, 272.768, N'allows me to pass in a more explicit message, so I could say, Name cannot be null or empty.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4115, 52, 272.768, 278.768, N'This would be one way to do it, and let me hit Ctrl+K, Ctrl+D again to do some reformatting of the code,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4116, 53, 278.768, 286.768, N'and let''s go back to program.cs, and try to set the book''s name to a null value.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4117, 54, 286.768, 292.768, N'So using the null keyword in C#, run the program with Ctrl+F5, and I can see that the program has crashed', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4118, 55, 292.768, 297.768, N'with an unhandled exception, a System.ArgumentException, Name cannot be null or empty.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4119, 56, 297.768, 303.768, N'Notice that this error information includes a line of code where this error occurred, and in order for', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4120, 57, 303.768, 307.768, N'someone to help track down the error and why this occurred, there''s a full stack trace printed.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4121, 58, 307.768, 312.768, N'So what is a stack? As a program is executing and you call a method, that calls another method,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4122, 59, 312.768, 317.768, N'that calls another method, there''s a data structure being built internally that we call a stack,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4123, 60, 317.768, 321.768, N'and with each method that you call, something is pushed onto the stack.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4124, 61, 321.768, 325.768, N'You can imagine almost like a stack of papers on someone''s desk, every time we call a method,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4125, 62, 325.768, 331.768, N'we write the method name down on a piece of paper, and add it to that stack, and every time a method finishes', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4126, 63, 331.768, 336.768, N'executing and it returns, we pull a piece of paper off the stack and we can look at that next sheet and know', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4127, 64, 336.768, 340.768, N'what method we came from, who was the caller, and go back there.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4128, 65, 340.768, 346.768, N'A stack trace is showing you how execution arrived at this point in code where the unhandled error occurred.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4129, 66, 346.768, 352.768, N'And it''s telling us that the exception was thrown from line 53 of GradeBook.cs, but that''s not really helpful', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4130, 67, 352.768, 357.768, N'when you''re trying to track down a problem. What''s really helpful is usually something further up the stack,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4131, 68, 357.768, 365.768, N'and What''s further up the stack is Program.cs line 14, and if I close the program and go to line 14,', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4132, 69, 365.768, 370.768, N'I am on the line of code that is really responsible for creating this error condition because this is the', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4133, 70, 370.768, 376.768, N'line of code that passed an illegal value. Reading the stack traces that come out in an error message can', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4134, 71, 376.768, 382.768, N'quite often help you try to locate the piece of code that started all the problems and led to an unhandled error.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4135, 72, 382.768, 388.768, N'So now We''ve seen that an unhandled exception can terminate an application, but let''s look at the other side', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4136, 73, 388.768, 408.768, N'of exceptions now and see how they can handle an exception, and prevent a program from crashing.', N'ro', N'', 123)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4137, 1, 1.5, 7.089, N'In a C# application you have the option of trying to handle an exception using a try catch statement.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4138, 2, 7.089, 13.089, N'A try block is the try keyword followed by some curly braces, and inside the curly braces are the statements', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4139, 3, 13.089, 19.089, N'that you want to execute that might throw an exception. The try block can be followed up by one or more catch statements.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4140, 4, 19.089, 25.089, N'In this case we have one catch statement. If ComputeStatistics were to throw an exception, the runtime will', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4141, 5, 25.089, 30.089, N'go looking for the closest matching catch statement, and by matching I mean that if ComputeStatistics were to', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4142, 6, 30.089, 35.089, N'throw a FailNotFoundException, the catch statement that I have here will not catch that exception,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4143, 7, 35.089, 41.089, N'because that''s a different exception type. This catch statement is looking for a DivideByZeroException.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4144, 8, 41.089, 46.089, N'And when I say that the runtime looks for the closest matching type, I mean that the runtime is going to look', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4145, 9, 46.089, 51.089, N'for the handler with the right type of exception that is nearest to the point where the exception occurred.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4146, 10, 51.089, 57.089, N'That doesn''t mean closest in the source code, that means closest in the execution of the program.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4147, 11, 57.089, 62.089, N'So if ComputeStatistics were to throw an exception, but it already has an exception handler for a', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4148, 12, 62.089, 67.089, N'DivideByZeroException inside of that method, then this catch statement would not get the opportunity to', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4149, 13, 67.089, 73.089, N'catch the error, the exception would already be handled. let''s take a look in the program.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4150, 14, 73.089, 79.089, N'Inside of my program I know that if I set book.Name equal to null, that will cause the program to crash,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4151, 15, 79.089, 85.089, N'and it would be easy enough for me to fix this problem just by giving the GradeBook some name with characters inside.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4152, 16, 85.089, 90.089, N'But what if I didn''t want to hard code a string, what if I needed to prompt the user for a GradeBook', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4153, 17, 90.089, 100.089, N'name, and I''ll ask them please Enter a name, and then instead of a hardcoded string I use Console.ReadLine.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4154, 18, 100.089, 106.089, N'Now I''m in a situation where I don''t know when the program runs what value we''ll try to write into book.Name,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4155, 19, 106.089, 111.089, N'but I do know if the user gives me an invalid value, that will cause the program to crash.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4156, 20, 111.089, 115.089, N'Now, ideally what would happen is, I would not assign Console.ReadLine directly into book.Name,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4157, 21, 115.089, 122.089, N'instead, I''d save the value into a variable, perform some validation, and only set book.Name if have a valid', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4158, 22, 122.089, 128.089, N'value, and I might try to do that inside of a loop and continue to prompt the user to enter a name,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4159, 23, 128.089, 133.089, N'as long as they''re giving me an invalid value. But I''ll leave that as an exercise for you to try,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4160, 24, 133.089, 138.089, N'and instead what I want to do is just use some exception handling to prevent an application crash.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4161, 25, 138.089, 146.089, N'So if I know book.Name will throw an exception that could crash the program, I might use a try catch statement.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4162, 26, 146.089, 151.089, N'Inside of the try I can have as many lines of code inside of here as I want, so I could even include the', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4163, 27, 151.089, 157.089, N'Console.WriteLine, and if any exceptions emerge from any of the statements that are inside of the try,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4164, 28, 157.089, 162.089, N'I will have the opportunity to catch those exceptions using a catch statement.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4165, 29, 162.089, 166.089, N'With a catch statement I first have to describe the type of exception that I want to catch,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4166, 30, 166.089, 173.089, N'in this case it would be an ArgumentException, and then I can optionally provide a variable where the runtime', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4167, 31, 173.089, 178.089, N'will store the exception object that was thrown. So when book.Name does throw an ArgumentException,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4168, 32, 178.089, 183.089, N'I will capture a reference to that object inside of this variable ex.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4169, 33, 183.089, 187.089, N'And now I could Console.WriteLine and tell the user that they entered an invalid value,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4170, 34, 187.089, 192.089, N'I could also look inside of that exception object, and I can see there are properties like Message,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4171, 35, 192.089, 199.089, N'what is the message associated with the exception, even a StackTrace, so I could print out a stack trace if I', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4172, 36, 199.089, 204.089, N'wanted the user to see things about method names and line numbers and .cs files.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4173, 37, 204.089, 210.089, N'But let''s just print out a Message, and now run the program with Ctrl+F5, when prompted to enter a name,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4174, 38, 210.089, 216.089, N'I can just press the Enter key that will enter in an empty value, but now I''m catching the exception,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4175, 39, 216.089, 221.089, N'I''m displaying the text Name cannot be null or empty, that''s the exception object''s Message property,', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4176, 40, 221.089, 227.089, N'and now the program can continue to run, there are no unhandled exceptions, and I print out the grades and the statistics.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4177, 41, 227.089, 247.089, N'When we get to our next demo, we''ll see what dangerous things can happen when I actually enter a valid name.', N'ro', N'', 124)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4178, 1, 0, 7.196, N'You can follow a try block with multiple catch statements. This is known as chaining the catch statements.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4179, 2, 7.196, 13.196, N'And even though we have multiple catch statements, only one of these catch blocks can execute after an', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4180, 3, 13.196, 18.196, N'exception is thrown from inside of the try block. The catch blocks will be evaluated from top to bottom,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4181, 4, 18.196, 23.196, N'and the first one that specifies a matching exception type will be the catch block that executes.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4182, 5, 23.196, 29.196, N'And that''s why when you chain blocks like this, you want to include the most specific exception types first.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4183, 6, 29.196, 35.196, N'And by specific I mean this, DivideByZeroException is specific exception type, but all exception types in', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4184, 7, 35.196, 42.196, N'.NET derive or inherit from a base exception class with the name just Exception.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4185, 8, 42.196, 47.196, N'And we''re going to talk more about inheritance and derivation in the next module, for now you can just know', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4186, 9, 47.196, 53.196, N'that this exception type is special that will catch nearly every type of exception that can be thrown in a C#', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4187, 10, 53.196, 59.196, N'application, there''s just a few very special and very catastrophic exceptions that will always crash a', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4188, 11, 59.196, 64.196, N'program, you cannot catch them. But because I can catch nearly everything with this exception type,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4189, 12, 64.196, 69.196, N'I want to include that catch statement after other catch statements, like a catch statement for', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4190, 13, 69.196, 74.196, N'DivideByZeroException. If the exception was on the top I''d never get the DivideByZeroException because that', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4191, 14, 74.196, 80.196, N'is also an instance of an exception type. let''s look at chaining in the demo.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4192, 15, 80.196, 87.196, N'Back in Visual Studio let''s run the application with the debugger by pressing F5, and now let me enter a name', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4193, 16, 87.196, 92.196, N'for the GradeBook, and when I press Enter the program generates an unhandled exception.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4194, 17, 92.196, 97.196, N'The debugger will automatically stop on a line of code that generates an unhandled exception,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4195, 18, 97.196, 102.196, N'and in this case we stopped on the line of code where we are invoking the NameChanged event.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4196, 19, 102.196, 107.196, N'And you can see the exception is a NullReferenceException. And What''s happened here is that we have', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4197, 20, 107.196, 113.196, N'declared this public event, NameChanged, but this event currently has the value null because there are no', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4198, 21, 113.196, 119.196, N'subscribers to this event. And as I''ve said before, if you try to invoke or use a variable that contains a', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4199, 22, 119.196, 125.196, N'null reference, you can end up with this NullReferenceException, and currently this exception is unhandled,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4200, 23, 125.196, 129.196, N'and this is something to be careful of when you''re using events, if no one has subscribed to an event,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4201, 24, 129.196, 133.196, N'the event will be null, and that can create a NullReferenceException.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4202, 25, 133.196, 139.196, N'This is an unhandled exception because we do not have an exception handler for a NullReferenceException,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4203, 26, 139.196, 145.196, N'just an ArgumentException, but let''s stop debugging and see if we can prevent the program from crashing.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4204, 27, 145.196, 152.196, N'Now the ideal solution to this problem is to make sure that that event is not null before trying to use that', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4205, 28, 152.196, 157.196, N'NameChanged event. But before we do that, I wanted to use this scenario to show you how you can also catch', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4206, 29, 157.196, 165.196, N'a NullReferenceException, I can also name this variable ex because it is in a different scope than the ex', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4207, 30, 165.196, 170.196, N'variable for my ArgumentException, that only exists for the first catch block, and here in the second catch', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4208, 31, 170.196, 176.196, N'block I can now do a Console.WriteLine, and perhaps just provide a generic error message here like Something', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4209, 32, 176.196, 182.196, N'went wrong, and you''ll notice in this case I''m not even using that variable ex, well the variable is', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4210, 33, 182.196, 187.196, N'optional, this is a way of telling the C# compiler I want to catch a NullReferenceException, but then I don''t', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4211, 34, 187.196, 194.196, N'need a reference to that exception object, my code has all the logic and data that it needs, I don''t need the variable.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4212, 35, 194.196, 201.196, N'Now if I run the program, this time I''ll run it with Ctrl+F5 without the debugger, enter in some name,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4213, 36, 201.196, 207.196, N'and we now get the exception message Something went wrong. I could also try to catch Exception,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4214, 37, 207.196, 215.196, N'and let''s try to do that first. If I catch Exception, so not ArgumentException but just Exception,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4215, 38, 215.196, 222.196, N'both ArgumentException and NullReferenceException, they both are of this exception type, and you can see I', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4216, 39, 222.196, 228.196, N'even get a complier error that says A previous catch clause already catches all exceptions of this type or a super type.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4217, 40, 228.196, 235.196, N'So again more on super types and inheritance in the next module, but if I wanted to catch all exceptions,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4218, 41, 235.196, 242.196, N'that catch clause would have to come here at the end. And I could also just use my existing block,', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4219, 42, 242.196, 248.196, N'and instead of catching a NullReferenceException just catch all exceptions and write out Something went wrong.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4220, 43, 248.196, 253.196, N'But I will caution you that that is potentially dangerous, because you won''t know if you''re catching an', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4221, 44, 253.196, 259.196, N'exception that is related to security settings, or memory settings, or something went wrong in the input', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4222, 45, 259.196, 265.196, N'output system, when you catch exception you''re catching everything, and we might be allowing the program to', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4223, 46, 265.196, 271.196, N'continue execution when what really should have let happen is let that exception go unhandled and terminate the program.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4224, 47, 271.196, 276.196, N'But when I catch exception I can still enter a name and get that message Something went wrong.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4225, 48, 276.196, 281.196, N'And like I say, the proper way to handle this is inside of the GradeBook, and it would actually be rather', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4226, 49, 281.196, 288.196, N'important to make sure that NameChanged is not a null value before I try to invoke it, and I could do that by', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4227, 50, 288.196, 294.196, N'adding an additional if statement here, We''ve talked about nested ifs earlier in this module, or I could also', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4228, 51, 294.196, 298.196, N'add an additional condition to this Boolean expression. So I could say name is not equal to the existing', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4229, 52, 298.196, 307.196, N'value, and NameChanged is not equal to null, that way both of those conditions have to be true before we go', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4230, 53, 307.196, 315.196, N'out and instantiate NameChangedEventArgs and raise this event. And with logic in place, I shouldn''t need to', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4231, 54, 315.196, 323, N'catch a NullReferenceException, I should just be able to run the program, enter in a name, and the program continues normally.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4232, 55, 323, 327.196, N'we''re not listening for the NameChanged event, but that''s okay, we didn''t need any logic in the program', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4233, 56, 327.196, 347.196, N'to do any sort of processing when that event occurs.', N'ro', N'', 125)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4234, 1, 0, 6.093, N'After a try statement you can optionally include a finally statement.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4235, 2, 6.093, 12.093, N'The finally statement allows you to specify a block of code that is always going to execute even if there''s', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4236, 3, 12.093, 17.093, N'an exception inside of the try block. So the finally code executes when there is an exception,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4237, 4, 17.093, 23.093, N'and when there is no exception, and that makes the finally block a good place to add finalization code,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4238, 5, 23.093, 27.093, N'that is, code that will clean up resources that you might have acquired previously.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4239, 6, 27.093, 34.093, N'In .NET we talk about managed resources, but really the only resource being managed by the .NET runtime is memory.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4240, 7, 34.093, 40.093, N'The runtime knows what memory you are using and what memory you are no longer using and it cleans things up for you.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4241, 8, 40.093, 45.093, N'There are other resources you''ll probably need in an application, resources like a data file,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4242, 9, 45.093, 50.093, N'or a network socket, or a database connection, and when you''re working with these resources it''s important', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4243, 10, 50.093, 54.093, N'to close, or release, or free these resources when you''re finished.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4244, 11, 54.093, 58.093, N'Otherwise you can leave behind corrupt data or run out of these resources.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4245, 12, 58.093, 62.093, N'In this sample we''re opening up a file on disk, and we want to make sure it''s closed even if there''s an', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4246, 13, 62.093, 69.093, N'exception that''s thrown. We can do that with a try finally by putting a file.Close call inside of the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4247, 14, 69.093, 74.093, N'finally block, and although I didn''t show it in this example, you can also have one or more catch statements', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4248, 15, 74.093, 80.093, N'in here that try to catch exceptions. Many of the classes in .NET that represent unmanaged resources,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4249, 16, 80.093, 87.093, N'that is resources that you have to explicitly close, they all implement a special interface known as IDisposible.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4250, 17, 87.093, 92.093, N'we''ll talk more about interfaces in the next module too, for now just know that if an object has', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4251, 18, 92.093, 98.093, N'a disposed method that you can see in IntelliSense, chances are the object is a disposable object,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4252, 19, 98.093, 102.093, N'and you can implement the try finally logic in a cleaner way with a using statement.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4253, 20, 102.093, 107.093, N'This is not a using statement for namespaces like we saw earlier, this is a using statement that will make', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4254, 21, 107.093, 113.093, N'sure an object is properly disposed and resources are freed, even if there is an exception.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4255, 22, 113.093, 118.093, N'So in the code snippet I''m using two FileStreams, and these FileStreams will be available throughout the code', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4256, 23, 118.093, 124.093, N'that is inside of the curly braces beneath the using statements, and once we reach the bottom curly brace,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4257, 24, 124.093, 131.093, N'the C# compiler will generate code to make that these FileStreams are properly disposed and they''re properly closed.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4258, 25, 131.093, 136.093, N'That makes sure that all the data that we might have written to a file will be flushed out to disk,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4259, 26, 136.093, 140.093, N'and also these files won''t be locked and prevent someone else from opening up the file.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4260, 27, 140.093, 143.093, N'let''s take a closer look in code.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4261, 28, 143.093, 148.093, N'let''s work with a file in the Grades project. What I''d like to do is have the GradeBook write the grades', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4262, 29, 148.093, 153.093, N'that it stores into a text file, and we already have a WriteGrades method on the GradeBook that allows the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4263, 30, 153.093, 159.093, N'caller to set the destination using a parameter. In this case the destination is the Console,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4264, 31, 159.093, 166.093, N'so all my program really needs to do is swap Console.Out with an object that will write to a file instead.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4265, 32, 166.093, 171.093, N'And this can be fairly easy with the .NET Framework. There is a file class in the .NET Framework,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4266, 33, 171.093, 177.093, N'it''s in the System.IO namespace, so I''m going to type in file and press Ctrl., that will bring up the action', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4267, 34, 177.093, 184.093, N'menu that allows me to select this top entry, which says please add a using statement for System.IO at the top of this file.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4268, 35, 184.093, 190.093, N'And now on this file class, there''s number of static methods that allow me to easily create, and append,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4269, 36, 190.093, 196.093, N'and delete files from the file system. I''m going to choose the method CreateText, I need to give this method', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4270, 37, 196.093, 202.093, N'a string parameter that tells the framework the name of the file that I want to create, and let''s call that', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4271, 38, 202.093, 209.093, N'file Grades.Text, and you can see this method returns an object that is of type StreamWriter, and it turns', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4272, 39, 209.093, 215.093, N'out that a StreamWriter is compatible with a TextWriter that the WriteGrades methods expects.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4273, 40, 215.093, 221.093, N'So if I press F12 to go that method definition, you''ll remember we created this method taking a TextWriter,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4274, 41, 221.093, 230.093, N'and a StreamWriter is a type of TextWriter. So let me save the return from File.CreateText into a new', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4275, 42, 230.093, 235.093, N'variable of type StreamWriter, let''s call it outputFile, and now what I should be able to do is pass', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4276, 43, 235.093, 243.093, N'outputFile into the WriteGrades method, and let''s try it out by running the program with Ctrl+F5.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4277, 44, 243.093, 248.093, N'I''ll need to give the GradeBook a name, let''s just give it the name Z, and now I no longer see the grades', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4278, 45, 248.093, 252.093, N'being written to the console, but let''s go out and check our Grades.Text file.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4279, 46, 252.093, 258.093, N'Since I didn''t specify a full path when I did File.CreateText, this file should be created in the same', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4280, 47, 258.093, 263.093, N'directory where the program is executing, and one easy way to get to that directory is right-click on the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4281, 48, 263.093, 270.093, N'Grades project, say Open Folder in File Explorer, and then I can navigate to the folder where the actual', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4282, 49, 270.093, 276.093, N'assembly lives, so that''s the bin, Debug folder, and it''s inside of here where I can see a text document,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4283, 50, 276.093, 280.093, N'grades.Text, let''s open that up and you can see that it is empty.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4284, 51, 280.093, 284.093, N'Now this file may not always be empty, it might depend on other things that you''re doing in your program,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4285, 52, 284.093, 290.093, N'or if you''re doing anything with the debugger, but What''s happened here is I have written information into', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4286, 53, 290.093, 295.093, N'a stream, and you have to be a little bit careful with any type of stream, whether it''s a FileStream or a', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4287, 54, 295.093, 301.093, N'NetworkStream, streams have a tendency to buffer information that you write into them, and if you don''t', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4288, 55, 301.093, 307.093, N'properly flush that stream, or close that stream, or dispose that stream, there''s a chance your program could', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4289, 56, 307.093, 311.093, N'exit without the information ever arriving at the actual destination.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4290, 57, 311.093, 318.093, N'So this StreamWriter, it does have a Close method, and let''s just see what happens if I explicitly invoke', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4291, 58, 318.093, 324.093, N'this Close method, run the program again, give the GradeBook a simple name, and now come back out to the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4292, 59, 324.093, 330.093, N'folder, and open up this text file, and I can see the grades did successfully arrive inside of the text file,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4293, 60, 330.093, 337.093, N'so that''s good, but typically you don''t want to write your code in this style when you''re writing a real C# application.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4294, 61, 337.093, 342.093, N'Anytime you''re working with input and output, there''s always a chance for an exception, and you might say', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4295, 62, 342.093, 347.093, N'well, what types of exceptions? For example, you might be wondering what types of exceptions could', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4296, 63, 347.093, 353.093, N'File.CreateText throw? And one way to answer that question is to go to the documentation.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4297, 64, 353.093, 358.093, N'Since the File class is part of the .NET Framework, I can go to msdn.microsoft.com,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4298, 65, 358.093, 363.093, N'the Microsoft Developer Network, and I should be able to find documentation of File.Create.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4299, 66, 363.093, 373.093, N'So let me do a search for File.CreateText, and here is that method as the first result in the search list,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4300, 67, 373.093, 378.093, N'and as part of the documentation for this method, there will be a list of exceptions that this method could', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4301, 68, 378.093, 382.093, N'potentially throw. And you can see there might be an UnauthorizedAccessException,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4302, 69, 382.093, 389.093, N'or an ArgumentException if I pass an invalid path. The path could also be too long, Windows has a limitation', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4303, 70, 389.093, 396.093, N'on the maximum length of a path and file name. I could also be trying to create this file in a directory', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4304, 71, 396.093, 402.093, N'that doesn''t exist. So all sorts of things could go wrong. And ideally what I would do, is I would use this', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4305, 72, 402.093, 410.093, N'StreamWriter inside of a try, catch, finally construct, where inside of the finally I would do something like,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4306, 73, 410.093, 415.093, N'outputFile.Close to make sure that no matter what goes wrong inside of creating the file or writing the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4307, 74, 415.093, 422.093, N'grades, I''ll always be closing this file that I''m creating. But the try and the catch is only useful if I', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4308, 75, 422.093, 426.093, N'actually want to do some sort of exception handling and process exceptions.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4309, 76, 426.093, 433.093, N'And so an alternative approach to making sure this output file is always closed, is to wrap this StreamWriter', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4310, 77, 433.093, 439.093, N'with a using statement. The using statement is essentially saying I''m going to be using this unmanaged', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4311, 78, 439.093, 445.093, N'resource, this StreamWriter in the following block of code. So I will use curly braces to contain all the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4312, 79, 445.093, 450.093, N'code that''s going to be using that resource, and behind the scenes what the C# complier will do is', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4313, 80, 450.093, 456.093, N'essentially set up a try finally to make sure that if there are any exceptions inside of this block of code,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4314, 81, 456.093, 461.093, N'then it will always dispose of this output file. And you can see in the IntelliSense window that there is', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4315, 82, 461.093, 467.093, N'both a Close method and a Dispose method. And any time you see a Dispose method that''s a good indication that', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4316, 83, 467.093, 473.093, N'you would be able to use this object in a using statement. And many classes in .NET will offer both a', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4317, 84, 473.093, 478.093, N'Dispose method and then some sort of explicit Close method, and you can think of them as synonyms for one', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4318, 85, 478.093, 484.093, N'another, and they both ultimately achieve the same effect which is to make sure this unmanaged resources', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4319, 86, 484.093, 490.093, N'released, and closed, and flushed properly. And since I now have outputFile wrapped with a using statement,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4320, 87, 490.093, 495.093, N'I no longer need to explicitly invoke close or dispose, that''s going to happen for me.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4321, 88, 495.093, 501.093, N'And if book.WriteGrades does throw an exception, it will go unhandled and crash the program, but that''s okay,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4322, 89, 501.093, 506.093, N'I''m still going to make that these resources are cleaned up. If CreateText throws an exception,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4323, 90, 506.093, 511.093, N'that will also be an unhandled exception, I have no try catch block here, and in that situation we''ll have to', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4324, 91, 511.093, 516.093, N'assume that the .NET Framework is properly cleaning things up, because if CreateText throws an exception,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4325, 92, 516.093, 522.093, N'I''m not going to get an outputFile object back, I''m not going to get a StreamWriter.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4326, 93, 522.093, 526.093, N'So this code should be a little more robust now, and I should be able to still run the program, enter a name', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4327, 94, 526.093, 533.093, N'for my GradeBook, and come out to the Grades.Text file, and see that it''s populated.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4328, 95, 533.093, 537.093, N'And any time you''re working with an object and you see there is a dispose method, you''ll probably want to', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4329, 96, 537.093, 542.093, N'consider if you should be using a using statement or not. Now there''s one more thing that I want to do to', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4330, 97, 542.093, 548.093, N'this program before we leave, and that''s just clean a few things up because we have various bits of code', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4331, 98, 548.093, 554.093, N'scattered around this main method doing all sorts of different things, and to me the method just feels messy.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4332, 99, 554.093, 559.093, N'So one thing I would like to do is highlight the lines of code that try to achieve a specific goal,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4333, 100, 559.093, 565.093, N'like getting the name for a GradeBook, and refactor these bits into individual methods that have a name.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4334, 101, 565.093, 572.093, N'And one easy way to do that is to select the code, and then press Ctrl., the only option that pops up here', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4335, 102, 572.093, 577.093, N'is an ExtractMethod option. This is part of the built-in refactoring tools in Visual Studio,', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4336, 103, 577.093, 582.093, N'and if I just select this option, Visual Studio will create that method for me and I can name this method', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4337, 104, 582.093, 591.093, N'now, I could name it something like GetBookName, and when I press Enter, Visual Studio will apply changes', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4338, 105, 591.093, 597.093, N'throughout my source code, I now have a method that I can call GetBookName, which will contain the code that', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4339, 106, 597.093, 604.093, N'was previously inside of the main method. let''s do this a few more times, let''s also use ExtractMethod on', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4340, 107, 604.093, 610.093, N'these three lines of code, because what these three lines of code are doing are really adding grades to the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4341, 108, 610.093, 620.093, N'GradeBook, then, I''m using a few lines of code here to save the grades to the file system, and finally at the', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4342, 109, 620.093, 628.093, N'end I''m going to extract a method to write the results. And now to me the main method looks much better because', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4343, 110, 628.093, 634.093, N'we''re breaking down the small steps and individual pieces of the program into named methods that have just a', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4344, 111, 634.093, 640.093, N'little bit of code inside of each one, and to me that''s always a better design that is going to be easier to maintain.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4345, 112, 640.093, 660.093, N'we''re going to be talking more about design in the next module on Object-Oriented Programming.', N'ro', N'', 126)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4346, 1, 0, 6.349, N'In this module we looked at flow control statements in C#. These statements included the conditional', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4347, 2, 6.349, 10.349, N'branching statements like the if statement. We also looked at looping statements like the for loop and the', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4348, 3, 10.349, 16.349, N'jumping statements like break and continue. Finally we took a close look at exceptions because exceptions', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4349, 4, 16.349, 21.349, N'are the error handling mechanism that is built into .NET, and sooner or later you will either need to throw', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4350, 5, 21.349, 26.349, N'an exception because your program has detected a critical error, or you will need to handle an exception and', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4351, 6, 26.349, 31.349, N'try to either recover from the error or log the error and prevent the program from terminating.', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4352, 7, 31.349, 37.849, N'We also saw the importance of cleaning up unmanaged resources like open files and how we can let the C# using', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4353, 8, 37.849, 57.849, N'keyword help us clean up and free these unmanaged resources.', N'ro', N'', 127)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4354, 1, 0, 6, N'Hi, this is Scott, and this is the final module in this C# course.', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4355, 2, 6, 11, N'In this module I want to give you the concepts and syntax for Object-Oriented Programming in C#.', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4356, 3, 11, 17, N'C# is an object-oriented programming language, although you can do more than just object-oriented programming', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4357, 4, 17, 22, N'in C#, and I talk about those topics in the C# Programming Paradigms course on Pluralsight.', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4358, 5, 22, 28, N'In this module of this course we''re going to look at inheritance and polymorphism and how to use abstract', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4359, 6, 28, 48, N'classes and interfaces.', N'ro', N'', 128)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4360, 1, 1, 8, N'The C# language provides the syntax and tools to build on what is known as the three pillars of object-oriented programming.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4361, 2, 8, 11.631, N'These three pillars are encapsulation, inheritance, and polymorphism.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4362, 3, 11.631, 17.631, N'My personal view is that encapsulation is the primary pillar of object-oriented programming, and most classes', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4363, 4, 17.631, 23.631, N'and training tend to overemphasize inheritance and polymorphism as being more useful than they really in day', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4364, 5, 23.631, 29.631, N'to day programming. But that''s my personal view. We are going to talk about all three pillars however,', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4365, 6, 29.631, 34.631, N'and understanding how inheritance and polymorphism work in C# is important, even if you don''t put those two', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4366, 7, 34.631, 40.631, N'pillars to work all the time in the software that you write. Encapsulation is the key pillar of OOP,', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4367, 8, 40.631, 45.631, N'because without encapsulation we could never build large applications or large systems.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4368, 9, 45.631, 50.631, N'Encapsulation helps us hide complexity, and it allows me to reason about something like a grade book,', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4369, 10, 50.631, 54.631, N'which We''ve been building in this course, and think about what I can do with a grade book, which is add', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4370, 11, 54.631, 59.631, N'grades and compute statistics. And I don''t have to worry about the details, and the data structures,', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4371, 12, 59.631, 66.631, N'and the calculations involved. So classes are one way to achieve encapsulation in C#, but taking 10 lines of', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4372, 13, 66.631, 70.631, N'code and putting that code into a method is another form of encapsulation.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4373, 14, 70.631, 75.631, N'Instead of knowing the details about those 10 lines of code, I can now think and reason about just the method', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4374, 15, 75.631, 79.631, N'and what it can do, what inputs does it take, what does it return.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4375, 16, 79.631, 85.631, N'And that method even has name that I can use to refer to everything that is happening within those 10 lines of code.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4376, 17, 85.631, 91.631, N'Encapsulation then is all about hiding complexity and building models, which logically group together functionality.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4377, 18, 91.631, 96.631, N'But inheritance and polymorphism are different, these two pillars of object-oriented programming are about', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4378, 19, 96.631, 102.631, N'reusing code and reusing data. it''s almost never a good idea to have duplicated code inside of an', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4379, 20, 102.631, 109.631, N'application, and inheritance and polymorphism are two techniques to avoid duplicated code and reuse that code instead.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4380, 21, 109.631, 129.631, N'So let''s turn our attention to inheritance.', N'ro', N'', 129)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4381, 1, 2, 8.714, N'Inheritance is a technique where I can define a relationship between two classes such that one class takes on', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4382, 2, 8.714, 15.714, N'or inherits the members of another class. So if class A has one method, DoWork, then class B can also have', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4383, 3, 15.714, 20.714, N'that same method, just by inheriting from class A and not writing any additional code, but reusing the code', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4384, 4, 20.714, 26.714, N'already in the first class. If class B wanted to have an additional method, it can.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4385, 5, 26.714, 31.714, N'The syntax for inheritance is to use a colon after the name of your class, and then you specify the base', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4386, 6, 31.714, 35.714, N'class, that is the class whose members you are going to inherit.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4387, 7, 35.714, 40.714, N'We''ve already seen some inheritance in this course when we defined a custom event arguments class for the', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4388, 8, 40.714, 46.714, N'Gradebook''s NameChanged event. All events in .NET should be pass an arguments parameter that inherits from', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4389, 9, 46.714, 52.714, N'EventArgs in the framework class library. You can only inherit from a single class in C#, that is you can', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4390, 10, 52.714, 58.714, N'only specify a single base class after the colon, but the inheritance chain is unlimited.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4391, 11, 58.714, 65.714, N'You can have class C inherit from class B, which inherits from class A, and in that case class C is inheriting', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4392, 12, 65.714, 69.714, N'all the members from B and A. So class C would also have a DoWork method.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4393, 13, 69.714, 77.714, N'You do have to be cautious with inheritance because it does tie up your classes and your code into a tightly bound relationship.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4394, 14, 77.714, 83.714, N'I talk about that more in the Programming Paradigms course, for now let''s take a look at inheritance in code.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4395, 15, 83.714, 88.714, N'Inside the Grades project that We''ve been working on throughout this course, let''s imagine that our users', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4396, 16, 88.714, 94.714, N'came to us and they''ve told us that occasionally they want a grade book that will through away the lowest grade', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4397, 17, 94.714, 99.714, N'before computing statistics. That will allow a student who has a bad day or one bad assignment to not be', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4398, 18, 99.714, 105.714, N'penalized as much for that one bad grade, and this is something that the users occasionally want to do,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4399, 19, 105.714, 109.714, N'they don''t want to get rid of the original algorithm for the grade book, they just occasionally want to', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4400, 20, 109.714, 114.714, N'compute statistics and throw away the lowest grade. Now what are some different approaches to implementing this?', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4401, 21, 114.714, 120.714, N'Well I could take all of the code in the GradeBook and press Ctrl+A and copy this code and paste it into a', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4402, 22, 120.714, 126.714, N'new class, perhaps we can call it the ThrowAwayGradeBook, and then I can go in and tweak the code,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4403, 23, 126.714, 131.714, N'and tweak ComputeStatistics to throw away the lowest grade before doing the rest of the computations.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4404, 24, 131.714, 136.714, N'But this copy and paste approach can lead to a lot of duplicated code inside of an application if that', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4405, 25, 136.714, 143.714, N'happens too often. So another approach might be to modify the existing GradeBook, perhaps add a public', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4406, 26, 143.714, 149.714, N'property, ThrowAwayLowest, and if I''m in a situation where the lowest grade needs to be thrown away,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4407, 27, 149.714, 155.714, N'I could always instantiate the GradeBook and then set this property to true, and inside of ComputeStatistics', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4408, 28, 155.714, 161.714, N'check this property, and if it''s true run a little bit of code to remove the lowest grade and then continue', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4409, 29, 161.714, 165.714, N'with the execution that''s computing the statistics. that''s another approach.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4410, 30, 165.714, 170.714, N'And the approach that ultimately I would take really depends on the team that I''m working with and the type', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4411, 31, 170.714, 174.714, N'of application I''m building, and most importantly the business, where else do I anticipate that the business', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4412, 32, 174.714, 179.714, N'might want to make changes to the GradeBook or the algorithms that are involved?', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4413, 33, 179.714, 183.714, N'And in some of those scenarios I would use inheritance to solve this problem, and that''s the approach that', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4414, 34, 183.714, 189.714, N'I''ll show you today. let''s go into the Grades project and add a new class.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4415, 35, 189.714, 197.714, N'I will call this the ThrowAwayGradeBook, because it will throw away the lowest grade.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4416, 36, 197.714, 206.714, N'And I want this to also be a public class, and this is a class that I want to inherit from GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4417, 37, 206.714, 210.714, N'So at this point, ThrowAwayGradeBook has all of the same capabilities as our regular GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4418, 38, 210.714, 218.714, N'In fact I can come into Program.cs, and instead of instantiating a GradeBook, I can instantiate a', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4419, 39, 218.714, 223.714, N'ThrowAwayGradeBook, and I can take that object and assign it to a variable of type GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4420, 40, 223.714, 229.714, N'We would say that the ThrowAwayGradeBook is a GradeBook, because ThrowAwayGradeBook inherits from GradeBook,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4421, 41, 229.714, 235.714, N'it''s a specific type of GradeBook. And in C# you can always take a derived type and assign it to a variable', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4422, 42, 235.714, 241.714, N'of a base type and that''s completely legal. At this point I could even run the program, first let me comment', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4423, 43, 241.714, 248.714, N'out this line of code that would force me to input a GradeBook name, I can run this program with Ctrl+F5,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4424, 44, 248.714, 253.714, N'and I can see that we''re still outputting the same numbers that we had before, the average is 85.17,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4425, 45, 253.714, 261.714, N'and the lowest grade is a 75. So currently, this new ThrowAwayGradeBook object behaves just like a regular GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4426, 46, 261.714, 268.714, N'Now what I want to do is have ComputeStatistics behave a little bit differently, I want it to throw away the lowest grade.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4427, 47, 268.714, 274.714, N'So on the ThrowAwayGradeBook let me create a public method that will return an object of type', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4428, 48, 274.714, 282.714, N'GradeStatistics, this is also called ComputeStatistics, and inside of here I want to reuse the existing', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4429, 49, 282.714, 287.714, N'algorithm that is inside of the GradeBook as much as possible, because it''s already doing the hard work of', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4430, 50, 287.714, 292.714, N'the calculations, and I can do this. You might remember earlier in the course we talked about a special', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4431, 51, 292.714, 297.714, N'implicit variable that''s available inside of every instance method, that is a non-static method,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4432, 52, 297.714, 303.714, N'and that''s the this variable. This is a keyword in C#, and this allows me to reference the object that I''m', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4433, 53, 303.714, 309.714, N'currently inside of, and I can see in the IntelliSense window I can reach methods that are on my object instance,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4434, 54, 309.714, 313.714, N'methods that I''ve inherited, methods like AddGrade and ComputeStatistics.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4435, 55, 313.714, 319.714, N'there''s another keyword in C#, a special implicit variable, it''s called base, and what base will allow me to', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4436, 56, 319.714, 324.714, N'do is reach specific methods in a class that I''ve inherited from.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4437, 57, 324.714, 330.714, N'So in this case when I say base.ComputeStatistics, I''m really referring to that ComputeStatistics method that', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4438, 58, 330.714, 336.714, N'is available from the GradeBook. And ultimately what I could do is just say return whatever that', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4439, 59, 336.714, 341.714, N'ComputeStatistics method comes up with that will use the existing code inside of the GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4440, 60, 341.714, 347.714, N'But before I invoke that ComputeStatistics method in my base class, I need to remove the lowest grade.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4441, 61, 347.714, 354.714, N'So let''s declare a variable of type float, I will call it lowest, and initialize it to float.MaxValue,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4442, 62, 354.714, 365.714, N'and what I need to do is loop through each grade that is in my grades collection, except I cannot reach the list', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4443, 63, 365.714, 371.714, N'of grades from the ThrowAwayGradeBook. Notice the errors that grades is inaccessible due to its protection level.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4444, 64, 371.714, 378.714, N'Over in the GradeBook, you might remember that when we created this grades field, this list of grades,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4445, 65, 378.714, 384.714, N'we marked this field as private, and the only code that is allowed to access this field is code that inside', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4446, 66, 384.714, 390.714, N'of the same class, inside of GradeBook.cs. But I do want to give the ThrowAwayGradeBook access to these grades.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4447, 67, 390.714, 396.714, N'Now I don''t want to make grades public, that would give everyone access to this field, I need something in', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4448, 68, 396.714, 406.714, N'between, and that in between level of access is protected. So a public member, anyone can access.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4449, 69, 406.714, 410.714, N'A private member, only code inside of the same class can access.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4450, 70, 410.714, 416.714, N'A protected member, whether it''s a field, or an event, or a method, a protected member you can access from', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4451, 71, 416.714, 423.714, N'code that is in this class, or code that is in a derived class. And by marking grades as protected,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4452, 72, 423.714, 429.714, N'I should now have access to that field from any class that ultimately inherits from GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4453, 73, 429.714, 439.714, N'And I could now say lowest = Math.Min, between the grade that I''m looking at and my existing lowest score,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4454, 74, 439.714, 443.714, N'and when that loop is finished I should have the lowest grade in that variable, and now there''s a very', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4455, 75, 443.714, 452.714, N'convenient Remove method that I can use on a list, and I could say grades.Remove this lowest item.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4456, 76, 452.714, 456.714, N'Now there''s a couple situations I should be careful with in this code, I should be careful if there''s only', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4457, 77, 456.714, 462.714, N'one grade in the grades collection, or if there''s no grades in the grades collection, or if someone''s going', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4458, 78, 462.714, 468.714, N'to call ComputeStatistics multiple times and keep removing grades, those are all situations I need to worry', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4459, 79, 468.714, 473.714, N'about, but I''m just making you aware of those, we want to focus on inheritance and this is about the simplest', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4460, 80, 473.714, 479.714, N'possible thing I could do to remove the lowest grade. So let''s run the application again, and you''ll notice', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4461, 81, 479.714, 485.714, N'I''m getting the same results as I did before, the average is still an 85.17, and the lowest grade is still a 75.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4462, 82, 485.714, 490.714, N'What''s going wrong? let''s debug this a little bit using Console.WriteLine.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4463, 83, 490.714, 494.714, N'Sometimes Console.WriteLine is easier than using the debugger itself.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4464, 84, 494.714, 501.714, N'Here I''m going to say that we are inside of ThrowAwayGradeBook: :ComputeStatistics.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4465, 85, 501.714, 506.714, N'And I''m going to take this line of code and go to the GradeBook and paste that line of code into', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4466, 86, 506.714, 514.714, N'ComputeStatistics, just so I know when we are inside of the GradeBook: :ComputeStatistics method.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4467, 87, 514.714, 521.714, N'Let me run this program again, and I can see that clearly I''m invoking ComputeStatistics on the GradeBook,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4468, 88, 521.714, 527.714, N'even though inside of my program I''ve instantiated a new ThrowAwayGradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4469, 89, 527.714, 532.714, N'So this isn''t quite the behavior that I want, I want to be able to instantiate the ThrowAwayGradeBook,', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4470, 90, 532.714, 536.714, N'and I want that new version of ComputeStatistics to work when I instantiate that GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4471, 91, 536.714, 541.714, N'So let''s take a look at solving that problem in the next clip, but right now I just want you to know that we have', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4472, 92, 541.714, 546.714, N'an inheritance relationship now between ThrowAwayGradeBook and GradeBook.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4473, 93, 546.714, 552.714, N'Anything that I can do with a GradeBook I can also do with a ThrowAwayGradeBook, and when this program', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4474, 94, 552.714, 559.714, N'executes I really am executing against a ThrowAwayGradeBook. that''s the type of object that I pass to', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4475, 95, 559.714, 565.214, N'WriteResults, and SaveGrades, and AddGrades, it''s just that we need it to work a little bit differently.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4476, 96, 565.214, 585.214, N'So let''s talk about that next.', N'ro', N'', 130)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4477, 1, 2, 7.174, N'Polymorphism is the third pillar of object-oriented programming, and if you know a little bit about the Greek', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4478, 2, 7.174, 13.174, N'language, which I don''t, you''d know that poly stands for many, and morph stands for shape, and thus we''re', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4479, 3, 13.174, 19.174, N'talking about the concept of many shapes. that''s a good description for the behavior that we can achieve with C#.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4480, 4, 19.174, 25.174, N'I can have a variable of type GradeBook, and I can point to objects with different shapes, so objects with', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4481, 5, 25.174, 31.174, N'different types, as long as all those objects inherit from or are a GradeBook, then it''s legal.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4482, 6, 31.174, 36.174, N'So my GradeBook variable can point to a GradeBook, but it can also point to a ThrowAwayGradeBook because', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4483, 7, 36.174, 40.174, N'again, another way to think about inheritance is to think about is a relationships.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4484, 8, 40.174, 46.174, N'We say that a ThrowAwayGradeBook is a GradeBook, it derives from GradeBook, GradeBook is a base class,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4485, 9, 46.174, 51.174, N'and any time you have an inheritance relationship you can have a variable typed as a base class that points', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4486, 10, 51.174, 57.174, N'to an object derived from that base class. I cannot have a variable typed as string that holds an integer', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4487, 11, 57.174, 63.174, N'value because those two types have no inheritance relationship, but I can declare a variable typed as object', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4488, 12, 63.174, 70.174, N'and point it to anything, a string, an integer, a date time, a GradeBook, because System.Object is the', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4489, 13, 70.174, 75.174, N'ultimate base class for anything and everything in .NET. Everything in .NET ultimately derives from', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4490, 14, 75.174, 81.174, N'System.Object, so if you declare a class and do not explicitly declare a base class for that class,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4491, 15, 81.174, 87.174, N'the base class is System.Object, just like the code on the screen is being very explicit in saying the class A', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4492, 16, 87.174, 92.174, N'inherits from object. I could leave the :object off and have the same result.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4493, 17, 92.174, 101.174, N'And class B inherits from class A, which inherits from Object. So an instance of B is an A and is an object.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4494, 18, 101.174, 107.174, N'there''s also a keyword in C# to work with System.Object, and that''s just the word object with a lowercase O.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4495, 19, 107.174, 113.174, N'Now in this code, both class A and class B have a DoWork method, and just like with the GradeBooks that we''re', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4496, 20, 113.174, 116.174, N'working with, we want these two methods to behave differently.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4497, 21, 116.174, 122.174, N'Now currently we have a ThrowAwayGradeBook, but we assigned that object to a GradeBook variable,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4498, 22, 122.174, 128.174, N'and when I call ComputeStatistics, we saw that we''re invoking the ComputeStatistics method in the GradeBook,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4499, 23, 128.174, 134.174, N'not the ThrowAwayGradeBook, and that''s because the C# compiler without any other information, is going to', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4500, 24, 134.174, 141.174, N'choose the method to invoke based on the type of the variable. If I define a method or a property with a', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4501, 25, 141.174, 148.174, N'virtual keyword, then the C# compiler will generate code to invoke that method by looking at the type of', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4502, 26, 148.174, 153.174, N'object it''s working against at runtime. Without the virtual keyword the method we invoke is determined by', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4503, 27, 153.174, 159.174, N'the type of variable that we''re invoking the method through. it''s the virtual keyword that gives us', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4504, 28, 159.174, 164.174, N'polymorphism, because now, I can have a variable that points to different objects, and when I invoke methods', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4505, 29, 164.174, 169.174, N'or properties on those objects, they can all behave differently.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4506, 30, 169.174, 175.174, N'Classes that inherit from class A can override that DoWork to behave differently.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4507, 31, 175.174, 180.174, N'let''s get a concrete example with our GradeBook.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4508, 32, 180.174, 184.174, N'Currently in the GradeBook project we are not achieving polymorphism.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4509, 33, 184.174, 191.174, N'we''re not achieving polymorphism because ComputeStatistics in my GradeBook class does not use a virtual', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4510, 34, 191.174, 199.174, N'keyword, and thus, when the C# compiler sees a call to ComputeStatistics through a variable typed as', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4511, 35, 199.174, 203.174, N'GradeBook, the C# compiler will determine the method to call based on the type of this variable.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4512, 36, 203.174, 209.174, N'So it sees GradeBook.ComputeStatistics, it''s going to invoke ComputeStatistics, the one that is defined', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4513, 37, 209.174, 213.174, N'inside of GradeBook.cs. Now let''s do a little bit of an experiment.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4514, 38, 213.174, 220.174, N'let''s temporarily say that WriteResults has to take an object of type ThrowAwayGradeBook, which means I also', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4515, 39, 220.174, 227.174, N'need to type this variable as ThrowAwayGradeBook because WriteResults will no longer accept just a GradeBook,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4516, 40, 227.174, 234.174, N'it has to have a more specific type, the ThrowAwayGradeBook, and now if I run the program, I can see I call', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4517, 41, 234.174, 240.174, N'into ThrowAwayGradeBook: :ComputeStatistics, which calls into GradeBook: :ComputeStatistics, and now the', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4518, 42, 240.174, 246.174, N'average is up to a 90.25 which is an A, We''ve thrown away the lowest grade, which is what we wanted to do.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4519, 43, 246.174, 251.174, N'But I''d like to achieve the same behavior using polymorphism, I''d like to achieve the same behavior leaving', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4520, 44, 251.174, 258.174, N'this variable typed as GradeBook, and having WriteResults take an object that is just a GradeBook,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4521, 45, 258.174, 264.174, N'because with the magic of polymorphism I can implement WriteResults to take a GradeBook and have many', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4522, 46, 264.174, 270.174, N'different types of GradeBooks and have those objects behave differently without me doing any additional work', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4523, 47, 270.174, 276.174, N'inside of WriteResults, or tying myself to a specific type of GradeBook, like the ThrowAwayGradeBook.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4524, 48, 276.174, 283.174, N'In fact, I''m even going to take this line of code and press Ctrl+., and tell Visual Studio that I want to', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4525, 49, 283.174, 291.174, N'extract this into a new method. I''m going to call this method CreateGradeBook, and although it might not', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4526, 50, 291.174, 297.174, N'make a lot of sense here in a simple application like we have with the GradeBook, but there are many times in', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4527, 51, 297.174, 303.174, N'software where you want the flexibility of having something created for you via a factory class,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4528, 52, 303.174, 308.174, N'or a provider, or some sort of infrastructure that''s in your application, you just want something to be', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4529, 53, 308.174, 314.174, N'created for you, know that it has some type like a GradeBook type, that you don''t ultimately want to know', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4530, 54, 314.174, 320.174, N'exactly what type you''re working with. Is it a regular GradeBook, is it a ThrowAwayGradeBook, really all the', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4531, 55, 320.174, 326.174, N'rest of the code that I have inside of Program.cs doesn''t care, so I want to work with variables of type', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4532, 56, 326.174, 332.174, N'GradeBook, but have polymorphic behavior when I invoke methods like ComputeStatistics, and that''s when I have', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4533, 57, 332.174, 341.174, N'to come into GradeBook.cs and use the virtual keyword, because now when the C# compiler sees me invoke', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4534, 58, 341.174, 347.174, N'ComputeStatistics through a variable typed as GradeBook, it''s no longer going to use the type of variable to', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4535, 59, 347.174, 353.174, N'figure out which method to call, instead it''s going to use the type of object, the type that it sees at runtime.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4536, 60, 353.174, 358.174, N'So if it sees ultimately that that GradeBook is a ThrowAwayGradeBook it will go looking to see if the', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4537, 61, 358.174, 365.174, N'ThrowAwayGradeBook overrides ComputeStatistics. And this doesn''t mean that I hide or replace the', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4538, 62, 365.174, 370.174, N'ComputeStatistics method that is in the GradeBook, I can still access that method using', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4539, 63, 370.174, 376.174, N'base.ComputeStatistics, it just means that if someone does invoke ComputeStatistics, I have the ability,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4540, 64, 376.174, 381.174, N'if we''re really working with a ThrowAwayGradeBook to change the behavior of What''s going to happen,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4541, 65, 381.174, 387.174, N'in this case invoke my method that I''ve implemented for ComputeStatistics, instead of the method defined in GradeBook.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4542, 66, 387.174, 393.174, N'And just to go back and talk about what was on the slide GradeBook, I haven''t defined a base class for', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4543, 67, 393.174, 401.174, N'GradeBook, but technically GradeBook does inherit from System.Object, and that''s why inside of Program.cs,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4544, 68, 401.174, 407.174, N'any time I''m using IntelliSense against GradeBook, I can see methods that I haven''t defined in the GradeBook', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4545, 69, 407.174, 413.174, N'methods like get GetHashCode, GetType, ToString, those are all methods that are defined on System.Object,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4546, 70, 413.174, 421.174, N'and those are all methods that I can override. If I just type override in Visual Studio and press space,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4547, 71, 421.174, 426.174, N'Visual Studio is smart enough to figure out which methods that I have my inheritance chain that are virtual', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4548, 72, 426.174, 432.174, N'that I can override. So if I wanted ToString to behave differently, I can override that method,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4549, 73, 432.174, 437.174, N'and provide my own custom implementation of what will happen if someone says book.ToString.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4550, 74, 437.174, 445.174, N'But now we''re working with variables of type GradeBook, but GradeBook has a virtual method, ComputeStatistics,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4551, 75, 445.174, 450.174, N'and ThrowAwayGradeBook, which inherits from GradeBook, it''s going to override that behavior, I should be able', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4552, 76, 450.174, 454.174, N'to achieve polymorphic behavior when I say book.ComputeStatistics.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4553, 77, 454.174, 460.174, N'I''m not going to know exactly what happens at this point at compile time, I don''t know what ComputeStatistics', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4554, 78, 460.174, 465.174, N'will be invoked, because the method that is invoked will depend of the type of object that is passed in here,', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4555, 79, 465.174, 470.174, N'not the type of variable, so Ctrl+F5, and I can see, even though I''m working with a variable of type', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4556, 80, 470.174, 476.174, N'GradeBook, I am calling ThrowAwayGradeBook, and the lowest grade is an 89.5, which means the low grade has', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4557, 81, 476.174, 496.174, N'been thrown away, and the letter grade is an A.', N'ro', N'', 131)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4558, 1, 1.5, 7.615, N'Earlier I said that inheritance and polymorphism are overrated, and I can qualify that now by saying,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4559, 2, 7.615, 11.615, N'inheritance and polymorphism are overrated techniques for code reuse.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4560, 3, 11.615, 16.615, N'You can achieve some fantastic designs with polymorphism, which requires some inheritance, you just need to be', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4561, 4, 16.615, 22.615, N'very careful of the inheritance part. Inheritance binds two classes together into a relationship that', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4562, 5, 22.615, 28.615, N'cannot be broken, and over the years I''ve found that inheritance can make software harder to change and', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4563, 6, 28.615, 34.615, N'harder to understand. Fortunately, there are a couple ways to reduce the amount of rigidity in inheritance,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4564, 7, 34.615, 38.615, N'one way is to use abstract classes, and the other way is to use interfaces.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4565, 8, 38.615, 43.615, N'let''s talk about abstract classes first. An abstract class is a class that you cannot instantiate', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4566, 9, 43.615, 49.615, N'because it is not fully implemented. The code on the screen is showing an abstract class to represent a window.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4567, 10, 49.615, 54.615, N'So the scenario might be that we''re building a UI toolkit, and we need some base type to represent all types', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4568, 11, 54.615, 60.615, N'of windows on the screen, dialog windows, transparent windows, modal windows, this type is abstract,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4569, 12, 60.615, 67.615, N'I know, because it uses the abstract keyword in the type definition, and then the class goes on to define some members.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4570, 13, 67.615, 72.615, N'Every window will have a title, every window will have a draw method, and both title and draw have an', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4571, 14, 72.615, 79.615, N'implementation, they are real working members. If you inherit from window, you don''t need to do anything to', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4572, 15, 79.615, 85.615, N'those members, they are all ready to go, although you can override either the property or the method because they''re both virtual.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4573, 16, 85.615, 89.615, N'And you could, for example, make the window draw itself using a different piece of code.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4574, 17, 89.615, 95.615, N'But then there is the Open method, which is marked abstract, meaning this method has no implementation,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4575, 18, 95.615, 102.615, N'it ends with a semicolon, and there is no body defined. To instantiate any kind of window, you will need to', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4576, 19, 102.615, 106.615, N'derive from this window class and provide an implementation for the Open method.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4577, 20, 106.615, 111.615, N'If you don''t provide an implementation, you''ll be building another abstract class that you cannot instantiate.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4578, 21, 111.615, 116.615, N'But a class that derives from window, and provides a definition for Open, that will be what we call a', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4579, 22, 116.615, 122.615, N'concrete type, it''s something that I can instantiate. So there''s concrete types and abstract types.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4580, 23, 122.615, 128.615, N'You can only instantiate concrete types. If you cannot instantiate an abstract type, why is it useful?', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4581, 24, 128.615, 135.615, N'it''s useful because of polymorphism, because I can declare a variable of type window and use that variable to', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4582, 25, 135.615, 139.615, N'point to any kind of concrete window that derives from this abstract type.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4583, 26, 139.615, 145.615, N'I can interact with any of those windows. I can set the title, I can tell them to draw, I can call open.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4584, 27, 145.615, 149.615, N'Those three members are guaranteed to be there if I have a real window object, it must have been created', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4585, 28, 149.615, 154.615, N'from a concrete derive type. But when I wrote this window class I didn''t know how Open needs to behave,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4586, 29, 154.615, 160.615, N'that''s why it''s left as abstract method, I just know there are other pieces of code in the application that', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4587, 30, 160.615, 166.615, N'need to work with these windows, and they must be able to invoke an Open method to get those windows on the screen.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4588, 31, 166.615, 171.615, N'And again this goes back to topic of complexity, somewhere in the code I could be working with window', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4589, 32, 171.615, 177.615, N'variables, and those window variables are useful because this window type will define everything I need,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4590, 33, 177.615, 182.615, N'I don''t need to know the specific derived type of window that I''m working with, I don''t need to know how it', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4591, 34, 182.615, 187.615, N'was implemented, of if there are 2 types of windows, or 20 types of windows, I just have code that works with', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4592, 35, 187.615, 195.615, N'windows, and that''s simpler and reduces complexity. Now let''s use an example with our GradeBook.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4593, 36, 195.615, 200.615, N'Imagine now that the change requests for GradeBook functionality are coming fast and furious.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4594, 37, 200.615, 205.615, N'The business is discovering all sorts of different uses for our GradeBook, different ways to compute', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4595, 38, 205.615, 210.615, N'statistics, different ways to store the grades, people want grades in a database, or in an XML file,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4596, 39, 210.615, 216.615, N'they want report cards, they want dashboards, and the implementation of GradeBook.cs is starting to feel a', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4597, 40, 216.615, 221.615, N'little bit strained, it''s not fulfilling all the needs of these different types of GradeBooks.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4598, 41, 221.615, 227.615, N'In fact, I might even take a step back and say there''s a more general case of we need to track some grades,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4599, 42, 227.615, 232.615, N'which is something a GradeBook does, but we''re going to add all these other classes that also track grades.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4600, 43, 232.615, 239.615, N'And if that''s the case I might come in to the project and create a more pure type, a type that defines the', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4601, 44, 239.615, 249.615, N'things that I need to do without defining the implementation details, so an abstract class, let''s call it GradeTracker.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4602, 45, 249.615, 256.615, N'In this GradeTracker, I want it to be a public class, but I also want it to be and abstract class,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4603, 46, 256.615, 262.615, N'because ultimately I want GradeBooks and ThrowAwayGradeBooks, I want them all to ultimately inherit from GradeTracker.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4604, 47, 262.615, 266.615, N'But when I''m building the GradeTracker, I only want to focus on the general capabilities of what these', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4605, 48, 266.615, 271.615, N'different types of trackers can do, and I have a pretty good idea of what they need to do just based on the', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4606, 49, 271.615, 279.615, N'program that I''ve written so far. I know, for instance, that I will need the ability to add a new grade to a', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4607, 50, 279.615, 285.615, N'GradeTracker, but what I don''t know is exactly how that grade is going to be stored, is it going to be in a', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4608, 51, 285.615, 289.615, N'list, is going to go into a file, is it going to go into a database?', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4609, 52, 289.615, 295.615, N'I''m going to leave those implementation details to a derive class, so I will mark this method as abstract also.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4610, 53, 295.615, 301.615, N'It has no implementation details. And I want to look at the public implementation details for GradeBook,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4611, 54, 301.615, 304.615, N'and give a GradeTracker all these capabilities, but without the details.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4612, 55, 304.615, 311.615, N'So for example, let''s give all GradeTrackers the ability to ComputeStatistics, we''re just not going to', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4613, 56, 311.615, 316.615, N'provide implementation details there. Now this method will no longer be virtual, virtual methods need an', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4614, 57, 316.615, 322.615, N'implementation, but this method can be abstract and implemented in a derive class.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4615, 58, 322.615, 329.615, N'Back in the GradeBook I will also need to do this with WriteGrades, so let me copy that method, the start of', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4616, 59, 329.615, 338.615, N'that method, paste it here, and this method will also be abstract, and I do need to bring in the System.IO', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4617, 60, 338.615, 346.615, N'namespace for TextWriter, so Ctrl+., and select System.IO, and then back in the GradeBook, I already have', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4618, 61, 346.615, 352.615, N'AddGrade as an abstract member, and now this Name property and the NameChanged event, and the logic to track', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4619, 62, 352.615, 358.615, N'changes, and detect changes, and manage this field, let''s say that this is something that will not change', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4620, 63, 358.615, 362.615, N'throughout all the different GradeTrackers. So what I''m going to do is actually cut this code out of the', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4621, 64, 362.615, 372.615, N'GradeBook, and add it to the GradeTracker, because as an abstract class, this class is allowed to have some implementation details.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4622, 65, 372.615, 380.615, N'So here is a real property that can be used, a Name property, and a NameChanged event, and a private string,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4623, 66, 380.615, 389.615, N'_name, I might want to change this to protected, only if I wanted derive classes to directly access _name,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4624, 67, 389.615, 391.615, N'that''s a decision I have to make, but in this case I''ll make it protected.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4625, 68, 391.615, 397.615, N'And ultimately the entire purpose of GradeTracker is so that I can work with variables of type GradeTracker', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4626, 69, 397.615, 403.615, N'in a place like my program, and not worry about the specific type of GradeTracker that I''m actually operating', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4627, 70, 403.615, 408.615, N'against, just like we did with GradeBook and ThrowAwayGradeBook, but now we''re introducing a new type,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4628, 71, 408.615, 413.615, N'a type that it even has fewer implementation details in it, and ultimately what I would like to do is work', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4629, 72, 413.615, 421.615, N'with a GradeTracker here. Now currently CreateGradeBook returns a type that does not derive from GradeTracker.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4630, 73, 421.615, 426.615, N'I will need to set up GradeBook so that it inherits from GradeTracker.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4631, 74, 426.615, 432.615, N'But before I go over there, let me take this type Name, and I want all these methods, like WriteResults,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4632, 75, 432.615, 439.615, N'and CreateGradeBook, I want them to take parameters of type GradeTracker, in the case of Create return', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4633, 76, 439.615, 446.615, N'something that is a GradeTracker, so that I''m working with this low-level type throughout my program.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4634, 77, 446.615, 454.615, N'And I think I''ve made all the changes there, so let''s come back to GradeBook.cs, and now instead of', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4635, 78, 454.615, 460.615, N'implicitly, or in this case explicitly inheriting from object, let''s have this inherit from GradeTracker.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4636, 79, 460.615, 464.615, N'And there''s just a couple other things that I need to change. You can see I currently have an error,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4637, 80, 464.615, 469.615, N'and if I hover over the red squiggly, Visual Studio tells me that GradeBook does not implement the abstract', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4638, 81, 469.615, 475.615, N'member WriteGrades, or ComputeStatistics, or AddGrade. And the reason is this, when I implement', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4639, 82, 475.615, 482.615, N'ComputeStatistics and GradeBook, if I want this method to provide an implementation for an abstract method', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4640, 83, 482.615, 491.615, N'that is in my base class, then I can no longer use the virtual keyword, instead I have to use the override keyword.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4641, 84, 491.615, 497.615, N'So an abstract method is implicitly a virtual method, therefore ComputeStatistics is a virtual method in my', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4642, 85, 497.615, 503.615, N'base class, and I''m not trying to define a new virtual method, I''m trying to override that existing method,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4643, 86, 503.615, 510.615, N'I''m also going to have to come to WriteGrades, and use the override keyword here, and with AddGrade,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4644, 87, 510.615, 516.615, N'all of these were abstract methods in my base class, therefore they''re virtual and I need to override them.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4645, 88, 516.615, 521.615, N'And now I should be able to press Shift+Ctrl+B to do a build, and my build is successful, let me press', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4646, 89, 521.615, 527.615, N'Ctrl+F5 to run the program, and I can still see that the results are the same, and the results are correct,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4647, 90, 527.615, 533.615, N'and the lowest grade is an 89.5, this is all good. But now inside of my application, I''m working with this', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4648, 91, 533.615, 541.615, N'abstract type GradeTracker, and I no longer care when I call ComputeStatistics, or even AddGrade,', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4649, 92, 541.615, 545.615, N'or WriteGrades what the implementation details are inside of here.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4650, 93, 545.615, 551.615, N'And just so you can see the error, if I try to instantiate a new instance of GradeTracker, that will give me', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4651, 94, 551.615, 557.615, N'an error, I cannot create an instance of an abstract class. So although I can work with GradeTracker', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4652, 95, 557.615, 563.115, N'throughout this program, when I actually instantiate an object, it needs to be a concrete type, so it needs', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4653, 96, 563.115, 583.115, N'to be a GradeBook or a ThrowAwayGradeBook.', N'ro', N'', 132)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4654, 1, 0, 8.051, N'Building an abstract class is one way to define a type to achieve polymorphism, but another approach is to', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4655, 2, 8.051, 15.051, N'define an interface. An interface definition uses the interface keyword, and an interface is a type in the .NET Framework.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4656, 3, 15.051, 20.051, N'Just like the class, struct, and delegate keywords define types, so does interface.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4657, 4, 20.051, 24.051, N'An interface is special because it can never contain any implementation details.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4658, 5, 24.051, 30.051, N'When you define an interface you''re defining an API for an object, that is any object that implements an', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4659, 6, 30.051, 34.051, N'interface is guaranteed to have the members an interface describes.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4660, 7, 34.051, 40.051, N'The code snippet on the screen if for IWindow, and it''s a common naming convention to define interface types', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4661, 8, 40.051, 44.051, N'with a leading capital I. that''s how all the interfaces and the .NET Framework are defined.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4662, 9, 44.051, 50.051, N'So any object that implements IWindow must have a title property that is both readable and writeable,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4663, 10, 50.051, 55.051, N'it also must have a draw method that takes no parameters and returns void, and it must have an Open method,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4664, 11, 55.051, 60.051, N'also a no parameters and returns void. In some ways an interface is like an abstract type,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4665, 12, 60.051, 66.051, N'because in order to create a concrete class that implements this interface, I must implement those three members.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4666, 13, 66.051, 70.051, N'But there is one huge difference between an abstract class and interface.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4667, 14, 70.051, 77.051, N'When I define a class, I can only inherit from a single base class, but I can implement as many interfaces as I like.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4668, 15, 77.051, 84.051, N'I can inherit 1 interface, or 10. I can also inherit from a base class N, implement 10 interfaces, as long as', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4669, 16, 84.051, 89.051, N'I have all the interface members defined. So the interface is the ultimate abstraction,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4670, 17, 89.051, 94.051, N'because an interface allows you to define the API your software needs without defining any of the', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4671, 18, 94.051, 102.051, N'implementation details, and because any class or struct inherit from any interface, interfaces are extremely flexible.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4672, 19, 102.051, 107.051, N'People will occasionally ask me if they should be using abstract base classes or interfaces,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4673, 20, 107.051, 112.051, N'and I generally favor interfaces. that''s just because over the years I''ve never looked at an interface and', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4674, 21, 112.051, 117.051, N'said oh, I wish that was an abstract class. But I have looked at an abstract class and said,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4675, 22, 117.051, 122.051, N'oh, I wish that was an interface, because abstract classes can be a bit rigid, and make for a complicated', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4676, 23, 122.051, 127.051, N'inheritance tree. So I prefer interfaces, but we can always debate this.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4677, 24, 127.051, 130.051, N'Let me show you some interfaces in code.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4678, 25, 130.051, 135.051, N'In the Grades project if I really do have to work with a wide variety of different types of GradeBooks', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4679, 26, 135.051, 142.051, N'and GradeTrackers, I might decide that I want to work with an interface definition instead of an abstract base class.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4680, 27, 142.051, 149.051, N'So instead of a GradeTracker type, I would like an IGradeTracker, where IGradeTracker is an interface that', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4681, 28, 149.051, 153.051, N'defines a programming API so I can add grades and ComputeStatistics.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4682, 29, 153.051, 160.051, N'In Visual Studio if I put the cursor on IGradeTracker and press Ctrl+., Visual Studio will give me an option to', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4683, 30, 160.051, 167.051, N'generate an interface IGradeTracker in a new file, that''s the option I''m going to select, so I press Enter.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4684, 31, 167.051, 173.051, N'And now in the project I have an IGradeTracker.cs, it''s an interface that currently doesn''t define any', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4685, 32, 173.051, 179.051, N'members, so you''ll notice inside of Program.cs, I''m going to have a number of compiler errors, let me go', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4686, 33, 179.051, 186.051, N'ahead and make some changes so that CreateGradeBook returns something that implements IGradeTracker,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4687, 34, 186.051, 196.051, N'and WriteResults takes an IGradeTracker, so does SaveGrades, so does AddGrades, also GetBookName,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4688, 35, 196.051, 201.051, N'and that should be all of the changes that I need. Of course currently since this interface does not define', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4689, 36, 201.051, 210.051, N'any members, I have no ability to WriteGrades, or AddGrades, or do anything useful with an IGradeTracker,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4690, 37, 210.051, 217.051, N'so let me borrow some of the code from GradeTracker. I''m going to take these first three lines and paste', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4691, 38, 217.051, 223.051, N'them into my interface definition. Now inside of an interface, I cannot use an access modifier, so I cannot', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4692, 39, 223.051, 229.051, N'say that a particular method like AddGrade is public, or protected, or private, and that''s because when', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4693, 40, 229.051, 235.051, N'someone has an object that is an instance of IGradeTracker, AddGrade has to be available, and there''s no', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4694, 41, 235.051, 239.051, N'sense in hiding AddGrade or explicitly saying in the interface definition that it has to be public.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4695, 42, 239.051, 244.051, N'Also these methods are implicitly virtual because they''re part of an interface, so I do not need to the', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4696, 43, 244.051, 249.051, N'abstract keyword. And all I''m left with now are these three members, AddGrade, ComputeStatistics,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4697, 44, 249.051, 255.051, N'and WriteGrades, and once again I do need to bring in the System.IO namespace for TextWriter.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4698, 45, 255.051, 261.051, N'And now I have a choice, I can have GradeTracker implement IGradeTracker, I can have GradeBook implement', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4699, 46, 261.051, 267.051, N'IGradeTracker, the way you implement an interface is to use a colon, and list the interface name that you', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4700, 47, 267.051, 274.051, N'want here, so this GradeTracker is now an IGradeTracker, and it''s providing those members that IGradeTracker', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4701, 48, 274.051, 280.051, N'demands, even if they are abstract members, so I''m satisfying the constraint to this interface.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4702, 49, 280.051, 285.051, N'But of course What''s great about implementing an interface, or inheriting from an interface,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4703, 50, 285.051, 292.051, N'is I can also choose a base class that I want to inherit from. And if you do want to derive from a specific', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4704, 51, 292.051, 299.051, N'class in addition to implementing an interface, the class that you''re inheriting from, that has to come first', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4705, 52, 299.051, 306.051, N'in this list, so I can say object, IGradeTracker, but really no one ever clutters up their code by', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4706, 53, 306.051, 312.051, N'explicitly saying they inherit from System.Object, that''s always implicit, so I''m going to leave that piece off.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4707, 54, 312.051, 320.051, N'Now back in Program.cs, I''m still going to have at least one error, because my interface doesn''t say anything', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4708, 55, 320.051, 326.051, N'about this object having a property name. And the C# compiler says, you''re passing me an IGradeTracker,', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4709, 56, 326.051, 333.051, N'but an object that implements this interface isn''t guaranteed to have a name property, so it''s giving me an error message.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4710, 57, 333.051, 339.051, N'I will also need to go my IGradeTracker, and say that anything that implements this interface needs to have a', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4711, 58, 339.051, 347.051, N'Name property that you can read and write. And now I have an inheritance hierarchy where even my', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4712, 59, 347.051, 354.051, N'ThrowAwayGradeBook is an IGradeTracker, because ThrowAwayGradeBook inherits from a class, which inherits from', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4713, 60, 354.051, 359.051, N'a class, which implements this interface IGradeTracker. And now I should be able to build and run the', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4714, 61, 359.051, 366.051, N'program, and it''s still behaving the same, but my program is working through an interface, and that again', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4715, 62, 366.051, 371.051, N'increases the flexibility of the software. Previously when I was working with the GradeTracker, I could get', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4716, 63, 371.051, 378.051, N'back any type of object, but it ultimately had to be something that derived from this abstract class GradeTracker.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4717, 64, 378.051, 384.051, N'By working with an interface I can work with an even wider variety of objects, objects whose class definition', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4718, 65, 384.051, 390.051, N'doesn''t even inherit from a GradeTracker or a GradeBook. The only guarantee that I need is that the object', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4719, 66, 390.051, 410.051, N'that''s being created and worked with here implements this interface IGradeTracker.', N'ro', N'', 133)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4720, 1, 0, 7.687, N'Now that we know about interfaces, I wanted to tell you that .NET is full of many useful interface definitions.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4721, 2, 7.687, 12.687, N'Because the interfaces are flexible, and because C# allows you to implement multiple interfaces on a type,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4722, 3, 12.687, 16.687, N'you''ll see interfaces in use to provide many low-level and essential features.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4723, 4, 16.687, 22.687, N'For example, one interface We''ve already used is IDisposible. You might remember in the last module when', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4724, 5, 22.687, 27.687, N'we talked about exception handling, I showed you that we can have a using statement in C# to automatically close', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4725, 6, 27.687, 34.687, N'a file, even if there is an exception. The interface that the using statement looks for is IDisposible.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4726, 7, 34.687, 38.687, N'Any object that implements IDisposible is an object that needs some help cleaning up.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4727, 8, 38.687, 43.687, N'So it opens files, or database connections, or network connections, and in order to keep this system running', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4728, 9, 43.687, 48.687, N'in a good state, we want to make sure these resources are properly cleaned up, that''s the purpose of IDisposible.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4729, 10, 48.687, 54.687, N'IDisposible forces an object to have a dispose method that you can call directly, or indirectly through a', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4730, 11, 54.687, 60.687, N'using statement, and dispose will clean up resources. Another interface is IEnumerable.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4731, 12, 60.687, 65.687, N'An object that implements this interface is an object that you can enumerate, that is you can use it as a', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4732, 13, 65.687, 69.687, N'collection in a foreach statement. there''s also INotifyPropertyChanged.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4733, 14, 69.687, 74.687, N'This is an interface you''ll implement if you get into desktop XAML development, it requires you to raise an', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4734, 15, 74.687, 80.687, N'event when a property changes its value, much like we''re doing in the GradeBook when we raise a NameChangedEvent.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4735, 16, 80.687, 86.687, N'The INotifyPropertyChanged interface defines an event that a UI framework can listen to and know when to', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4736, 17, 86.687, 92.687, N'update the data on the screen. And then there are lots of little interfaces, interfaces like IComparable,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4737, 18, 92.687, 97.687, N'IEquatable, these interfaces allow you to compare objects, or check to see if two objects are equal.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4738, 19, 97.687, 102.687, N'And these types of interfaces are commonly used by collections, like the sorted list collection,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4739, 20, 102.687, 109, N'because the sorted list can use methods defined by IComparable to compare objects and keep them in sorted order.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4740, 21, 109, 112, N'let''s take a look.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4741, 22, 112, 118, N'Inside of the WriteResults method let''s say that instead of just writing the statistical results to the', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4742, 23, 118, 120.687, N'screen, I also want the ability to write out the individual grades.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4743, 24, 120.687, 123.687, N'And ideally what I''d like to be able to do is a foreach statement.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4744, 25, 123.687, 130.687, N'So I''d like to be able to say, foreach grade that is in the book, or the tracker, I''d like to be able to', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4745, 26, 130.687, 136.687, N'Console.WriteLine that grade. But currently the C# compiler is going to give me an error because it knows', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4746, 27, 136.687, 140.687, N'that book is not something that I can use the foreach statement against.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4747, 28, 140.687, 146.687, N'Technically What''s happening is an object that implements IGradeTracker is not guaranteed to have a public', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4748, 29, 146.687, 152.687, N'method GetEnumerator. At the lowest level that''s all an object needs, just a method called GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4749, 30, 152.687, 156.687, N'But it''s more common if you have a type that you explicitly want to make enumerable, you will say that that', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4750, 31, 156.687, 163.687, N'type inherits from the IEnumerable interface. So if I swing over to IGradeTracker, I can say that an', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4751, 32, 163.687, 173.687, N'IGradeTracker is something that is also IEnumerable, and IEnumerable is an interface that is defined in the', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4752, 33, 173.687, 178.687, N'System.Collections namespace, so I need to have a using statement for System.Collections.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4753, 34, 178.687, 186.687, N'And now back in Program.cs, I will have no problem using a foreach statement with an IGradeTracker,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4754, 35, 186.687, 191.687, N'because anything that isn''t IGradeTracker is guaranteed to have GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4755, 36, 191.687, 195.687, N'But just because I have that interface listed on IGradeTracker doesn''t mean I''m completely finished,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4756, 37, 195.687, 202.687, N'because now what the C# complier will tell me if I do a build, is that I don''t have any implementation of IEnumerable.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4757, 38, 202.687, 212.687, N'So GradeTracker, our abstract base class, it has to implement IGradeTracker, it does not define the method GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4758, 39, 212.687, 217.687, N'And where does GetEnumerator come from? Well remember when I''m implementing an interface, I have to provide', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4759, 40, 217.687, 220.687, N'a definition for all of the members that that interface defines.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4760, 41, 220.687, 227.687, N'So IGradeTracker defines four members, IEnumerable, if I go to the definition for that by pressing F12,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4761, 42, 227.687, 232.687, N'it''s a very simple interface that only defines one method that you have to have, it''s a method called', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4762, 43, 232.687, 239.687, N'GetEnumerator, and GetEnumerator has to return an object that implements another interface, an IEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4763, 44, 239.687, 244.687, N'Something that implements that interface knows how to step through a collection one object at a time.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4764, 45, 244.687, 249.687, N'And this is an extremely powerful interface definition, because you can hide all sorts of work behind an', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4765, 46, 249.687, 254.687, N'IEnumerable and an IEnumerator. So what I currently need to do is I need to guarantee the GradeTracker', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4766, 47, 254.687, 267.687, N'implements this interface, so I need to have a method, a public method, that returns an IEnumerator, and it''s called GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4767, 48, 267.687, 272.687, N'But the problem is a GradeTracker will not know how to enumerate the grades that it holds.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4768, 49, 272.687, 277.687, N'So first, IEnumerator, that''s also an interface defined in the System.Collections namespace,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4769, 50, 277.687, 283.687, N'I''m going to bring that namespace in. And the problem is now I do not how to implement this method inside of', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4770, 51, 283.687, 288.687, N'an abstract class GradeTracker. So I will also mark this member as abstract.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4771, 52, 288.687, 293.687, N'I don''t know how to implement GetEnumerator, because from the perspective of GradeTracker, I don''t know where', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4772, 53, 293.687, 299.687, N'the grades are stored, are they in memory in a list? Are they in a database? Are they behind a web service call?', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4773, 54, 299.687, 305.687, N'I don''t know, but I need to have this member here to satisfy the constraint that I am in IGradeTracker,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4774, 55, 305.687, 311.687, N'I''ll just mark this member as abstract, so whoever derives from this class will have to provide an implementation.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4775, 56, 311.687, 317.687, N'Now before we do that, I just want to show that a GradeTracker could implement as many interfaces as it likes.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4776, 57, 317.687, 323.687, N'So it could derive from a specific base class, like object, and then I could go on and say this also', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4777, 58, 323.687, 329.687, N'implements IGradeTracker, and IDisposible, and IClonable, I could list all sorts of interfaces,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4778, 59, 329.687, 334.687, N'or course, I would have to have the members that these interfaces define, but I''m just trying to show you the', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4779, 60, 334.687, 341.687, N'syntax for how this would work, I can list interfaces, as many I need, and just separate them with commas.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4780, 61, 341.687, 349.687, N'So let''s go back to being just IGradeTracker, and of course if I do a Build now, my problem is pushed up one class.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4781, 62, 349.687, 355.687, N'Now if go to the GradeBook, well I''ve said that GradeBook is a concrete type, it''s not using the abstract', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4782, 63, 355.687, 361.687, N'keyword here, and therefore I need to provide an implementation for GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4783, 64, 361.687, 368.687, N'And fortunately, a list is something that''s also IEnumerable, so all the collection classes in .NET,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4784, 65, 368.687, 376.687, N'they implement the IEnumerable interface, and so I could provide an override for GetEnumerator,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4785, 66, 376.687, 382.687, N'that simply calls into Grades, and returns Grades.GetEnumerator.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4786, 67, 382.687, 388.687, N'that''s the easiest way to implement this logic, and so now, inside of Program.cs, when I say foreach across', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4787, 68, 388.687, 394.687, N'an IGradeTracker, I don''t know if I''ll be getting those numbers back out of a list, or a database, or a web', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4788, 69, 394.687, 400.687, N'service call, again that''s the great advantage to using interfaces, you can build very powerful abstractions,', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4789, 70, 400.687, 406.687, N'and hide all sorts of complexity behind simple polymorphism. If I run the program, I am now printing out the', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4790, 71, 406.687, 411, N'grades, as well as the statistics, as well as the letter grade.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4791, 72, 411, 431, N'And hopefully that will demonstrate some of the flexibilities that interfaces can provide.', N'ro', N'', 134)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4792, 1, 0, 4, N'If you enjoyed this course you might enjoy a few of my other courses.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4793, 2, 4, 7.5, N'I do suggest you watch these to get the complete C# fundamentals experience.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4794, 3, 7.5, 12.726, N'First is my C# Generics course, at least watch a couple modules here because generics are an incredibly', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4795, 4, 12.726, 17.726, N'important feature of the C# language. We just didn''t have time to cover generics in this course with the', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4796, 5, 17.726, 23.726, N'amount of detail they deserve, although we did use a generic type when we declared a list to store our grades.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4797, 6, 23.726, 29.726, N'Another important set of features in the C# language are the LINQ features, where LINQ stands for Language Integrated Query.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4798, 7, 29.726, 34.726, N'It sounds like something data related, but in truth, LINQ added a number of wonderful features to the C#', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4799, 8, 34.726, 39.726, N'language, features like extension methods and lambda expressions, and you don''t have the full C# experience', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4800, 9, 39.726, 45.726, N'until you see these features. And finally there is my C# Fundamentals Part 2 course, which is C# programming', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4801, 10, 45.726, 50.726, N'paradigms, this course includes some additional material on not just object-oriented programming,', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4802, 11, 50.726, 55.726, N'but also functional programming, and what I call language-oriented programming with C#.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4803, 12, 55.726, 75.726, N'I also offer some tips, tricks, and rules to live by as a C# developer.', N'ro', N'', 135)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4804, 1, 0, 7, N'In this module we looked at object-oriented programming in C#, we talked about encapsulation, inheritance,', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4805, 2, 7, 12, N'and polymorphism, and I showed you how to use abstract classes and interfaces.', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4806, 3, 12, 16, N'If all this feels a bit overwhelming, and you''re not sure when to use an interface and when to use an', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4807, 4, 16, 20, N'abstract class, and when to use an inheritance, I''d say that''s normal.', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4808, 5, 20, 24.5, N'I believe object-oriented programming takes years to master. I started my first object-oriented language in', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4809, 6, 24.5, 31, N'1992 with C++, and with every year that goes by I think I know object-oriented programming just a little bit better.', N'ro', N'', 136)");
            Sql("INSERT INTO [dbo].[VideoPhrases] ([Id], [OrderNumber], [StartTime], [EndTime], [Phrase], [TranslateLanguage], [PhraseTranslated], [Video_Id]) VALUES (4810, 7, 31, 51, N'And that''s it for C# Fundamentals Part 1. I hope you enjoyed the course, and continue on with the C# language.', N'ro', N'', 136)");

            Sql("SET IDENTITY_INSERT [dbo].[VideoPhrases] OFF");
        }
        
        public override void Down()
        {
        }
    }
}
